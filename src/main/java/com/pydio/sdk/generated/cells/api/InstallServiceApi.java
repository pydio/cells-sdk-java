/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.generated.cells.api;

import com.pydio.sdk.generated.cells.ApiCallback;
import com.pydio.sdk.generated.cells.ApiClient;
import com.pydio.sdk.generated.cells.ApiException;
import com.pydio.sdk.generated.cells.ApiResponse;
import com.pydio.sdk.generated.cells.Pair;
import com.pydio.sdk.generated.cells.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.pydio.sdk.generated.cells.Configuration;
import com.pydio.sdk.generated.cells.ProgressRequestBody;
import com.pydio.sdk.generated.cells.model.InstallGetAgreementResponse;
import com.pydio.sdk.generated.cells.model.InstallGetDefaultsResponse;
import com.pydio.sdk.generated.cells.model.InstallInstallEventsResponse;
import com.pydio.sdk.generated.cells.model.InstallInstallRequest;
import com.pydio.sdk.generated.cells.model.InstallInstallResponse;
import com.pydio.sdk.generated.cells.model.InstallPerformCheckRequest;
import com.pydio.sdk.generated.cells.model.InstallPerformCheckResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InstallServiceApi {
    private ApiClient apiClient;

    public InstallServiceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public InstallServiceApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getAgreement
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getAgreementCall(final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/install/agreement";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getAgreementValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = getAgreementCall(progressListener, progressRequestListener);
        return call;

    }

    /**
     * Load a textual agreement for using the software
     * 
     * @return InstallGetAgreementResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.sdk.generated.cells.model.InstallGetAgreementResponse getAgreement() throws ApiException {
        ApiResponse<com.pydio.sdk.generated.cells.model.InstallGetAgreementResponse> resp = getAgreementWithHttpInfo();
        return resp.getData();
    }

    /**
     * Load a textual agreement for using the software
     * 
     * @return ApiResponse&lt;InstallGetAgreementResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.sdk.generated.cells.model.InstallGetAgreementResponse> getAgreementWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = getAgreementValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<com.pydio.sdk.generated.cells.model.InstallGetAgreementResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Load a textual agreement for using the software (asynchronously)
     * 
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getAgreementAsync(final ApiCallback<com.pydio.sdk.generated.cells.model.InstallGetAgreementResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getAgreementValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InstallGetAgreementResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getInstall
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getInstallCall(final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/install";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getInstallValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = getInstallCall(progressListener, progressRequestListener);
        return call;

    }

    /**
     * Loads default values for install form
     * 
     * @return InstallGetDefaultsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.sdk.generated.cells.model.InstallGetDefaultsResponse getInstall() throws ApiException {
        ApiResponse<com.pydio.sdk.generated.cells.model.InstallGetDefaultsResponse> resp = getInstallWithHttpInfo();
        return resp.getData();
    }

    /**
     * Loads default values for install form
     * 
     * @return ApiResponse&lt;InstallGetDefaultsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.sdk.generated.cells.model.InstallGetDefaultsResponse> getInstallWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = getInstallValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<com.pydio.sdk.generated.cells.model.InstallGetDefaultsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Loads default values for install form (asynchronously)
     * 
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getInstallAsync(final ApiCallback<com.pydio.sdk.generated.cells.model.InstallGetDefaultsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getInstallValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InstallGetDefaultsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for installEvents
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call installEventsCall(final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/install/events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call installEventsValidateBeforeCall(final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        

        com.squareup.okhttp.Call call = installEventsCall(progressListener, progressRequestListener);
        return call;

    }

    /**
     * 
     * 
     * @return InstallInstallEventsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.sdk.generated.cells.model.InstallInstallEventsResponse installEvents() throws ApiException {
        ApiResponse<com.pydio.sdk.generated.cells.model.InstallInstallEventsResponse> resp = installEventsWithHttpInfo();
        return resp.getData();
    }

    /**
     * 
     * 
     * @return ApiResponse&lt;InstallInstallEventsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.sdk.generated.cells.model.InstallInstallEventsResponse> installEventsWithHttpInfo() throws ApiException {
        com.squareup.okhttp.Call call = installEventsValidateBeforeCall(null, null);
        Type localVarReturnType = new TypeToken<com.pydio.sdk.generated.cells.model.InstallInstallEventsResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call installEventsAsync(final ApiCallback<com.pydio.sdk.generated.cells.model.InstallInstallEventsResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = installEventsValidateBeforeCall(progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InstallInstallEventsResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for performInstallCheck
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call performInstallCheckCall(com.pydio.sdk.generated.cells.model.InstallPerformCheckRequest body, final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/install/check";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call performInstallCheckValidateBeforeCall(com.pydio.sdk.generated.cells.model.InstallPerformCheckRequest body, final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling performInstallCheck(Async)");
        }
        

        com.squareup.okhttp.Call call = performInstallCheckCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Perform a check during install (like a valid DB connection)
     * 
     * @param body  (required)
     * @return InstallPerformCheckResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.sdk.generated.cells.model.InstallPerformCheckResponse performInstallCheck(com.pydio.sdk.generated.cells.model.InstallPerformCheckRequest body) throws ApiException {
        ApiResponse<com.pydio.sdk.generated.cells.model.InstallPerformCheckResponse> resp = performInstallCheckWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Perform a check during install (like a valid DB connection)
     * 
     * @param body  (required)
     * @return ApiResponse&lt;InstallPerformCheckResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.sdk.generated.cells.model.InstallPerformCheckResponse> performInstallCheckWithHttpInfo(com.pydio.sdk.generated.cells.model.InstallPerformCheckRequest body) throws ApiException {
        com.squareup.okhttp.Call call = performInstallCheckValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<com.pydio.sdk.generated.cells.model.InstallPerformCheckResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Perform a check during install (like a valid DB connection) (asynchronously)
     * 
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call performInstallCheckAsync(InstallPerformCheckRequest body, final ApiCallback<com.pydio.sdk.generated.cells.model.InstallPerformCheckResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = performInstallCheckValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InstallPerformCheckResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for postInstall
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call postInstallCall(com.pydio.sdk.generated.cells.model.InstallInstallRequest body, final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/install";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call postInstallValidateBeforeCall(com.pydio.sdk.generated.cells.model.InstallInstallRequest body, final ProgressResponseBody.ProgressListener progressListener, final com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling postInstall(Async)");
        }
        

        com.squareup.okhttp.Call call = postInstallCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Post values to be saved for install
     * 
     * @param body  (required)
     * @return InstallInstallResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.sdk.generated.cells.model.InstallInstallResponse postInstall(com.pydio.sdk.generated.cells.model.InstallInstallRequest body) throws ApiException {
        ApiResponse<com.pydio.sdk.generated.cells.model.InstallInstallResponse> resp = postInstallWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Post values to be saved for install
     * 
     * @param body  (required)
     * @return ApiResponse&lt;InstallInstallResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.sdk.generated.cells.model.InstallInstallResponse> postInstallWithHttpInfo(com.pydio.sdk.generated.cells.model.InstallInstallRequest body) throws ApiException {
        com.squareup.okhttp.Call call = postInstallValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<com.pydio.sdk.generated.cells.model.InstallInstallResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Post values to be saved for install (asynchronously)
     * 
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call postInstallAsync(InstallInstallRequest body, final ApiCallback<com.pydio.sdk.generated.cells.model.InstallInstallResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        com.pydio.sdk.generated.cells.ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = postInstallValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InstallInstallResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
