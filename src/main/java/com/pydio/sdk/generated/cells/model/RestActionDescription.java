/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.generated.cells.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

/**
 * RestActionDescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-23T18:11:59.271+02:00")



public class RestActionDescription {
  @SerializedName("Name")
  private String name = null;

  @SerializedName("Icon")
  private String icon = null;

  @SerializedName("Label")
  private String label = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("SummaryTemplate")
  private String summaryTemplate = null;

  @SerializedName("HasForm")
  private Boolean hasForm = null;

  @SerializedName("FormModule")
  private String formModule = null;

  @SerializedName("FormModuleProps")
  private String formModuleProps = null;

  @SerializedName("Category")
  private String category = null;

  @SerializedName("Tint")
  private String tint = null;

  @SerializedName("InputDescription")
  private String inputDescription = null;

  @SerializedName("OutputDescription")
  private String outputDescription = null;

  @SerializedName("IsInternal")
  private Boolean isInternal = null;

  public RestActionDescription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public RestActionDescription icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @ApiModelProperty(value = "")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public RestActionDescription label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public RestActionDescription description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public RestActionDescription summaryTemplate(String summaryTemplate) {
    this.summaryTemplate = summaryTemplate;
    return this;
  }

   /**
   * Get summaryTemplate
   * @return summaryTemplate
  **/
  @ApiModelProperty(value = "")
  public String getSummaryTemplate() {
    return summaryTemplate;
  }

  public void setSummaryTemplate(String summaryTemplate) {
    this.summaryTemplate = summaryTemplate;
  }

  public RestActionDescription hasForm(Boolean hasForm) {
    this.hasForm = hasForm;
    return this;
  }

   /**
   * Get hasForm
   * @return hasForm
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasForm() {
    return hasForm;
  }

  public void setHasForm(Boolean hasForm) {
    this.hasForm = hasForm;
  }

  public RestActionDescription formModule(String formModule) {
    this.formModule = formModule;
    return this;
  }

   /**
   * Get formModule
   * @return formModule
  **/
  @ApiModelProperty(value = "")
  public String getFormModule() {
    return formModule;
  }

  public void setFormModule(String formModule) {
    this.formModule = formModule;
  }

  public RestActionDescription formModuleProps(String formModuleProps) {
    this.formModuleProps = formModuleProps;
    return this;
  }

   /**
   * Get formModuleProps
   * @return formModuleProps
  **/
  @ApiModelProperty(value = "")
  public String getFormModuleProps() {
    return formModuleProps;
  }

  public void setFormModuleProps(String formModuleProps) {
    this.formModuleProps = formModuleProps;
  }

  public RestActionDescription category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public RestActionDescription tint(String tint) {
    this.tint = tint;
    return this;
  }

   /**
   * Get tint
   * @return tint
  **/
  @ApiModelProperty(value = "")
  public String getTint() {
    return tint;
  }

  public void setTint(String tint) {
    this.tint = tint;
  }

  public RestActionDescription inputDescription(String inputDescription) {
    this.inputDescription = inputDescription;
    return this;
  }

   /**
   * Get inputDescription
   * @return inputDescription
  **/
  @ApiModelProperty(value = "")
  public String getInputDescription() {
    return inputDescription;
  }

  public void setInputDescription(String inputDescription) {
    this.inputDescription = inputDescription;
  }

  public RestActionDescription outputDescription(String outputDescription) {
    this.outputDescription = outputDescription;
    return this;
  }

   /**
   * Get outputDescription
   * @return outputDescription
  **/
  @ApiModelProperty(value = "")
  public String getOutputDescription() {
    return outputDescription;
  }

  public void setOutputDescription(String outputDescription) {
    this.outputDescription = outputDescription;
  }

  public RestActionDescription isInternal(Boolean isInternal) {
    this.isInternal = isInternal;
    return this;
  }

   /**
   * If action is declared internal, it is hidden to avoid polluting the list.
   * @return isInternal
  **/
  @ApiModelProperty(value = "If action is declared internal, it is hidden to avoid polluting the list.")
  public Boolean isIsInternal() {
    return isInternal;
  }

  public void setIsInternal(Boolean isInternal) {
    this.isInternal = isInternal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestActionDescription restActionDescription = (RestActionDescription) o;
    return Objects.equals(this.name, restActionDescription.name) &&
        Objects.equals(this.icon, restActionDescription.icon) &&
        Objects.equals(this.label, restActionDescription.label) &&
        Objects.equals(this.description, restActionDescription.description) &&
        Objects.equals(this.summaryTemplate, restActionDescription.summaryTemplate) &&
        Objects.equals(this.hasForm, restActionDescription.hasForm) &&
        Objects.equals(this.formModule, restActionDescription.formModule) &&
        Objects.equals(this.formModuleProps, restActionDescription.formModuleProps) &&
        Objects.equals(this.category, restActionDescription.category) &&
        Objects.equals(this.tint, restActionDescription.tint) &&
        Objects.equals(this.inputDescription, restActionDescription.inputDescription) &&
        Objects.equals(this.outputDescription, restActionDescription.outputDescription) &&
        Objects.equals(this.isInternal, restActionDescription.isInternal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, icon, label, description, summaryTemplate, hasForm, formModule, formModuleProps, category, tint, inputDescription, outputDescription, isInternal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestActionDescription {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    summaryTemplate: ").append(toIndentedString(summaryTemplate)).append("\n");
    sb.append("    hasForm: ").append(toIndentedString(hasForm)).append("\n");
    sb.append("    formModule: ").append(toIndentedString(formModule)).append("\n");
    sb.append("    formModuleProps: ").append(toIndentedString(formModuleProps)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    tint: ").append(toIndentedString(tint)).append("\n");
    sb.append("    inputDescription: ").append(toIndentedString(inputDescription)).append("\n");
    sb.append("    outputDescription: ").append(toIndentedString(outputDescription)).append("\n");
    sb.append("    isInternal: ").append(toIndentedString(isInternal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

