/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.core.api.cells.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.sdk.core.api.cells.model.TreeChangeLog;
import com.pydio.sdk.core.api.cells.model.TreeNodeType;
import com.pydio.sdk.core.api.cells.model.TreeWorkspaceRelativePath;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * TreeNode
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-23T18:11:59.271+02:00")



public class TreeNode {
  @SerializedName("Uuid")
  private String uuid = null;

  @SerializedName("Path")
  private String path = null;

  @SerializedName("Type")
  private TreeNodeType type = null;

  @SerializedName("Size")
  private String size = null;

  @SerializedName("MTime")
  private String mtime = null;

  @SerializedName("Mode")
  private Integer mode = null;

  @SerializedName("Etag")
  private String etag = null;

  @SerializedName("Commits")
  private List<TreeChangeLog> commits = null;

  @SerializedName("MetaStore")
  private Map<String, String> metaStore = null;

  @SerializedName("AppearsIn")
  private List<TreeWorkspaceRelativePath> appearsIn = null;

  public TreeNode uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public TreeNode path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @ApiModelProperty(value = "")
  public String getPath() {
    return path;
  }

  public void setPath(String path) {
    this.path = path;
  }

  public TreeNode type(TreeNodeType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TreeNodeType getType() {
    return type;
  }

  public void setType(TreeNodeType type) {
    this.type = type;
  }

  public TreeNode size(String size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(value = "")
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }

  public TreeNode mtime(String mtime) {
    this.mtime = mtime;
    return this;
  }

   /**
   * Get mtime
   * @return mtime
  **/
  @ApiModelProperty(value = "")
  public String getMtime() {
    return mtime;
  }

  public void setMtime(String mtime) {
    this.mtime = mtime;
  }

  public TreeNode mode(Integer mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @ApiModelProperty(value = "")
  public Integer getMode() {
    return mode;
  }

  public void setMode(Integer mode) {
    this.mode = mode;
  }

  public TreeNode etag(String etag) {
    this.etag = etag;
    return this;
  }

   /**
   * Get etag
   * @return etag
  **/
  @ApiModelProperty(value = "")
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }

  public TreeNode commits(List<TreeChangeLog> commits) {
    this.commits = commits;
    return this;
  }

  public TreeNode addCommitsItem(TreeChangeLog commitsItem) {
    if (this.commits == null) {
      this.commits = new ArrayList<TreeChangeLog>();
    }
    this.commits.add(commitsItem);
    return this;
  }

   /**
   * Get commits
   * @return commits
  **/
  @ApiModelProperty(value = "")
  public List<TreeChangeLog> getCommits() {
    return commits;
  }

  public void setCommits(List<TreeChangeLog> commits) {
    this.commits = commits;
  }

  public TreeNode metaStore(Map<String, String> metaStore) {
    this.metaStore = metaStore;
    return this;
  }

  public TreeNode putMetaStoreItem(String key, String metaStoreItem) {
    if (this.metaStore == null) {
      this.metaStore = new HashMap<String, String>();
    }
    this.metaStore.put(key, metaStoreItem);
    return this;
  }

   /**
   * Get metaStore
   * @return metaStore
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetaStore() {
    return metaStore;
  }

  public void setMetaStore(Map<String, String> metaStore) {
    this.metaStore = metaStore;
  }

  public TreeNode appearsIn(List<TreeWorkspaceRelativePath> appearsIn) {
    this.appearsIn = appearsIn;
    return this;
  }

  public TreeNode addAppearsInItem(TreeWorkspaceRelativePath appearsInItem) {
    if (this.appearsIn == null) {
      this.appearsIn = new ArrayList<TreeWorkspaceRelativePath>();
    }
    this.appearsIn.add(appearsInItem);
    return this;
  }

   /**
   * Get appearsIn
   * @return appearsIn
  **/
  @ApiModelProperty(value = "")
  public List<TreeWorkspaceRelativePath> getAppearsIn() {
    return appearsIn;
  }

  public void setAppearsIn(List<TreeWorkspaceRelativePath> appearsIn) {
    this.appearsIn = appearsIn;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TreeNode treeNode = (TreeNode) o;
    return Objects.equals(this.uuid, treeNode.uuid) &&
        Objects.equals(this.path, treeNode.path) &&
        Objects.equals(this.type, treeNode.type) &&
        Objects.equals(this.size, treeNode.size) &&
        Objects.equals(this.mtime, treeNode.mtime) &&
        Objects.equals(this.mode, treeNode.mode) &&
        Objects.equals(this.etag, treeNode.etag) &&
        Objects.equals(this.commits, treeNode.commits) &&
        Objects.equals(this.metaStore, treeNode.metaStore) &&
        Objects.equals(this.appearsIn, treeNode.appearsIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, path, type, size, mtime, mode, etag, commits, metaStore, appearsIn);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TreeNode {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    mtime: ").append(toIndentedString(mtime)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    commits: ").append(toIndentedString(commits)).append("\n");
    sb.append("    metaStore: ").append(toIndentedString(metaStore)).append("\n");
    sb.append("    appearsIn: ").append(toIndentedString(appearsIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

