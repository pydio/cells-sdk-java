/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.core.api.cells.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.sdk.core.api.cells.model.InstallCheckResult;
import com.pydio.sdk.core.api.cells.model.InstallProxyConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InstallInstallConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-23T18:11:59.271+02:00")



public class InstallInstallConfig {
  @SerializedName("internalUrl")
  private String internalUrl = null;

  @SerializedName("dbConnectionType")
  private String dbConnectionType = null;

  @SerializedName("dbTCPHostname")
  private String dbTCPHostname = null;

  @SerializedName("dbTCPPort")
  private String dbTCPPort = null;

  @SerializedName("dbTCPName")
  private String dbTCPName = null;

  @SerializedName("dbTCPUser")
  private String dbTCPUser = null;

  @SerializedName("dbTCPPassword")
  private String dbTCPPassword = null;

  @SerializedName("dbSocketFile")
  private String dbSocketFile = null;

  @SerializedName("dbSocketName")
  private String dbSocketName = null;

  @SerializedName("dbSocketUser")
  private String dbSocketUser = null;

  @SerializedName("dbSocketPassword")
  private String dbSocketPassword = null;

  @SerializedName("dbManualDSN")
  private String dbManualDSN = null;

  @SerializedName("dbUseDefaults")
  private Boolean dbUseDefaults = null;

  @SerializedName("dsName")
  private String dsName = null;

  @SerializedName("dsPort")
  private String dsPort = null;

  @SerializedName("dsType")
  private String dsType = null;

  @SerializedName("dsS3Custom")
  private String dsS3Custom = null;

  @SerializedName("dsS3CustomRegion")
  private String dsS3CustomRegion = null;

  @SerializedName("dsS3ApiKey")
  private String dsS3ApiKey = null;

  @SerializedName("dsS3ApiSecret")
  private String dsS3ApiSecret = null;

  @SerializedName("dsS3BucketDefault")
  private String dsS3BucketDefault = null;

  @SerializedName("dsS3BucketPersonal")
  private String dsS3BucketPersonal = null;

  @SerializedName("dsS3BucketCells")
  private String dsS3BucketCells = null;

  @SerializedName("dsS3BucketBinaries")
  private String dsS3BucketBinaries = null;

  @SerializedName("dsS3BucketThumbs")
  private String dsS3BucketThumbs = null;

  @SerializedName("dsS3BucketVersions")
  private String dsS3BucketVersions = null;

  @SerializedName("dsFolder")
  private String dsFolder = null;

  @SerializedName("frontendHosts")
  private String frontendHosts = null;

  @SerializedName("frontendLogin")
  private String frontendLogin = null;

  @SerializedName("frontendPassword")
  private String frontendPassword = null;

  @SerializedName("frontendRepeatPassword")
  private String frontendRepeatPassword = null;

  @SerializedName("frontendApplicationTitle")
  private String frontendApplicationTitle = null;

  @SerializedName("frontendDefaultLanguage")
  private String frontendDefaultLanguage = null;

  @SerializedName("licenseRequired")
  private Boolean licenseRequired = null;

  @SerializedName("licenseString")
  private String licenseString = null;

  @SerializedName("CheckResults")
  private List<InstallCheckResult> checkResults = null;

  @SerializedName("ProxyConfig")
  private InstallProxyConfig proxyConfig = null;

  public InstallInstallConfig internalUrl(String internalUrl) {
    this.internalUrl = internalUrl;
    return this;
  }

   /**
   * Get internalUrl
   * @return internalUrl
  **/
  @ApiModelProperty(value = "")
  public String getInternalUrl() {
    return internalUrl;
  }

  public void setInternalUrl(String internalUrl) {
    this.internalUrl = internalUrl;
  }

  public InstallInstallConfig dbConnectionType(String dbConnectionType) {
    this.dbConnectionType = dbConnectionType;
    return this;
  }

   /**
   * Get dbConnectionType
   * @return dbConnectionType
  **/
  @ApiModelProperty(value = "")
  public String getDbConnectionType() {
    return dbConnectionType;
  }

  public void setDbConnectionType(String dbConnectionType) {
    this.dbConnectionType = dbConnectionType;
  }

  public InstallInstallConfig dbTCPHostname(String dbTCPHostname) {
    this.dbTCPHostname = dbTCPHostname;
    return this;
  }

   /**
   * Get dbTCPHostname
   * @return dbTCPHostname
  **/
  @ApiModelProperty(value = "")
  public String getDbTCPHostname() {
    return dbTCPHostname;
  }

  public void setDbTCPHostname(String dbTCPHostname) {
    this.dbTCPHostname = dbTCPHostname;
  }

  public InstallInstallConfig dbTCPPort(String dbTCPPort) {
    this.dbTCPPort = dbTCPPort;
    return this;
  }

   /**
   * Get dbTCPPort
   * @return dbTCPPort
  **/
  @ApiModelProperty(value = "")
  public String getDbTCPPort() {
    return dbTCPPort;
  }

  public void setDbTCPPort(String dbTCPPort) {
    this.dbTCPPort = dbTCPPort;
  }

  public InstallInstallConfig dbTCPName(String dbTCPName) {
    this.dbTCPName = dbTCPName;
    return this;
  }

   /**
   * Get dbTCPName
   * @return dbTCPName
  **/
  @ApiModelProperty(value = "")
  public String getDbTCPName() {
    return dbTCPName;
  }

  public void setDbTCPName(String dbTCPName) {
    this.dbTCPName = dbTCPName;
  }

  public InstallInstallConfig dbTCPUser(String dbTCPUser) {
    this.dbTCPUser = dbTCPUser;
    return this;
  }

   /**
   * Get dbTCPUser
   * @return dbTCPUser
  **/
  @ApiModelProperty(value = "")
  public String getDbTCPUser() {
    return dbTCPUser;
  }

  public void setDbTCPUser(String dbTCPUser) {
    this.dbTCPUser = dbTCPUser;
  }

  public InstallInstallConfig dbTCPPassword(String dbTCPPassword) {
    this.dbTCPPassword = dbTCPPassword;
    return this;
  }

   /**
   * Get dbTCPPassword
   * @return dbTCPPassword
  **/
  @ApiModelProperty(value = "")
  public String getDbTCPPassword() {
    return dbTCPPassword;
  }

  public void setDbTCPPassword(String dbTCPPassword) {
    this.dbTCPPassword = dbTCPPassword;
  }

  public InstallInstallConfig dbSocketFile(String dbSocketFile) {
    this.dbSocketFile = dbSocketFile;
    return this;
  }

   /**
   * Get dbSocketFile
   * @return dbSocketFile
  **/
  @ApiModelProperty(value = "")
  public String getDbSocketFile() {
    return dbSocketFile;
  }

  public void setDbSocketFile(String dbSocketFile) {
    this.dbSocketFile = dbSocketFile;
  }

  public InstallInstallConfig dbSocketName(String dbSocketName) {
    this.dbSocketName = dbSocketName;
    return this;
  }

   /**
   * Get dbSocketName
   * @return dbSocketName
  **/
  @ApiModelProperty(value = "")
  public String getDbSocketName() {
    return dbSocketName;
  }

  public void setDbSocketName(String dbSocketName) {
    this.dbSocketName = dbSocketName;
  }

  public InstallInstallConfig dbSocketUser(String dbSocketUser) {
    this.dbSocketUser = dbSocketUser;
    return this;
  }

   /**
   * Get dbSocketUser
   * @return dbSocketUser
  **/
  @ApiModelProperty(value = "")
  public String getDbSocketUser() {
    return dbSocketUser;
  }

  public void setDbSocketUser(String dbSocketUser) {
    this.dbSocketUser = dbSocketUser;
  }

  public InstallInstallConfig dbSocketPassword(String dbSocketPassword) {
    this.dbSocketPassword = dbSocketPassword;
    return this;
  }

   /**
   * Get dbSocketPassword
   * @return dbSocketPassword
  **/
  @ApiModelProperty(value = "")
  public String getDbSocketPassword() {
    return dbSocketPassword;
  }

  public void setDbSocketPassword(String dbSocketPassword) {
    this.dbSocketPassword = dbSocketPassword;
  }

  public InstallInstallConfig dbManualDSN(String dbManualDSN) {
    this.dbManualDSN = dbManualDSN;
    return this;
  }

   /**
   * Get dbManualDSN
   * @return dbManualDSN
  **/
  @ApiModelProperty(value = "")
  public String getDbManualDSN() {
    return dbManualDSN;
  }

  public void setDbManualDSN(String dbManualDSN) {
    this.dbManualDSN = dbManualDSN;
  }

  public InstallInstallConfig dbUseDefaults(Boolean dbUseDefaults) {
    this.dbUseDefaults = dbUseDefaults;
    return this;
  }

   /**
   * Get dbUseDefaults
   * @return dbUseDefaults
  **/
  @ApiModelProperty(value = "")
  public Boolean isDbUseDefaults() {
    return dbUseDefaults;
  }

  public void setDbUseDefaults(Boolean dbUseDefaults) {
    this.dbUseDefaults = dbUseDefaults;
  }

  public InstallInstallConfig dsName(String dsName) {
    this.dsName = dsName;
    return this;
  }

   /**
   * Get dsName
   * @return dsName
  **/
  @ApiModelProperty(value = "")
  public String getDsName() {
    return dsName;
  }

  public void setDsName(String dsName) {
    this.dsName = dsName;
  }

  public InstallInstallConfig dsPort(String dsPort) {
    this.dsPort = dsPort;
    return this;
  }

   /**
   * Get dsPort
   * @return dsPort
  **/
  @ApiModelProperty(value = "")
  public String getDsPort() {
    return dsPort;
  }

  public void setDsPort(String dsPort) {
    this.dsPort = dsPort;
  }

  public InstallInstallConfig dsType(String dsType) {
    this.dsType = dsType;
    return this;
  }

   /**
   * Get dsType
   * @return dsType
  **/
  @ApiModelProperty(value = "")
  public String getDsType() {
    return dsType;
  }

  public void setDsType(String dsType) {
    this.dsType = dsType;
  }

  public InstallInstallConfig dsS3Custom(String dsS3Custom) {
    this.dsS3Custom = dsS3Custom;
    return this;
  }

   /**
   * Get dsS3Custom
   * @return dsS3Custom
  **/
  @ApiModelProperty(value = "")
  public String getDsS3Custom() {
    return dsS3Custom;
  }

  public void setDsS3Custom(String dsS3Custom) {
    this.dsS3Custom = dsS3Custom;
  }

  public InstallInstallConfig dsS3CustomRegion(String dsS3CustomRegion) {
    this.dsS3CustomRegion = dsS3CustomRegion;
    return this;
  }

   /**
   * Get dsS3CustomRegion
   * @return dsS3CustomRegion
  **/
  @ApiModelProperty(value = "")
  public String getDsS3CustomRegion() {
    return dsS3CustomRegion;
  }

  public void setDsS3CustomRegion(String dsS3CustomRegion) {
    this.dsS3CustomRegion = dsS3CustomRegion;
  }

  public InstallInstallConfig dsS3ApiKey(String dsS3ApiKey) {
    this.dsS3ApiKey = dsS3ApiKey;
    return this;
  }

   /**
   * Get dsS3ApiKey
   * @return dsS3ApiKey
  **/
  @ApiModelProperty(value = "")
  public String getDsS3ApiKey() {
    return dsS3ApiKey;
  }

  public void setDsS3ApiKey(String dsS3ApiKey) {
    this.dsS3ApiKey = dsS3ApiKey;
  }

  public InstallInstallConfig dsS3ApiSecret(String dsS3ApiSecret) {
    this.dsS3ApiSecret = dsS3ApiSecret;
    return this;
  }

   /**
   * Get dsS3ApiSecret
   * @return dsS3ApiSecret
  **/
  @ApiModelProperty(value = "")
  public String getDsS3ApiSecret() {
    return dsS3ApiSecret;
  }

  public void setDsS3ApiSecret(String dsS3ApiSecret) {
    this.dsS3ApiSecret = dsS3ApiSecret;
  }

  public InstallInstallConfig dsS3BucketDefault(String dsS3BucketDefault) {
    this.dsS3BucketDefault = dsS3BucketDefault;
    return this;
  }

   /**
   * Get dsS3BucketDefault
   * @return dsS3BucketDefault
  **/
  @ApiModelProperty(value = "")
  public String getDsS3BucketDefault() {
    return dsS3BucketDefault;
  }

  public void setDsS3BucketDefault(String dsS3BucketDefault) {
    this.dsS3BucketDefault = dsS3BucketDefault;
  }

  public InstallInstallConfig dsS3BucketPersonal(String dsS3BucketPersonal) {
    this.dsS3BucketPersonal = dsS3BucketPersonal;
    return this;
  }

   /**
   * Get dsS3BucketPersonal
   * @return dsS3BucketPersonal
  **/
  @ApiModelProperty(value = "")
  public String getDsS3BucketPersonal() {
    return dsS3BucketPersonal;
  }

  public void setDsS3BucketPersonal(String dsS3BucketPersonal) {
    this.dsS3BucketPersonal = dsS3BucketPersonal;
  }

  public InstallInstallConfig dsS3BucketCells(String dsS3BucketCells) {
    this.dsS3BucketCells = dsS3BucketCells;
    return this;
  }

   /**
   * Get dsS3BucketCells
   * @return dsS3BucketCells
  **/
  @ApiModelProperty(value = "")
  public String getDsS3BucketCells() {
    return dsS3BucketCells;
  }

  public void setDsS3BucketCells(String dsS3BucketCells) {
    this.dsS3BucketCells = dsS3BucketCells;
  }

  public InstallInstallConfig dsS3BucketBinaries(String dsS3BucketBinaries) {
    this.dsS3BucketBinaries = dsS3BucketBinaries;
    return this;
  }

   /**
   * Get dsS3BucketBinaries
   * @return dsS3BucketBinaries
  **/
  @ApiModelProperty(value = "")
  public String getDsS3BucketBinaries() {
    return dsS3BucketBinaries;
  }

  public void setDsS3BucketBinaries(String dsS3BucketBinaries) {
    this.dsS3BucketBinaries = dsS3BucketBinaries;
  }

  public InstallInstallConfig dsS3BucketThumbs(String dsS3BucketThumbs) {
    this.dsS3BucketThumbs = dsS3BucketThumbs;
    return this;
  }

   /**
   * Get dsS3BucketThumbs
   * @return dsS3BucketThumbs
  **/
  @ApiModelProperty(value = "")
  public String getDsS3BucketThumbs() {
    return dsS3BucketThumbs;
  }

  public void setDsS3BucketThumbs(String dsS3BucketThumbs) {
    this.dsS3BucketThumbs = dsS3BucketThumbs;
  }

  public InstallInstallConfig dsS3BucketVersions(String dsS3BucketVersions) {
    this.dsS3BucketVersions = dsS3BucketVersions;
    return this;
  }

   /**
   * Get dsS3BucketVersions
   * @return dsS3BucketVersions
  **/
  @ApiModelProperty(value = "")
  public String getDsS3BucketVersions() {
    return dsS3BucketVersions;
  }

  public void setDsS3BucketVersions(String dsS3BucketVersions) {
    this.dsS3BucketVersions = dsS3BucketVersions;
  }

  public InstallInstallConfig dsFolder(String dsFolder) {
    this.dsFolder = dsFolder;
    return this;
  }

   /**
   * Get dsFolder
   * @return dsFolder
  **/
  @ApiModelProperty(value = "")
  public String getDsFolder() {
    return dsFolder;
  }

  public void setDsFolder(String dsFolder) {
    this.dsFolder = dsFolder;
  }

  public InstallInstallConfig frontendHosts(String frontendHosts) {
    this.frontendHosts = frontendHosts;
    return this;
  }

   /**
   * Get frontendHosts
   * @return frontendHosts
  **/
  @ApiModelProperty(value = "")
  public String getFrontendHosts() {
    return frontendHosts;
  }

  public void setFrontendHosts(String frontendHosts) {
    this.frontendHosts = frontendHosts;
  }

  public InstallInstallConfig frontendLogin(String frontendLogin) {
    this.frontendLogin = frontendLogin;
    return this;
  }

   /**
   * Get frontendLogin
   * @return frontendLogin
  **/
  @ApiModelProperty(value = "")
  public String getFrontendLogin() {
    return frontendLogin;
  }

  public void setFrontendLogin(String frontendLogin) {
    this.frontendLogin = frontendLogin;
  }

  public InstallInstallConfig frontendPassword(String frontendPassword) {
    this.frontendPassword = frontendPassword;
    return this;
  }

   /**
   * Get frontendPassword
   * @return frontendPassword
  **/
  @ApiModelProperty(value = "")
  public String getFrontendPassword() {
    return frontendPassword;
  }

  public void setFrontendPassword(String frontendPassword) {
    this.frontendPassword = frontendPassword;
  }

  public InstallInstallConfig frontendRepeatPassword(String frontendRepeatPassword) {
    this.frontendRepeatPassword = frontendRepeatPassword;
    return this;
  }

   /**
   * Get frontendRepeatPassword
   * @return frontendRepeatPassword
  **/
  @ApiModelProperty(value = "")
  public String getFrontendRepeatPassword() {
    return frontendRepeatPassword;
  }

  public void setFrontendRepeatPassword(String frontendRepeatPassword) {
    this.frontendRepeatPassword = frontendRepeatPassword;
  }

  public InstallInstallConfig frontendApplicationTitle(String frontendApplicationTitle) {
    this.frontendApplicationTitle = frontendApplicationTitle;
    return this;
  }

   /**
   * Get frontendApplicationTitle
   * @return frontendApplicationTitle
  **/
  @ApiModelProperty(value = "")
  public String getFrontendApplicationTitle() {
    return frontendApplicationTitle;
  }

  public void setFrontendApplicationTitle(String frontendApplicationTitle) {
    this.frontendApplicationTitle = frontendApplicationTitle;
  }

  public InstallInstallConfig frontendDefaultLanguage(String frontendDefaultLanguage) {
    this.frontendDefaultLanguage = frontendDefaultLanguage;
    return this;
  }

   /**
   * Get frontendDefaultLanguage
   * @return frontendDefaultLanguage
  **/
  @ApiModelProperty(value = "")
  public String getFrontendDefaultLanguage() {
    return frontendDefaultLanguage;
  }

  public void setFrontendDefaultLanguage(String frontendDefaultLanguage) {
    this.frontendDefaultLanguage = frontendDefaultLanguage;
  }

  public InstallInstallConfig licenseRequired(Boolean licenseRequired) {
    this.licenseRequired = licenseRequired;
    return this;
  }

   /**
   * Get licenseRequired
   * @return licenseRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isLicenseRequired() {
    return licenseRequired;
  }

  public void setLicenseRequired(Boolean licenseRequired) {
    this.licenseRequired = licenseRequired;
  }

  public InstallInstallConfig licenseString(String licenseString) {
    this.licenseString = licenseString;
    return this;
  }

   /**
   * Get licenseString
   * @return licenseString
  **/
  @ApiModelProperty(value = "")
  public String getLicenseString() {
    return licenseString;
  }

  public void setLicenseString(String licenseString) {
    this.licenseString = licenseString;
  }

  public InstallInstallConfig checkResults(List<InstallCheckResult> checkResults) {
    this.checkResults = checkResults;
    return this;
  }

  public InstallInstallConfig addCheckResultsItem(InstallCheckResult checkResultsItem) {
    if (this.checkResults == null) {
      this.checkResults = new ArrayList<InstallCheckResult>();
    }
    this.checkResults.add(checkResultsItem);
    return this;
  }

   /**
   * Get checkResults
   * @return checkResults
  **/
  @ApiModelProperty(value = "")
  public List<InstallCheckResult> getCheckResults() {
    return checkResults;
  }

  public void setCheckResults(List<InstallCheckResult> checkResults) {
    this.checkResults = checkResults;
  }

  public InstallInstallConfig proxyConfig(InstallProxyConfig proxyConfig) {
    this.proxyConfig = proxyConfig;
    return this;
  }

   /**
   * Get proxyConfig
   * @return proxyConfig
  **/
  @ApiModelProperty(value = "")
  public InstallProxyConfig getProxyConfig() {
    return proxyConfig;
  }

  public void setProxyConfig(InstallProxyConfig proxyConfig) {
    this.proxyConfig = proxyConfig;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallInstallConfig installInstallConfig = (InstallInstallConfig) o;
    return Objects.equals(this.internalUrl, installInstallConfig.internalUrl) &&
        Objects.equals(this.dbConnectionType, installInstallConfig.dbConnectionType) &&
        Objects.equals(this.dbTCPHostname, installInstallConfig.dbTCPHostname) &&
        Objects.equals(this.dbTCPPort, installInstallConfig.dbTCPPort) &&
        Objects.equals(this.dbTCPName, installInstallConfig.dbTCPName) &&
        Objects.equals(this.dbTCPUser, installInstallConfig.dbTCPUser) &&
        Objects.equals(this.dbTCPPassword, installInstallConfig.dbTCPPassword) &&
        Objects.equals(this.dbSocketFile, installInstallConfig.dbSocketFile) &&
        Objects.equals(this.dbSocketName, installInstallConfig.dbSocketName) &&
        Objects.equals(this.dbSocketUser, installInstallConfig.dbSocketUser) &&
        Objects.equals(this.dbSocketPassword, installInstallConfig.dbSocketPassword) &&
        Objects.equals(this.dbManualDSN, installInstallConfig.dbManualDSN) &&
        Objects.equals(this.dbUseDefaults, installInstallConfig.dbUseDefaults) &&
        Objects.equals(this.dsName, installInstallConfig.dsName) &&
        Objects.equals(this.dsPort, installInstallConfig.dsPort) &&
        Objects.equals(this.dsType, installInstallConfig.dsType) &&
        Objects.equals(this.dsS3Custom, installInstallConfig.dsS3Custom) &&
        Objects.equals(this.dsS3CustomRegion, installInstallConfig.dsS3CustomRegion) &&
        Objects.equals(this.dsS3ApiKey, installInstallConfig.dsS3ApiKey) &&
        Objects.equals(this.dsS3ApiSecret, installInstallConfig.dsS3ApiSecret) &&
        Objects.equals(this.dsS3BucketDefault, installInstallConfig.dsS3BucketDefault) &&
        Objects.equals(this.dsS3BucketPersonal, installInstallConfig.dsS3BucketPersonal) &&
        Objects.equals(this.dsS3BucketCells, installInstallConfig.dsS3BucketCells) &&
        Objects.equals(this.dsS3BucketBinaries, installInstallConfig.dsS3BucketBinaries) &&
        Objects.equals(this.dsS3BucketThumbs, installInstallConfig.dsS3BucketThumbs) &&
        Objects.equals(this.dsS3BucketVersions, installInstallConfig.dsS3BucketVersions) &&
        Objects.equals(this.dsFolder, installInstallConfig.dsFolder) &&
        Objects.equals(this.frontendHosts, installInstallConfig.frontendHosts) &&
        Objects.equals(this.frontendLogin, installInstallConfig.frontendLogin) &&
        Objects.equals(this.frontendPassword, installInstallConfig.frontendPassword) &&
        Objects.equals(this.frontendRepeatPassword, installInstallConfig.frontendRepeatPassword) &&
        Objects.equals(this.frontendApplicationTitle, installInstallConfig.frontendApplicationTitle) &&
        Objects.equals(this.frontendDefaultLanguage, installInstallConfig.frontendDefaultLanguage) &&
        Objects.equals(this.licenseRequired, installInstallConfig.licenseRequired) &&
        Objects.equals(this.licenseString, installInstallConfig.licenseString) &&
        Objects.equals(this.checkResults, installInstallConfig.checkResults) &&
        Objects.equals(this.proxyConfig, installInstallConfig.proxyConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internalUrl, dbConnectionType, dbTCPHostname, dbTCPPort, dbTCPName, dbTCPUser, dbTCPPassword, dbSocketFile, dbSocketName, dbSocketUser, dbSocketPassword, dbManualDSN, dbUseDefaults, dsName, dsPort, dsType, dsS3Custom, dsS3CustomRegion, dsS3ApiKey, dsS3ApiSecret, dsS3BucketDefault, dsS3BucketPersonal, dsS3BucketCells, dsS3BucketBinaries, dsS3BucketThumbs, dsS3BucketVersions, dsFolder, frontendHosts, frontendLogin, frontendPassword, frontendRepeatPassword, frontendApplicationTitle, frontendDefaultLanguage, licenseRequired, licenseString, checkResults, proxyConfig);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallInstallConfig {\n");
    
    sb.append("    internalUrl: ").append(toIndentedString(internalUrl)).append("\n");
    sb.append("    dbConnectionType: ").append(toIndentedString(dbConnectionType)).append("\n");
    sb.append("    dbTCPHostname: ").append(toIndentedString(dbTCPHostname)).append("\n");
    sb.append("    dbTCPPort: ").append(toIndentedString(dbTCPPort)).append("\n");
    sb.append("    dbTCPName: ").append(toIndentedString(dbTCPName)).append("\n");
    sb.append("    dbTCPUser: ").append(toIndentedString(dbTCPUser)).append("\n");
    sb.append("    dbTCPPassword: ").append(toIndentedString(dbTCPPassword)).append("\n");
    sb.append("    dbSocketFile: ").append(toIndentedString(dbSocketFile)).append("\n");
    sb.append("    dbSocketName: ").append(toIndentedString(dbSocketName)).append("\n");
    sb.append("    dbSocketUser: ").append(toIndentedString(dbSocketUser)).append("\n");
    sb.append("    dbSocketPassword: ").append(toIndentedString(dbSocketPassword)).append("\n");
    sb.append("    dbManualDSN: ").append(toIndentedString(dbManualDSN)).append("\n");
    sb.append("    dbUseDefaults: ").append(toIndentedString(dbUseDefaults)).append("\n");
    sb.append("    dsName: ").append(toIndentedString(dsName)).append("\n");
    sb.append("    dsPort: ").append(toIndentedString(dsPort)).append("\n");
    sb.append("    dsType: ").append(toIndentedString(dsType)).append("\n");
    sb.append("    dsS3Custom: ").append(toIndentedString(dsS3Custom)).append("\n");
    sb.append("    dsS3CustomRegion: ").append(toIndentedString(dsS3CustomRegion)).append("\n");
    sb.append("    dsS3ApiKey: ").append(toIndentedString(dsS3ApiKey)).append("\n");
    sb.append("    dsS3ApiSecret: ").append(toIndentedString(dsS3ApiSecret)).append("\n");
    sb.append("    dsS3BucketDefault: ").append(toIndentedString(dsS3BucketDefault)).append("\n");
    sb.append("    dsS3BucketPersonal: ").append(toIndentedString(dsS3BucketPersonal)).append("\n");
    sb.append("    dsS3BucketCells: ").append(toIndentedString(dsS3BucketCells)).append("\n");
    sb.append("    dsS3BucketBinaries: ").append(toIndentedString(dsS3BucketBinaries)).append("\n");
    sb.append("    dsS3BucketThumbs: ").append(toIndentedString(dsS3BucketThumbs)).append("\n");
    sb.append("    dsS3BucketVersions: ").append(toIndentedString(dsS3BucketVersions)).append("\n");
    sb.append("    dsFolder: ").append(toIndentedString(dsFolder)).append("\n");
    sb.append("    frontendHosts: ").append(toIndentedString(frontendHosts)).append("\n");
    sb.append("    frontendLogin: ").append(toIndentedString(frontendLogin)).append("\n");
    sb.append("    frontendPassword: ").append(toIndentedString(frontendPassword)).append("\n");
    sb.append("    frontendRepeatPassword: ").append(toIndentedString(frontendRepeatPassword)).append("\n");
    sb.append("    frontendApplicationTitle: ").append(toIndentedString(frontendApplicationTitle)).append("\n");
    sb.append("    frontendDefaultLanguage: ").append(toIndentedString(frontendDefaultLanguage)).append("\n");
    sb.append("    licenseRequired: ").append(toIndentedString(licenseRequired)).append("\n");
    sb.append("    licenseString: ").append(toIndentedString(licenseString)).append("\n");
    sb.append("    checkResults: ").append(toIndentedString(checkResults)).append("\n");
    sb.append("    proxyConfig: ").append(toIndentedString(proxyConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

