/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.sdk.core.api.cells.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.sdk.core.api.cells.model.JobsAction;
import com.pydio.sdk.core.api.cells.model.JobsActionOutputFilter;
import com.pydio.sdk.core.api.cells.model.JobsContextMetaFilter;
import com.pydio.sdk.core.api.cells.model.JobsIdmSelector;
import com.pydio.sdk.core.api.cells.model.JobsNodesSelector;
import com.pydio.sdk.core.api.cells.model.JobsUsersSelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * JobsAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-23T18:11:59.271+02:00")



public class JobsAction {
  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Label")
  private String label = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Bypass")
  private Boolean bypass = null;

  @SerializedName("BreakAfter")
  private Boolean breakAfter = null;

  @SerializedName("NodesSelector")
  private JobsNodesSelector nodesSelector = null;

  @SerializedName("UsersSelector")
  private JobsUsersSelector usersSelector = null;

  @SerializedName("NodesFilter")
  private JobsNodesSelector nodesFilter = null;

  @SerializedName("UsersFilter")
  private JobsUsersSelector usersFilter = null;

  @SerializedName("IdmSelector")
  private JobsIdmSelector idmSelector = null;

  @SerializedName("IdmFilter")
  private JobsIdmSelector idmFilter = null;

  @SerializedName("ActionOutputFilter")
  private JobsActionOutputFilter actionOutputFilter = null;

  @SerializedName("ContextMetaFilter")
  private JobsContextMetaFilter contextMetaFilter = null;

  @SerializedName("Parameters")
  private Map<String, String> parameters = null;

  @SerializedName("ChainedActions")
  private List<JobsAction> chainedActions = null;

  @SerializedName("FailedFilterActions")
  private List<JobsAction> failedFilterActions = null;

  public JobsAction ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @ApiModelProperty(value = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public JobsAction label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public JobsAction description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JobsAction bypass(Boolean bypass) {
    this.bypass = bypass;
    return this;
  }

   /**
   * Get bypass
   * @return bypass
  **/
  @ApiModelProperty(value = "")
  public Boolean isBypass() {
    return bypass;
  }

  public void setBypass(Boolean bypass) {
    this.bypass = bypass;
  }

  public JobsAction breakAfter(Boolean breakAfter) {
    this.breakAfter = breakAfter;
    return this;
  }

   /**
   * Get breakAfter
   * @return breakAfter
  **/
  @ApiModelProperty(value = "")
  public Boolean isBreakAfter() {
    return breakAfter;
  }

  public void setBreakAfter(Boolean breakAfter) {
    this.breakAfter = breakAfter;
  }

  public JobsAction nodesSelector(JobsNodesSelector nodesSelector) {
    this.nodesSelector = nodesSelector;
    return this;
  }

   /**
   * Get nodesSelector
   * @return nodesSelector
  **/
  @ApiModelProperty(value = "")
  public JobsNodesSelector getNodesSelector() {
    return nodesSelector;
  }

  public void setNodesSelector(JobsNodesSelector nodesSelector) {
    this.nodesSelector = nodesSelector;
  }

  public JobsAction usersSelector(JobsUsersSelector usersSelector) {
    this.usersSelector = usersSelector;
    return this;
  }

   /**
   * Get usersSelector
   * @return usersSelector
  **/
  @ApiModelProperty(value = "")
  public JobsUsersSelector getUsersSelector() {
    return usersSelector;
  }

  public void setUsersSelector(JobsUsersSelector usersSelector) {
    this.usersSelector = usersSelector;
  }

  public JobsAction nodesFilter(JobsNodesSelector nodesFilter) {
    this.nodesFilter = nodesFilter;
    return this;
  }

   /**
   * Get nodesFilter
   * @return nodesFilter
  **/
  @ApiModelProperty(value = "")
  public JobsNodesSelector getNodesFilter() {
    return nodesFilter;
  }

  public void setNodesFilter(JobsNodesSelector nodesFilter) {
    this.nodesFilter = nodesFilter;
  }

  public JobsAction usersFilter(JobsUsersSelector usersFilter) {
    this.usersFilter = usersFilter;
    return this;
  }

   /**
   * Get usersFilter
   * @return usersFilter
  **/
  @ApiModelProperty(value = "")
  public JobsUsersSelector getUsersFilter() {
    return usersFilter;
  }

  public void setUsersFilter(JobsUsersSelector usersFilter) {
    this.usersFilter = usersFilter;
  }

  public JobsAction idmSelector(JobsIdmSelector idmSelector) {
    this.idmSelector = idmSelector;
    return this;
  }

   /**
   * Get idmSelector
   * @return idmSelector
  **/
  @ApiModelProperty(value = "")
  public JobsIdmSelector getIdmSelector() {
    return idmSelector;
  }

  public void setIdmSelector(JobsIdmSelector idmSelector) {
    this.idmSelector = idmSelector;
  }

  public JobsAction idmFilter(JobsIdmSelector idmFilter) {
    this.idmFilter = idmFilter;
    return this;
  }

   /**
   * Get idmFilter
   * @return idmFilter
  **/
  @ApiModelProperty(value = "")
  public JobsIdmSelector getIdmFilter() {
    return idmFilter;
  }

  public void setIdmFilter(JobsIdmSelector idmFilter) {
    this.idmFilter = idmFilter;
  }

  public JobsAction actionOutputFilter(JobsActionOutputFilter actionOutputFilter) {
    this.actionOutputFilter = actionOutputFilter;
    return this;
  }

   /**
   * Get actionOutputFilter
   * @return actionOutputFilter
  **/
  @ApiModelProperty(value = "")
  public JobsActionOutputFilter getActionOutputFilter() {
    return actionOutputFilter;
  }

  public void setActionOutputFilter(JobsActionOutputFilter actionOutputFilter) {
    this.actionOutputFilter = actionOutputFilter;
  }

  public JobsAction contextMetaFilter(JobsContextMetaFilter contextMetaFilter) {
    this.contextMetaFilter = contextMetaFilter;
    return this;
  }

   /**
   * Get contextMetaFilter
   * @return contextMetaFilter
  **/
  @ApiModelProperty(value = "")
  public JobsContextMetaFilter getContextMetaFilter() {
    return contextMetaFilter;
  }

  public void setContextMetaFilter(JobsContextMetaFilter contextMetaFilter) {
    this.contextMetaFilter = contextMetaFilter;
  }

  public JobsAction parameters(Map<String, String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public JobsAction putParametersItem(String key, String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<String, String>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = parameters;
  }

  public JobsAction chainedActions(List<JobsAction> chainedActions) {
    this.chainedActions = chainedActions;
    return this;
  }

  public JobsAction addChainedActionsItem(JobsAction chainedActionsItem) {
    if (this.chainedActions == null) {
      this.chainedActions = new ArrayList<JobsAction>();
    }
    this.chainedActions.add(chainedActionsItem);
    return this;
  }

   /**
   * Get chainedActions
   * @return chainedActions
  **/
  @ApiModelProperty(value = "")
  public List<JobsAction> getChainedActions() {
    return chainedActions;
  }

  public void setChainedActions(List<JobsAction> chainedActions) {
    this.chainedActions = chainedActions;
  }

  public JobsAction failedFilterActions(List<JobsAction> failedFilterActions) {
    this.failedFilterActions = failedFilterActions;
    return this;
  }

  public JobsAction addFailedFilterActionsItem(JobsAction failedFilterActionsItem) {
    if (this.failedFilterActions == null) {
      this.failedFilterActions = new ArrayList<JobsAction>();
    }
    this.failedFilterActions.add(failedFilterActionsItem);
    return this;
  }

   /**
   * Get failedFilterActions
   * @return failedFilterActions
  **/
  @ApiModelProperty(value = "")
  public List<JobsAction> getFailedFilterActions() {
    return failedFilterActions;
  }

  public void setFailedFilterActions(List<JobsAction> failedFilterActions) {
    this.failedFilterActions = failedFilterActions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsAction jobsAction = (JobsAction) o;
    return Objects.equals(this.ID, jobsAction.ID) &&
        Objects.equals(this.label, jobsAction.label) &&
        Objects.equals(this.description, jobsAction.description) &&
        Objects.equals(this.bypass, jobsAction.bypass) &&
        Objects.equals(this.breakAfter, jobsAction.breakAfter) &&
        Objects.equals(this.nodesSelector, jobsAction.nodesSelector) &&
        Objects.equals(this.usersSelector, jobsAction.usersSelector) &&
        Objects.equals(this.nodesFilter, jobsAction.nodesFilter) &&
        Objects.equals(this.usersFilter, jobsAction.usersFilter) &&
        Objects.equals(this.idmSelector, jobsAction.idmSelector) &&
        Objects.equals(this.idmFilter, jobsAction.idmFilter) &&
        Objects.equals(this.actionOutputFilter, jobsAction.actionOutputFilter) &&
        Objects.equals(this.contextMetaFilter, jobsAction.contextMetaFilter) &&
        Objects.equals(this.parameters, jobsAction.parameters) &&
        Objects.equals(this.chainedActions, jobsAction.chainedActions) &&
        Objects.equals(this.failedFilterActions, jobsAction.failedFilterActions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, label, description, bypass, breakAfter, nodesSelector, usersSelector, nodesFilter, usersFilter, idmSelector, idmFilter, actionOutputFilter, contextMetaFilter, parameters, chainedActions, failedFilterActions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsAction {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    bypass: ").append(toIndentedString(bypass)).append("\n");
    sb.append("    breakAfter: ").append(toIndentedString(breakAfter)).append("\n");
    sb.append("    nodesSelector: ").append(toIndentedString(nodesSelector)).append("\n");
    sb.append("    usersSelector: ").append(toIndentedString(usersSelector)).append("\n");
    sb.append("    nodesFilter: ").append(toIndentedString(nodesFilter)).append("\n");
    sb.append("    usersFilter: ").append(toIndentedString(usersFilter)).append("\n");
    sb.append("    idmSelector: ").append(toIndentedString(idmSelector)).append("\n");
    sb.append("    idmFilter: ").append(toIndentedString(idmFilter)).append("\n");
    sb.append("    actionOutputFilter: ").append(toIndentedString(actionOutputFilter)).append("\n");
    sb.append("    contextMetaFilter: ").append(toIndentedString(contextMetaFilter)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    chainedActions: ").append(toIndentedString(chainedActions)).append("\n");
    sb.append("    failedFilterActions: ").append(toIndentedString(failedFilterActions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

