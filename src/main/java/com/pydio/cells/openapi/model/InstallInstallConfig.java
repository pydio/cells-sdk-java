/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.InstallCheckResult;
import com.pydio.cells.openapi.model.InstallProxyConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * InstallInstallConfig
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-05T12:35:48.905699+02:00[Europe/Berlin]")
public class InstallInstallConfig {
  public static final String SERIALIZED_NAME_CHECK_RESULTS = "CheckResults";
  @SerializedName(SERIALIZED_NAME_CHECK_RESULTS)
  private List<InstallCheckResult> checkResults = null;

  public static final String SERIALIZED_NAME_DOCUMENTS_D_S_N = "DocumentsDSN";
  @SerializedName(SERIALIZED_NAME_DOCUMENTS_D_S_N)
  private String documentsDSN;

  public static final String SERIALIZED_NAME_PROXY_CONFIG = "ProxyConfig";
  @SerializedName(SERIALIZED_NAME_PROXY_CONFIG)
  private InstallProxyConfig proxyConfig;

  public static final String SERIALIZED_NAME_USE_DOCUMENTS_D_S_N = "UseDocumentsDSN";
  @SerializedName(SERIALIZED_NAME_USE_DOCUMENTS_D_S_N)
  private Boolean useDocumentsDSN;

  public static final String SERIALIZED_NAME_DB_CONNECTION_TYPE = "dbConnectionType";
  @SerializedName(SERIALIZED_NAME_DB_CONNECTION_TYPE)
  private String dbConnectionType;

  public static final String SERIALIZED_NAME_DB_MANUAL_D_S_N = "dbManualDSN";
  @SerializedName(SERIALIZED_NAME_DB_MANUAL_D_S_N)
  private String dbManualDSN;

  public static final String SERIALIZED_NAME_DB_SOCKET_FILE = "dbSocketFile";
  @SerializedName(SERIALIZED_NAME_DB_SOCKET_FILE)
  private String dbSocketFile;

  public static final String SERIALIZED_NAME_DB_SOCKET_NAME = "dbSocketName";
  @SerializedName(SERIALIZED_NAME_DB_SOCKET_NAME)
  private String dbSocketName;

  public static final String SERIALIZED_NAME_DB_SOCKET_PASSWORD = "dbSocketPassword";
  @SerializedName(SERIALIZED_NAME_DB_SOCKET_PASSWORD)
  private String dbSocketPassword;

  public static final String SERIALIZED_NAME_DB_SOCKET_USER = "dbSocketUser";
  @SerializedName(SERIALIZED_NAME_DB_SOCKET_USER)
  private String dbSocketUser;

  public static final String SERIALIZED_NAME_DB_T_C_P_HOSTNAME = "dbTCPHostname";
  @SerializedName(SERIALIZED_NAME_DB_T_C_P_HOSTNAME)
  private String dbTCPHostname;

  public static final String SERIALIZED_NAME_DB_T_C_P_NAME = "dbTCPName";
  @SerializedName(SERIALIZED_NAME_DB_T_C_P_NAME)
  private String dbTCPName;

  public static final String SERIALIZED_NAME_DB_T_C_P_PASSWORD = "dbTCPPassword";
  @SerializedName(SERIALIZED_NAME_DB_T_C_P_PASSWORD)
  private String dbTCPPassword;

  public static final String SERIALIZED_NAME_DB_T_C_P_PORT = "dbTCPPort";
  @SerializedName(SERIALIZED_NAME_DB_T_C_P_PORT)
  private String dbTCPPort;

  public static final String SERIALIZED_NAME_DB_T_C_P_USER = "dbTCPUser";
  @SerializedName(SERIALIZED_NAME_DB_T_C_P_USER)
  private String dbTCPUser;

  public static final String SERIALIZED_NAME_DB_USE_DEFAULTS = "dbUseDefaults";
  @SerializedName(SERIALIZED_NAME_DB_USE_DEFAULTS)
  private Boolean dbUseDefaults;

  public static final String SERIALIZED_NAME_DS_FOLDER = "dsFolder";
  @SerializedName(SERIALIZED_NAME_DS_FOLDER)
  private String dsFolder;

  public static final String SERIALIZED_NAME_DS_NAME = "dsName";
  @SerializedName(SERIALIZED_NAME_DS_NAME)
  private String dsName;

  public static final String SERIALIZED_NAME_DS_PORT = "dsPort";
  @SerializedName(SERIALIZED_NAME_DS_PORT)
  private String dsPort;

  public static final String SERIALIZED_NAME_DS_S3_API_KEY = "dsS3ApiKey";
  @SerializedName(SERIALIZED_NAME_DS_S3_API_KEY)
  private String dsS3ApiKey;

  public static final String SERIALIZED_NAME_DS_S3_API_SECRET = "dsS3ApiSecret";
  @SerializedName(SERIALIZED_NAME_DS_S3_API_SECRET)
  private String dsS3ApiSecret;

  public static final String SERIALIZED_NAME_DS_S3_BUCKET_BINARIES = "dsS3BucketBinaries";
  @SerializedName(SERIALIZED_NAME_DS_S3_BUCKET_BINARIES)
  private String dsS3BucketBinaries;

  public static final String SERIALIZED_NAME_DS_S3_BUCKET_CELLS = "dsS3BucketCells";
  @SerializedName(SERIALIZED_NAME_DS_S3_BUCKET_CELLS)
  private String dsS3BucketCells;

  public static final String SERIALIZED_NAME_DS_S3_BUCKET_DEFAULT = "dsS3BucketDefault";
  @SerializedName(SERIALIZED_NAME_DS_S3_BUCKET_DEFAULT)
  private String dsS3BucketDefault;

  public static final String SERIALIZED_NAME_DS_S3_BUCKET_PERSONAL = "dsS3BucketPersonal";
  @SerializedName(SERIALIZED_NAME_DS_S3_BUCKET_PERSONAL)
  private String dsS3BucketPersonal;

  public static final String SERIALIZED_NAME_DS_S3_BUCKET_THUMBS = "dsS3BucketThumbs";
  @SerializedName(SERIALIZED_NAME_DS_S3_BUCKET_THUMBS)
  private String dsS3BucketThumbs;

  public static final String SERIALIZED_NAME_DS_S3_BUCKET_VERSIONS = "dsS3BucketVersions";
  @SerializedName(SERIALIZED_NAME_DS_S3_BUCKET_VERSIONS)
  private String dsS3BucketVersions;

  public static final String SERIALIZED_NAME_DS_S3_CUSTOM = "dsS3Custom";
  @SerializedName(SERIALIZED_NAME_DS_S3_CUSTOM)
  private String dsS3Custom;

  public static final String SERIALIZED_NAME_DS_S3_CUSTOM_REGION = "dsS3CustomRegion";
  @SerializedName(SERIALIZED_NAME_DS_S3_CUSTOM_REGION)
  private String dsS3CustomRegion;

  public static final String SERIALIZED_NAME_DS_TYPE = "dsType";
  @SerializedName(SERIALIZED_NAME_DS_TYPE)
  private String dsType;

  public static final String SERIALIZED_NAME_FRONTEND_APPLICATION_TITLE = "frontendApplicationTitle";
  @SerializedName(SERIALIZED_NAME_FRONTEND_APPLICATION_TITLE)
  private String frontendApplicationTitle;

  public static final String SERIALIZED_NAME_FRONTEND_DEFAULT_LANGUAGE = "frontendDefaultLanguage";
  @SerializedName(SERIALIZED_NAME_FRONTEND_DEFAULT_LANGUAGE)
  private String frontendDefaultLanguage;

  public static final String SERIALIZED_NAME_FRONTEND_HOSTS = "frontendHosts";
  @SerializedName(SERIALIZED_NAME_FRONTEND_HOSTS)
  private String frontendHosts;

  public static final String SERIALIZED_NAME_FRONTEND_LOGIN = "frontendLogin";
  @SerializedName(SERIALIZED_NAME_FRONTEND_LOGIN)
  private String frontendLogin;

  public static final String SERIALIZED_NAME_FRONTEND_PASSWORD = "frontendPassword";
  @SerializedName(SERIALIZED_NAME_FRONTEND_PASSWORD)
  private String frontendPassword;

  public static final String SERIALIZED_NAME_FRONTEND_REPEAT_PASSWORD = "frontendRepeatPassword";
  @SerializedName(SERIALIZED_NAME_FRONTEND_REPEAT_PASSWORD)
  private String frontendRepeatPassword;

  public static final String SERIALIZED_NAME_INTERNAL_URL = "internalUrl";
  @SerializedName(SERIALIZED_NAME_INTERNAL_URL)
  private String internalUrl;

  public static final String SERIALIZED_NAME_LICENSE_REQUIRED = "licenseRequired";
  @SerializedName(SERIALIZED_NAME_LICENSE_REQUIRED)
  private Boolean licenseRequired;

  public static final String SERIALIZED_NAME_LICENSE_STRING = "licenseString";
  @SerializedName(SERIALIZED_NAME_LICENSE_STRING)
  private String licenseString;

  public InstallInstallConfig() { 
  }

  public InstallInstallConfig checkResults(List<InstallCheckResult> checkResults) {
    
    this.checkResults = checkResults;
    return this;
  }

  public InstallInstallConfig addCheckResultsItem(InstallCheckResult checkResultsItem) {
    if (this.checkResults == null) {
      this.checkResults = new ArrayList<InstallCheckResult>();
    }
    this.checkResults.add(checkResultsItem);
    return this;
  }

   /**
   * Get checkResults
   * @return checkResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<InstallCheckResult> getCheckResults() {
    return checkResults;
  }


  public void setCheckResults(List<InstallCheckResult> checkResults) {
    this.checkResults = checkResults;
  }


  public InstallInstallConfig documentsDSN(String documentsDSN) {
    
    this.documentsDSN = documentsDSN;
    return this;
  }

   /**
   * Get documentsDSN
   * @return documentsDSN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentsDSN() {
    return documentsDSN;
  }


  public void setDocumentsDSN(String documentsDSN) {
    this.documentsDSN = documentsDSN;
  }


  public InstallInstallConfig proxyConfig(InstallProxyConfig proxyConfig) {
    
    this.proxyConfig = proxyConfig;
    return this;
  }

   /**
   * Get proxyConfig
   * @return proxyConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InstallProxyConfig getProxyConfig() {
    return proxyConfig;
  }


  public void setProxyConfig(InstallProxyConfig proxyConfig) {
    this.proxyConfig = proxyConfig;
  }


  public InstallInstallConfig useDocumentsDSN(Boolean useDocumentsDSN) {
    
    this.useDocumentsDSN = useDocumentsDSN;
    return this;
  }

   /**
   * Get useDocumentsDSN
   * @return useDocumentsDSN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseDocumentsDSN() {
    return useDocumentsDSN;
  }


  public void setUseDocumentsDSN(Boolean useDocumentsDSN) {
    this.useDocumentsDSN = useDocumentsDSN;
  }


  public InstallInstallConfig dbConnectionType(String dbConnectionType) {
    
    this.dbConnectionType = dbConnectionType;
    return this;
  }

   /**
   * Get dbConnectionType
   * @return dbConnectionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbConnectionType() {
    return dbConnectionType;
  }


  public void setDbConnectionType(String dbConnectionType) {
    this.dbConnectionType = dbConnectionType;
  }


  public InstallInstallConfig dbManualDSN(String dbManualDSN) {
    
    this.dbManualDSN = dbManualDSN;
    return this;
  }

   /**
   * Get dbManualDSN
   * @return dbManualDSN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbManualDSN() {
    return dbManualDSN;
  }


  public void setDbManualDSN(String dbManualDSN) {
    this.dbManualDSN = dbManualDSN;
  }


  public InstallInstallConfig dbSocketFile(String dbSocketFile) {
    
    this.dbSocketFile = dbSocketFile;
    return this;
  }

   /**
   * Get dbSocketFile
   * @return dbSocketFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbSocketFile() {
    return dbSocketFile;
  }


  public void setDbSocketFile(String dbSocketFile) {
    this.dbSocketFile = dbSocketFile;
  }


  public InstallInstallConfig dbSocketName(String dbSocketName) {
    
    this.dbSocketName = dbSocketName;
    return this;
  }

   /**
   * Get dbSocketName
   * @return dbSocketName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbSocketName() {
    return dbSocketName;
  }


  public void setDbSocketName(String dbSocketName) {
    this.dbSocketName = dbSocketName;
  }


  public InstallInstallConfig dbSocketPassword(String dbSocketPassword) {
    
    this.dbSocketPassword = dbSocketPassword;
    return this;
  }

   /**
   * Get dbSocketPassword
   * @return dbSocketPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbSocketPassword() {
    return dbSocketPassword;
  }


  public void setDbSocketPassword(String dbSocketPassword) {
    this.dbSocketPassword = dbSocketPassword;
  }


  public InstallInstallConfig dbSocketUser(String dbSocketUser) {
    
    this.dbSocketUser = dbSocketUser;
    return this;
  }

   /**
   * Get dbSocketUser
   * @return dbSocketUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbSocketUser() {
    return dbSocketUser;
  }


  public void setDbSocketUser(String dbSocketUser) {
    this.dbSocketUser = dbSocketUser;
  }


  public InstallInstallConfig dbTCPHostname(String dbTCPHostname) {
    
    this.dbTCPHostname = dbTCPHostname;
    return this;
  }

   /**
   * Get dbTCPHostname
   * @return dbTCPHostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbTCPHostname() {
    return dbTCPHostname;
  }


  public void setDbTCPHostname(String dbTCPHostname) {
    this.dbTCPHostname = dbTCPHostname;
  }


  public InstallInstallConfig dbTCPName(String dbTCPName) {
    
    this.dbTCPName = dbTCPName;
    return this;
  }

   /**
   * Get dbTCPName
   * @return dbTCPName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbTCPName() {
    return dbTCPName;
  }


  public void setDbTCPName(String dbTCPName) {
    this.dbTCPName = dbTCPName;
  }


  public InstallInstallConfig dbTCPPassword(String dbTCPPassword) {
    
    this.dbTCPPassword = dbTCPPassword;
    return this;
  }

   /**
   * Get dbTCPPassword
   * @return dbTCPPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbTCPPassword() {
    return dbTCPPassword;
  }


  public void setDbTCPPassword(String dbTCPPassword) {
    this.dbTCPPassword = dbTCPPassword;
  }


  public InstallInstallConfig dbTCPPort(String dbTCPPort) {
    
    this.dbTCPPort = dbTCPPort;
    return this;
  }

   /**
   * Get dbTCPPort
   * @return dbTCPPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbTCPPort() {
    return dbTCPPort;
  }


  public void setDbTCPPort(String dbTCPPort) {
    this.dbTCPPort = dbTCPPort;
  }


  public InstallInstallConfig dbTCPUser(String dbTCPUser) {
    
    this.dbTCPUser = dbTCPUser;
    return this;
  }

   /**
   * Get dbTCPUser
   * @return dbTCPUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDbTCPUser() {
    return dbTCPUser;
  }


  public void setDbTCPUser(String dbTCPUser) {
    this.dbTCPUser = dbTCPUser;
  }


  public InstallInstallConfig dbUseDefaults(Boolean dbUseDefaults) {
    
    this.dbUseDefaults = dbUseDefaults;
    return this;
  }

   /**
   * Get dbUseDefaults
   * @return dbUseDefaults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDbUseDefaults() {
    return dbUseDefaults;
  }


  public void setDbUseDefaults(Boolean dbUseDefaults) {
    this.dbUseDefaults = dbUseDefaults;
  }


  public InstallInstallConfig dsFolder(String dsFolder) {
    
    this.dsFolder = dsFolder;
    return this;
  }

   /**
   * Get dsFolder
   * @return dsFolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsFolder() {
    return dsFolder;
  }


  public void setDsFolder(String dsFolder) {
    this.dsFolder = dsFolder;
  }


  public InstallInstallConfig dsName(String dsName) {
    
    this.dsName = dsName;
    return this;
  }

   /**
   * Get dsName
   * @return dsName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsName() {
    return dsName;
  }


  public void setDsName(String dsName) {
    this.dsName = dsName;
  }


  public InstallInstallConfig dsPort(String dsPort) {
    
    this.dsPort = dsPort;
    return this;
  }

   /**
   * Get dsPort
   * @return dsPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsPort() {
    return dsPort;
  }


  public void setDsPort(String dsPort) {
    this.dsPort = dsPort;
  }


  public InstallInstallConfig dsS3ApiKey(String dsS3ApiKey) {
    
    this.dsS3ApiKey = dsS3ApiKey;
    return this;
  }

   /**
   * Get dsS3ApiKey
   * @return dsS3ApiKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3ApiKey() {
    return dsS3ApiKey;
  }


  public void setDsS3ApiKey(String dsS3ApiKey) {
    this.dsS3ApiKey = dsS3ApiKey;
  }


  public InstallInstallConfig dsS3ApiSecret(String dsS3ApiSecret) {
    
    this.dsS3ApiSecret = dsS3ApiSecret;
    return this;
  }

   /**
   * Get dsS3ApiSecret
   * @return dsS3ApiSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3ApiSecret() {
    return dsS3ApiSecret;
  }


  public void setDsS3ApiSecret(String dsS3ApiSecret) {
    this.dsS3ApiSecret = dsS3ApiSecret;
  }


  public InstallInstallConfig dsS3BucketBinaries(String dsS3BucketBinaries) {
    
    this.dsS3BucketBinaries = dsS3BucketBinaries;
    return this;
  }

   /**
   * Get dsS3BucketBinaries
   * @return dsS3BucketBinaries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3BucketBinaries() {
    return dsS3BucketBinaries;
  }


  public void setDsS3BucketBinaries(String dsS3BucketBinaries) {
    this.dsS3BucketBinaries = dsS3BucketBinaries;
  }


  public InstallInstallConfig dsS3BucketCells(String dsS3BucketCells) {
    
    this.dsS3BucketCells = dsS3BucketCells;
    return this;
  }

   /**
   * Get dsS3BucketCells
   * @return dsS3BucketCells
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3BucketCells() {
    return dsS3BucketCells;
  }


  public void setDsS3BucketCells(String dsS3BucketCells) {
    this.dsS3BucketCells = dsS3BucketCells;
  }


  public InstallInstallConfig dsS3BucketDefault(String dsS3BucketDefault) {
    
    this.dsS3BucketDefault = dsS3BucketDefault;
    return this;
  }

   /**
   * Get dsS3BucketDefault
   * @return dsS3BucketDefault
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3BucketDefault() {
    return dsS3BucketDefault;
  }


  public void setDsS3BucketDefault(String dsS3BucketDefault) {
    this.dsS3BucketDefault = dsS3BucketDefault;
  }


  public InstallInstallConfig dsS3BucketPersonal(String dsS3BucketPersonal) {
    
    this.dsS3BucketPersonal = dsS3BucketPersonal;
    return this;
  }

   /**
   * Get dsS3BucketPersonal
   * @return dsS3BucketPersonal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3BucketPersonal() {
    return dsS3BucketPersonal;
  }


  public void setDsS3BucketPersonal(String dsS3BucketPersonal) {
    this.dsS3BucketPersonal = dsS3BucketPersonal;
  }


  public InstallInstallConfig dsS3BucketThumbs(String dsS3BucketThumbs) {
    
    this.dsS3BucketThumbs = dsS3BucketThumbs;
    return this;
  }

   /**
   * Get dsS3BucketThumbs
   * @return dsS3BucketThumbs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3BucketThumbs() {
    return dsS3BucketThumbs;
  }


  public void setDsS3BucketThumbs(String dsS3BucketThumbs) {
    this.dsS3BucketThumbs = dsS3BucketThumbs;
  }


  public InstallInstallConfig dsS3BucketVersions(String dsS3BucketVersions) {
    
    this.dsS3BucketVersions = dsS3BucketVersions;
    return this;
  }

   /**
   * Get dsS3BucketVersions
   * @return dsS3BucketVersions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3BucketVersions() {
    return dsS3BucketVersions;
  }


  public void setDsS3BucketVersions(String dsS3BucketVersions) {
    this.dsS3BucketVersions = dsS3BucketVersions;
  }


  public InstallInstallConfig dsS3Custom(String dsS3Custom) {
    
    this.dsS3Custom = dsS3Custom;
    return this;
  }

   /**
   * Get dsS3Custom
   * @return dsS3Custom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3Custom() {
    return dsS3Custom;
  }


  public void setDsS3Custom(String dsS3Custom) {
    this.dsS3Custom = dsS3Custom;
  }


  public InstallInstallConfig dsS3CustomRegion(String dsS3CustomRegion) {
    
    this.dsS3CustomRegion = dsS3CustomRegion;
    return this;
  }

   /**
   * Get dsS3CustomRegion
   * @return dsS3CustomRegion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsS3CustomRegion() {
    return dsS3CustomRegion;
  }


  public void setDsS3CustomRegion(String dsS3CustomRegion) {
    this.dsS3CustomRegion = dsS3CustomRegion;
  }


  public InstallInstallConfig dsType(String dsType) {
    
    this.dsType = dsType;
    return this;
  }

   /**
   * Get dsType
   * @return dsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsType() {
    return dsType;
  }


  public void setDsType(String dsType) {
    this.dsType = dsType;
  }


  public InstallInstallConfig frontendApplicationTitle(String frontendApplicationTitle) {
    
    this.frontendApplicationTitle = frontendApplicationTitle;
    return this;
  }

   /**
   * Get frontendApplicationTitle
   * @return frontendApplicationTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontendApplicationTitle() {
    return frontendApplicationTitle;
  }


  public void setFrontendApplicationTitle(String frontendApplicationTitle) {
    this.frontendApplicationTitle = frontendApplicationTitle;
  }


  public InstallInstallConfig frontendDefaultLanguage(String frontendDefaultLanguage) {
    
    this.frontendDefaultLanguage = frontendDefaultLanguage;
    return this;
  }

   /**
   * Get frontendDefaultLanguage
   * @return frontendDefaultLanguage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontendDefaultLanguage() {
    return frontendDefaultLanguage;
  }


  public void setFrontendDefaultLanguage(String frontendDefaultLanguage) {
    this.frontendDefaultLanguage = frontendDefaultLanguage;
  }


  public InstallInstallConfig frontendHosts(String frontendHosts) {
    
    this.frontendHosts = frontendHosts;
    return this;
  }

   /**
   * Get frontendHosts
   * @return frontendHosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontendHosts() {
    return frontendHosts;
  }


  public void setFrontendHosts(String frontendHosts) {
    this.frontendHosts = frontendHosts;
  }


  public InstallInstallConfig frontendLogin(String frontendLogin) {
    
    this.frontendLogin = frontendLogin;
    return this;
  }

   /**
   * Get frontendLogin
   * @return frontendLogin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontendLogin() {
    return frontendLogin;
  }


  public void setFrontendLogin(String frontendLogin) {
    this.frontendLogin = frontendLogin;
  }


  public InstallInstallConfig frontendPassword(String frontendPassword) {
    
    this.frontendPassword = frontendPassword;
    return this;
  }

   /**
   * Get frontendPassword
   * @return frontendPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontendPassword() {
    return frontendPassword;
  }


  public void setFrontendPassword(String frontendPassword) {
    this.frontendPassword = frontendPassword;
  }


  public InstallInstallConfig frontendRepeatPassword(String frontendRepeatPassword) {
    
    this.frontendRepeatPassword = frontendRepeatPassword;
    return this;
  }

   /**
   * Get frontendRepeatPassword
   * @return frontendRepeatPassword
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFrontendRepeatPassword() {
    return frontendRepeatPassword;
  }


  public void setFrontendRepeatPassword(String frontendRepeatPassword) {
    this.frontendRepeatPassword = frontendRepeatPassword;
  }


  public InstallInstallConfig internalUrl(String internalUrl) {
    
    this.internalUrl = internalUrl;
    return this;
  }

   /**
   * Get internalUrl
   * @return internalUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInternalUrl() {
    return internalUrl;
  }


  public void setInternalUrl(String internalUrl) {
    this.internalUrl = internalUrl;
  }


  public InstallInstallConfig licenseRequired(Boolean licenseRequired) {
    
    this.licenseRequired = licenseRequired;
    return this;
  }

   /**
   * Get licenseRequired
   * @return licenseRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLicenseRequired() {
    return licenseRequired;
  }


  public void setLicenseRequired(Boolean licenseRequired) {
    this.licenseRequired = licenseRequired;
  }


  public InstallInstallConfig licenseString(String licenseString) {
    
    this.licenseString = licenseString;
    return this;
  }

   /**
   * Get licenseString
   * @return licenseString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLicenseString() {
    return licenseString;
  }


  public void setLicenseString(String licenseString) {
    this.licenseString = licenseString;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstallInstallConfig installInstallConfig = (InstallInstallConfig) o;
    return Objects.equals(this.checkResults, installInstallConfig.checkResults) &&
        Objects.equals(this.documentsDSN, installInstallConfig.documentsDSN) &&
        Objects.equals(this.proxyConfig, installInstallConfig.proxyConfig) &&
        Objects.equals(this.useDocumentsDSN, installInstallConfig.useDocumentsDSN) &&
        Objects.equals(this.dbConnectionType, installInstallConfig.dbConnectionType) &&
        Objects.equals(this.dbManualDSN, installInstallConfig.dbManualDSN) &&
        Objects.equals(this.dbSocketFile, installInstallConfig.dbSocketFile) &&
        Objects.equals(this.dbSocketName, installInstallConfig.dbSocketName) &&
        Objects.equals(this.dbSocketPassword, installInstallConfig.dbSocketPassword) &&
        Objects.equals(this.dbSocketUser, installInstallConfig.dbSocketUser) &&
        Objects.equals(this.dbTCPHostname, installInstallConfig.dbTCPHostname) &&
        Objects.equals(this.dbTCPName, installInstallConfig.dbTCPName) &&
        Objects.equals(this.dbTCPPassword, installInstallConfig.dbTCPPassword) &&
        Objects.equals(this.dbTCPPort, installInstallConfig.dbTCPPort) &&
        Objects.equals(this.dbTCPUser, installInstallConfig.dbTCPUser) &&
        Objects.equals(this.dbUseDefaults, installInstallConfig.dbUseDefaults) &&
        Objects.equals(this.dsFolder, installInstallConfig.dsFolder) &&
        Objects.equals(this.dsName, installInstallConfig.dsName) &&
        Objects.equals(this.dsPort, installInstallConfig.dsPort) &&
        Objects.equals(this.dsS3ApiKey, installInstallConfig.dsS3ApiKey) &&
        Objects.equals(this.dsS3ApiSecret, installInstallConfig.dsS3ApiSecret) &&
        Objects.equals(this.dsS3BucketBinaries, installInstallConfig.dsS3BucketBinaries) &&
        Objects.equals(this.dsS3BucketCells, installInstallConfig.dsS3BucketCells) &&
        Objects.equals(this.dsS3BucketDefault, installInstallConfig.dsS3BucketDefault) &&
        Objects.equals(this.dsS3BucketPersonal, installInstallConfig.dsS3BucketPersonal) &&
        Objects.equals(this.dsS3BucketThumbs, installInstallConfig.dsS3BucketThumbs) &&
        Objects.equals(this.dsS3BucketVersions, installInstallConfig.dsS3BucketVersions) &&
        Objects.equals(this.dsS3Custom, installInstallConfig.dsS3Custom) &&
        Objects.equals(this.dsS3CustomRegion, installInstallConfig.dsS3CustomRegion) &&
        Objects.equals(this.dsType, installInstallConfig.dsType) &&
        Objects.equals(this.frontendApplicationTitle, installInstallConfig.frontendApplicationTitle) &&
        Objects.equals(this.frontendDefaultLanguage, installInstallConfig.frontendDefaultLanguage) &&
        Objects.equals(this.frontendHosts, installInstallConfig.frontendHosts) &&
        Objects.equals(this.frontendLogin, installInstallConfig.frontendLogin) &&
        Objects.equals(this.frontendPassword, installInstallConfig.frontendPassword) &&
        Objects.equals(this.frontendRepeatPassword, installInstallConfig.frontendRepeatPassword) &&
        Objects.equals(this.internalUrl, installInstallConfig.internalUrl) &&
        Objects.equals(this.licenseRequired, installInstallConfig.licenseRequired) &&
        Objects.equals(this.licenseString, installInstallConfig.licenseString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkResults, documentsDSN, proxyConfig, useDocumentsDSN, dbConnectionType, dbManualDSN, dbSocketFile, dbSocketName, dbSocketPassword, dbSocketUser, dbTCPHostname, dbTCPName, dbTCPPassword, dbTCPPort, dbTCPUser, dbUseDefaults, dsFolder, dsName, dsPort, dsS3ApiKey, dsS3ApiSecret, dsS3BucketBinaries, dsS3BucketCells, dsS3BucketDefault, dsS3BucketPersonal, dsS3BucketThumbs, dsS3BucketVersions, dsS3Custom, dsS3CustomRegion, dsType, frontendApplicationTitle, frontendDefaultLanguage, frontendHosts, frontendLogin, frontendPassword, frontendRepeatPassword, internalUrl, licenseRequired, licenseString);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstallInstallConfig {\n");
    sb.append("    checkResults: ").append(toIndentedString(checkResults)).append("\n");
    sb.append("    documentsDSN: ").append(toIndentedString(documentsDSN)).append("\n");
    sb.append("    proxyConfig: ").append(toIndentedString(proxyConfig)).append("\n");
    sb.append("    useDocumentsDSN: ").append(toIndentedString(useDocumentsDSN)).append("\n");
    sb.append("    dbConnectionType: ").append(toIndentedString(dbConnectionType)).append("\n");
    sb.append("    dbManualDSN: ").append(toIndentedString(dbManualDSN)).append("\n");
    sb.append("    dbSocketFile: ").append(toIndentedString(dbSocketFile)).append("\n");
    sb.append("    dbSocketName: ").append(toIndentedString(dbSocketName)).append("\n");
    sb.append("    dbSocketPassword: ").append(toIndentedString(dbSocketPassword)).append("\n");
    sb.append("    dbSocketUser: ").append(toIndentedString(dbSocketUser)).append("\n");
    sb.append("    dbTCPHostname: ").append(toIndentedString(dbTCPHostname)).append("\n");
    sb.append("    dbTCPName: ").append(toIndentedString(dbTCPName)).append("\n");
    sb.append("    dbTCPPassword: ").append(toIndentedString(dbTCPPassword)).append("\n");
    sb.append("    dbTCPPort: ").append(toIndentedString(dbTCPPort)).append("\n");
    sb.append("    dbTCPUser: ").append(toIndentedString(dbTCPUser)).append("\n");
    sb.append("    dbUseDefaults: ").append(toIndentedString(dbUseDefaults)).append("\n");
    sb.append("    dsFolder: ").append(toIndentedString(dsFolder)).append("\n");
    sb.append("    dsName: ").append(toIndentedString(dsName)).append("\n");
    sb.append("    dsPort: ").append(toIndentedString(dsPort)).append("\n");
    sb.append("    dsS3ApiKey: ").append(toIndentedString(dsS3ApiKey)).append("\n");
    sb.append("    dsS3ApiSecret: ").append(toIndentedString(dsS3ApiSecret)).append("\n");
    sb.append("    dsS3BucketBinaries: ").append(toIndentedString(dsS3BucketBinaries)).append("\n");
    sb.append("    dsS3BucketCells: ").append(toIndentedString(dsS3BucketCells)).append("\n");
    sb.append("    dsS3BucketDefault: ").append(toIndentedString(dsS3BucketDefault)).append("\n");
    sb.append("    dsS3BucketPersonal: ").append(toIndentedString(dsS3BucketPersonal)).append("\n");
    sb.append("    dsS3BucketThumbs: ").append(toIndentedString(dsS3BucketThumbs)).append("\n");
    sb.append("    dsS3BucketVersions: ").append(toIndentedString(dsS3BucketVersions)).append("\n");
    sb.append("    dsS3Custom: ").append(toIndentedString(dsS3Custom)).append("\n");
    sb.append("    dsS3CustomRegion: ").append(toIndentedString(dsS3CustomRegion)).append("\n");
    sb.append("    dsType: ").append(toIndentedString(dsType)).append("\n");
    sb.append("    frontendApplicationTitle: ").append(toIndentedString(frontendApplicationTitle)).append("\n");
    sb.append("    frontendDefaultLanguage: ").append(toIndentedString(frontendDefaultLanguage)).append("\n");
    sb.append("    frontendHosts: ").append(toIndentedString(frontendHosts)).append("\n");
    sb.append("    frontendLogin: ").append(toIndentedString(frontendLogin)).append("\n");
    sb.append("    frontendPassword: ").append(toIndentedString(frontendPassword)).append("\n");
    sb.append("    frontendRepeatPassword: ").append(toIndentedString(frontendRepeatPassword)).append("\n");
    sb.append("    internalUrl: ").append(toIndentedString(internalUrl)).append("\n");
    sb.append("    licenseRequired: ").append(toIndentedString(licenseRequired)).append("\n");
    sb.append("    licenseString: ").append(toIndentedString(licenseString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

