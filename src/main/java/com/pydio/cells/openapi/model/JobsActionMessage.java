/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Set;

import io.swagger.annotations.ApiModelProperty;

/**
 * JobsActionMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-06T14:22:40.613083+01:00[Europe/Berlin]")
public class JobsActionMessage {
  public static final String SERIALIZED_NAME_ACLS = "Acls";
  @SerializedName(SERIALIZED_NAME_ACLS)
  private List<IdmACL> acls = null;

  public static final String SERIALIZED_NAME_ACTIVITIES = "Activities";
  @SerializedName(SERIALIZED_NAME_ACTIVITIES)
  private List<ActivityObject> activities = null;

  public static final String SERIALIZED_NAME_DATA_SOURCES = "DataSources";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCES)
  private List<ObjectDataSource> dataSources = null;

  public static final String SERIALIZED_NAME_EVENT = "Event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private ProtobufAny event;

  public static final String SERIALIZED_NAME_NODES = "Nodes";
  @SerializedName(SERIALIZED_NAME_NODES)
  private List<TreeNode> nodes = null;

  public static final String SERIALIZED_NAME_OUTPUT_CHAIN = "OutputChain";
  @SerializedName(SERIALIZED_NAME_OUTPUT_CHAIN)
  private List<JobsActionOutput> outputChain = null;

  public static final String SERIALIZED_NAME_ROLES = "Roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private List<IdmRole> roles = null;

  public static final String SERIALIZED_NAME_USERS = "Users";
  @SerializedName(SERIALIZED_NAME_USERS)
  private List<IdmUser> users = null;

  public static final String SERIALIZED_NAME_WORKSPACES = "Workspaces";
  @SerializedName(SERIALIZED_NAME_WORKSPACES)
  private List<IdmWorkspace> workspaces = null;

  public JobsActionMessage() {
  }

  public JobsActionMessage acls(List<IdmACL> acls) {
    
    this.acls = acls;
    return this;
  }

  public JobsActionMessage addAclsItem(IdmACL aclsItem) {
    if (this.acls == null) {
      this.acls = new ArrayList<>();
    }
    this.acls.add(aclsItem);
    return this;
  }

   /**
   * Get acls
   * @return acls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdmACL> getAcls() {
    return acls;
  }


  public void setAcls(List<IdmACL> acls) {
    this.acls = acls;
  }


  public JobsActionMessage activities(List<ActivityObject> activities) {
    
    this.activities = activities;
    return this;
  }

  public JobsActionMessage addActivitiesItem(ActivityObject activitiesItem) {
    if (this.activities == null) {
      this.activities = new ArrayList<>();
    }
    this.activities.add(activitiesItem);
    return this;
  }

   /**
   * Get activities
   * @return activities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ActivityObject> getActivities() {
    return activities;
  }


  public void setActivities(List<ActivityObject> activities) {
    this.activities = activities;
  }


  public JobsActionMessage dataSources(List<ObjectDataSource> dataSources) {
    
    this.dataSources = dataSources;
    return this;
  }

  public JobsActionMessage addDataSourcesItem(ObjectDataSource dataSourcesItem) {
    if (this.dataSources == null) {
      this.dataSources = new ArrayList<>();
    }
    this.dataSources.add(dataSourcesItem);
    return this;
  }

   /**
   * Get dataSources
   * @return dataSources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ObjectDataSource> getDataSources() {
    return dataSources;
  }


  public void setDataSources(List<ObjectDataSource> dataSources) {
    this.dataSources = dataSources;
  }


  public JobsActionMessage event(ProtobufAny event) {
    
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProtobufAny getEvent() {
    return event;
  }


  public void setEvent(ProtobufAny event) {
    this.event = event;
  }


  public JobsActionMessage nodes(List<TreeNode> nodes) {
    
    this.nodes = nodes;
    return this;
  }

  public JobsActionMessage addNodesItem(TreeNode nodesItem) {
    if (this.nodes == null) {
      this.nodes = new ArrayList<>();
    }
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TreeNode> getNodes() {
    return nodes;
  }


  public void setNodes(List<TreeNode> nodes) {
    this.nodes = nodes;
  }


  public JobsActionMessage outputChain(List<JobsActionOutput> outputChain) {
    
    this.outputChain = outputChain;
    return this;
  }

  public JobsActionMessage addOutputChainItem(JobsActionOutput outputChainItem) {
    if (this.outputChain == null) {
      this.outputChain = new ArrayList<>();
    }
    this.outputChain.add(outputChainItem);
    return this;
  }

   /**
   * Get outputChain
   * @return outputChain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<JobsActionOutput> getOutputChain() {
    return outputChain;
  }


  public void setOutputChain(List<JobsActionOutput> outputChain) {
    this.outputChain = outputChain;
  }


  public JobsActionMessage roles(List<IdmRole> roles) {
    
    this.roles = roles;
    return this;
  }

  public JobsActionMessage addRolesItem(IdmRole rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdmRole> getRoles() {
    return roles;
  }


  public void setRoles(List<IdmRole> roles) {
    this.roles = roles;
  }


  public JobsActionMessage users(List<IdmUser> users) {
    
    this.users = users;
    return this;
  }

  public JobsActionMessage addUsersItem(IdmUser usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdmUser> getUsers() {
    return users;
  }


  public void setUsers(List<IdmUser> users) {
    this.users = users;
  }


  public JobsActionMessage workspaces(List<IdmWorkspace> workspaces) {
    
    this.workspaces = workspaces;
    return this;
  }

  public JobsActionMessage addWorkspacesItem(IdmWorkspace workspacesItem) {
    if (this.workspaces == null) {
      this.workspaces = new ArrayList<>();
    }
    this.workspaces.add(workspacesItem);
    return this;
  }

   /**
   * Get workspaces
   * @return workspaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdmWorkspace> getWorkspaces() {
    return workspaces;
  }


  public void setWorkspaces(List<IdmWorkspace> workspaces) {
    this.workspaces = workspaces;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsActionMessage jobsActionMessage = (JobsActionMessage) o;
    return Objects.equals(this.acls, jobsActionMessage.acls) &&
        Objects.equals(this.activities, jobsActionMessage.activities) &&
        Objects.equals(this.dataSources, jobsActionMessage.dataSources) &&
        Objects.equals(this.event, jobsActionMessage.event) &&
        Objects.equals(this.nodes, jobsActionMessage.nodes) &&
        Objects.equals(this.outputChain, jobsActionMessage.outputChain) &&
        Objects.equals(this.roles, jobsActionMessage.roles) &&
        Objects.equals(this.users, jobsActionMessage.users) &&
        Objects.equals(this.workspaces, jobsActionMessage.workspaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(acls, activities, dataSources, event, nodes, outputChain, roles, users, workspaces);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsActionMessage {\n");
    sb.append("    acls: ").append(toIndentedString(acls)).append("\n");
    sb.append("    activities: ").append(toIndentedString(activities)).append("\n");
    sb.append("    dataSources: ").append(toIndentedString(dataSources)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    outputChain: ").append(toIndentedString(outputChain)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    workspaces: ").append(toIndentedString(workspaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Acls");
    openapiFields.add("Activities");
    openapiFields.add("DataSources");
    openapiFields.add("Event");
    openapiFields.add("Nodes");
    openapiFields.add("OutputChain");
    openapiFields.add("Roles");
    openapiFields.add("Users");
    openapiFields.add("Workspaces");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobsActionMessage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobsActionMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobsActionMessage is not found in the empty JSON string", JobsActionMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!JobsActionMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobsActionMessage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("Acls") != null && !jsonObj.get("Acls").isJsonNull()) {
        JsonArray jsonArrayacls = jsonObj.getAsJsonArray("Acls");
        if (jsonArrayacls != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Acls").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Acls` to be an array in the JSON string but got `%s`", jsonObj.get("Acls").toString()));
          }

          // validate the optional field `Acls` (array)
          for (int i = 0; i < jsonArrayacls.size(); i++) {
            IdmACL.validateJsonObject(jsonArrayacls.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Activities") != null && !jsonObj.get("Activities").isJsonNull()) {
        JsonArray jsonArrayactivities = jsonObj.getAsJsonArray("Activities");
        if (jsonArrayactivities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Activities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Activities` to be an array in the JSON string but got `%s`", jsonObj.get("Activities").toString()));
          }

          // validate the optional field `Activities` (array)
          for (int i = 0; i < jsonArrayactivities.size(); i++) {
            ActivityObject.validateJsonObject(jsonArrayactivities.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("DataSources") != null && !jsonObj.get("DataSources").isJsonNull()) {
        JsonArray jsonArraydataSources = jsonObj.getAsJsonArray("DataSources");
        if (jsonArraydataSources != null) {
          // ensure the json data is an array
          if (!jsonObj.get("DataSources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `DataSources` to be an array in the JSON string but got `%s`", jsonObj.get("DataSources").toString()));
          }

          // validate the optional field `DataSources` (array)
          for (int i = 0; i < jsonArraydataSources.size(); i++) {
            ObjectDataSource.validateJsonObject(jsonArraydataSources.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Nodes") != null && !jsonObj.get("Nodes").isJsonNull()) {
        JsonArray jsonArraynodes = jsonObj.getAsJsonArray("Nodes");
        if (jsonArraynodes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Nodes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Nodes` to be an array in the JSON string but got `%s`", jsonObj.get("Nodes").toString()));
          }

          // validate the optional field `Nodes` (array)
          for (int i = 0; i < jsonArraynodes.size(); i++) {
            TreeNode.validateJsonObject(jsonArraynodes.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("OutputChain") != null && !jsonObj.get("OutputChain").isJsonNull()) {
        JsonArray jsonArrayoutputChain = jsonObj.getAsJsonArray("OutputChain");
        if (jsonArrayoutputChain != null) {
          // ensure the json data is an array
          if (!jsonObj.get("OutputChain").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `OutputChain` to be an array in the JSON string but got `%s`", jsonObj.get("OutputChain").toString()));
          }

          // validate the optional field `OutputChain` (array)
          for (int i = 0; i < jsonArrayoutputChain.size(); i++) {
            JobsActionOutput.validateJsonObject(jsonArrayoutputChain.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Roles") != null && !jsonObj.get("Roles").isJsonNull()) {
        JsonArray jsonArrayroles = jsonObj.getAsJsonArray("Roles");
        if (jsonArrayroles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Roles").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Roles` to be an array in the JSON string but got `%s`", jsonObj.get("Roles").toString()));
          }

          // validate the optional field `Roles` (array)
          for (int i = 0; i < jsonArrayroles.size(); i++) {
            IdmRole.validateJsonObject(jsonArrayroles.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Users") != null && !jsonObj.get("Users").isJsonNull()) {
        JsonArray jsonArrayusers = jsonObj.getAsJsonArray("Users");
        if (jsonArrayusers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Users` to be an array in the JSON string but got `%s`", jsonObj.get("Users").toString()));
          }

          // validate the optional field `Users` (array)
          for (int i = 0; i < jsonArrayusers.size(); i++) {
            IdmUser.validateJsonObject(jsonArrayusers.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("Workspaces") != null && !jsonObj.get("Workspaces").isJsonNull()) {
        JsonArray jsonArrayworkspaces = jsonObj.getAsJsonArray("Workspaces");
        if (jsonArrayworkspaces != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Workspaces").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Workspaces` to be an array in the JSON string but got `%s`", jsonObj.get("Workspaces").toString()));
          }

          // validate the optional field `Workspaces` (array)
          for (int i = 0; i < jsonArrayworkspaces.size(); i++) {
            IdmWorkspace.validateJsonObject(jsonArrayworkspaces.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobsActionMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobsActionMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobsActionMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobsActionMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<JobsActionMessage>() {
           @Override
           public void write(JsonWriter out, JobsActionMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobsActionMessage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobsActionMessage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobsActionMessage
  * @throws IOException if the JSON string is invalid with respect to JobsActionMessage
  */
  public static JobsActionMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobsActionMessage.class);
  }

 /**
  * Convert an instance of JobsActionMessage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

