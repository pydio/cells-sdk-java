/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Set;

import io.swagger.annotations.ApiModelProperty;

/**
 * IdmUpdateUserMetaRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-06T14:22:40.613083+01:00[Europe/Berlin]")
public class IdmUpdateUserMetaRequest {
  public static final String SERIALIZED_NAME_META_DATAS = "MetaDatas";
  @SerializedName(SERIALIZED_NAME_META_DATAS)
  private List<IdmUserMeta> metaDatas = null;

  public static final String SERIALIZED_NAME_OPERATION = "Operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private UpdateUserMetaRequestUserMetaOp operation = UpdateUserMetaRequestUserMetaOp.PUT;

  public IdmUpdateUserMetaRequest() {
  }

  public IdmUpdateUserMetaRequest metaDatas(List<IdmUserMeta> metaDatas) {
    
    this.metaDatas = metaDatas;
    return this;
  }

  public IdmUpdateUserMetaRequest addMetaDatasItem(IdmUserMeta metaDatasItem) {
    if (this.metaDatas == null) {
      this.metaDatas = new ArrayList<>();
    }
    this.metaDatas.add(metaDatasItem);
    return this;
  }

   /**
   * Get metaDatas
   * @return metaDatas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdmUserMeta> getMetaDatas() {
    return metaDatas;
  }


  public void setMetaDatas(List<IdmUserMeta> metaDatas) {
    this.metaDatas = metaDatas;
  }


  public IdmUpdateUserMetaRequest operation(UpdateUserMetaRequestUserMetaOp operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Get operation
   * @return operation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UpdateUserMetaRequestUserMetaOp getOperation() {
    return operation;
  }


  public void setOperation(UpdateUserMetaRequestUserMetaOp operation) {
    this.operation = operation;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdmUpdateUserMetaRequest idmUpdateUserMetaRequest = (IdmUpdateUserMetaRequest) o;
    return Objects.equals(this.metaDatas, idmUpdateUserMetaRequest.metaDatas) &&
        Objects.equals(this.operation, idmUpdateUserMetaRequest.operation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metaDatas, operation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdmUpdateUserMetaRequest {\n");
    sb.append("    metaDatas: ").append(toIndentedString(metaDatas)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MetaDatas");
    openapiFields.add("Operation");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to IdmUpdateUserMetaRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!IdmUpdateUserMetaRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IdmUpdateUserMetaRequest is not found in the empty JSON string", IdmUpdateUserMetaRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!IdmUpdateUserMetaRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdmUpdateUserMetaRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("MetaDatas") != null && !jsonObj.get("MetaDatas").isJsonNull()) {
        JsonArray jsonArraymetaDatas = jsonObj.getAsJsonArray("MetaDatas");
        if (jsonArraymetaDatas != null) {
          // ensure the json data is an array
          if (!jsonObj.get("MetaDatas").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `MetaDatas` to be an array in the JSON string but got `%s`", jsonObj.get("MetaDatas").toString()));
          }

          // validate the optional field `MetaDatas` (array)
          for (int i = 0; i < jsonArraymetaDatas.size(); i++) {
            IdmUserMeta.validateJsonObject(jsonArraymetaDatas.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IdmUpdateUserMetaRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IdmUpdateUserMetaRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IdmUpdateUserMetaRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IdmUpdateUserMetaRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<IdmUpdateUserMetaRequest>() {
           @Override
           public void write(JsonWriter out, IdmUpdateUserMetaRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IdmUpdateUserMetaRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of IdmUpdateUserMetaRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of IdmUpdateUserMetaRequest
  * @throws IOException if the JSON string is invalid with respect to IdmUpdateUserMetaRequest
  */
  public static IdmUpdateUserMetaRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IdmUpdateUserMetaRequest.class);
  }

 /**
  * Convert an instance of IdmUpdateUserMetaRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

