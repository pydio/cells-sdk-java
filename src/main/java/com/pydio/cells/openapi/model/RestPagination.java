/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * RestPagination
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-19T16:47:50.322929+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class RestPagination {
    public static final String SERIALIZED_NAME_CURRENT_OFFSET = "CurrentOffset";
    @SerializedName(SERIALIZED_NAME_CURRENT_OFFSET)
    @javax.annotation.Nullable
    private Integer currentOffset;

    public static final String SERIALIZED_NAME_CURRENT_PAGE = "CurrentPage";
    @SerializedName(SERIALIZED_NAME_CURRENT_PAGE)
    @javax.annotation.Nullable
    private Integer currentPage;

    public static final String SERIALIZED_NAME_LIMIT = "Limit";
    @SerializedName(SERIALIZED_NAME_LIMIT)
    @javax.annotation.Nullable
    private Integer limit;

    public static final String SERIALIZED_NAME_NEXT_OFFSET = "NextOffset";
    @SerializedName(SERIALIZED_NAME_NEXT_OFFSET)
    @javax.annotation.Nullable
    private Integer nextOffset;

    public static final String SERIALIZED_NAME_PREV_OFFSET = "PrevOffset";
    @SerializedName(SERIALIZED_NAME_PREV_OFFSET)
    @javax.annotation.Nullable
    private Integer prevOffset;

    public static final String SERIALIZED_NAME_TOTAL = "Total";
    @SerializedName(SERIALIZED_NAME_TOTAL)
    @javax.annotation.Nullable
    private Integer total;

    public static final String SERIALIZED_NAME_TOTAL_PAGES = "TotalPages";
    @SerializedName(SERIALIZED_NAME_TOTAL_PAGES)
    @javax.annotation.Nullable
    private Integer totalPages;

    public RestPagination() {
    }

    public RestPagination currentOffset(@javax.annotation.Nullable Integer currentOffset) {
        this.currentOffset = currentOffset;
        return this;
    }

    /**
     * Get currentOffset
     *
     * @return currentOffset
     */
    @javax.annotation.Nullable
    public Integer getCurrentOffset() {
        return currentOffset;
    }

    public void setCurrentOffset(@javax.annotation.Nullable Integer currentOffset) {
        this.currentOffset = currentOffset;
    }


    public RestPagination currentPage(@javax.annotation.Nullable Integer currentPage) {
        this.currentPage = currentPage;
        return this;
    }

    /**
     * Get currentPage
     *
     * @return currentPage
     */
    @javax.annotation.Nullable
    public Integer getCurrentPage() {
        return currentPage;
    }

    public void setCurrentPage(@javax.annotation.Nullable Integer currentPage) {
        this.currentPage = currentPage;
    }


    public RestPagination limit(@javax.annotation.Nullable Integer limit) {
        this.limit = limit;
        return this;
    }

    /**
     * Get limit
     *
     * @return limit
     */
    @javax.annotation.Nullable
    public Integer getLimit() {
        return limit;
    }

    public void setLimit(@javax.annotation.Nullable Integer limit) {
        this.limit = limit;
    }


    public RestPagination nextOffset(@javax.annotation.Nullable Integer nextOffset) {
        this.nextOffset = nextOffset;
        return this;
    }

    /**
     * Get nextOffset
     *
     * @return nextOffset
     */
    @javax.annotation.Nullable
    public Integer getNextOffset() {
        return nextOffset;
    }

    public void setNextOffset(@javax.annotation.Nullable Integer nextOffset) {
        this.nextOffset = nextOffset;
    }


    public RestPagination prevOffset(@javax.annotation.Nullable Integer prevOffset) {
        this.prevOffset = prevOffset;
        return this;
    }

    /**
     * Get prevOffset
     *
     * @return prevOffset
     */
    @javax.annotation.Nullable
    public Integer getPrevOffset() {
        return prevOffset;
    }

    public void setPrevOffset(@javax.annotation.Nullable Integer prevOffset) {
        this.prevOffset = prevOffset;
    }


    public RestPagination total(@javax.annotation.Nullable Integer total) {
        this.total = total;
        return this;
    }

    /**
     * Get total
     *
     * @return total
     */
    @javax.annotation.Nullable
    public Integer getTotal() {
        return total;
    }

    public void setTotal(@javax.annotation.Nullable Integer total) {
        this.total = total;
    }


    public RestPagination totalPages(@javax.annotation.Nullable Integer totalPages) {
        this.totalPages = totalPages;
        return this;
    }

    /**
     * Get totalPages
     *
     * @return totalPages
     */
    @javax.annotation.Nullable
    public Integer getTotalPages() {
        return totalPages;
    }

    public void setTotalPages(@javax.annotation.Nullable Integer totalPages) {
        this.totalPages = totalPages;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RestPagination restPagination = (RestPagination) o;
        return Objects.equals(this.currentOffset, restPagination.currentOffset) &&
                Objects.equals(this.currentPage, restPagination.currentPage) &&
                Objects.equals(this.limit, restPagination.limit) &&
                Objects.equals(this.nextOffset, restPagination.nextOffset) &&
                Objects.equals(this.prevOffset, restPagination.prevOffset) &&
                Objects.equals(this.total, restPagination.total) &&
                Objects.equals(this.totalPages, restPagination.totalPages);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currentOffset, currentPage, limit, nextOffset, prevOffset, total, totalPages);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RestPagination {\n");
        sb.append("    currentOffset: ").append(toIndentedString(currentOffset)).append("\n");
        sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
        sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
        sb.append("    nextOffset: ").append(toIndentedString(nextOffset)).append("\n");
        sb.append("    prevOffset: ").append(toIndentedString(prevOffset)).append("\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    totalPages: ").append(toIndentedString(totalPages)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("CurrentOffset");
        openapiFields.add("CurrentPage");
        openapiFields.add("Limit");
        openapiFields.add("NextOffset");
        openapiFields.add("PrevOffset");
        openapiFields.add("Total");
        openapiFields.add("TotalPages");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to RestPagination
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!RestPagination.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in RestPagination is not found in the empty JSON string", RestPagination.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!RestPagination.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RestPagination` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!RestPagination.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'RestPagination' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<RestPagination> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(RestPagination.class));

            return (TypeAdapter<T>) new TypeAdapter<RestPagination>() {
                @Override
                public void write(JsonWriter out, RestPagination value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public RestPagination read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of RestPagination given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of RestPagination
     * @throws IOException if the JSON string is invalid with respect to RestPagination
     */
    public static RestPagination fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, RestPagination.class);
    }

    /**
     * Convert an instance of RestPagination to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

