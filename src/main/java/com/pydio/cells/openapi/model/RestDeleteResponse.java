/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * RestDeleteResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-19T16:47:50.322929+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class RestDeleteResponse {
    public static final String SERIALIZED_NAME_NUM_ROWS = "NumRows";
    @SerializedName(SERIALIZED_NAME_NUM_ROWS)
    @javax.annotation.Nullable
    private String numRows;

    public static final String SERIALIZED_NAME_SUCCESS = "Success";
    @SerializedName(SERIALIZED_NAME_SUCCESS)
    @javax.annotation.Nullable
    private Boolean success;

    public RestDeleteResponse() {
    }

    public RestDeleteResponse numRows(@javax.annotation.Nullable String numRows) {
        this.numRows = numRows;
        return this;
    }

    /**
     * Get numRows
     *
     * @return numRows
     */
    @javax.annotation.Nullable
    public String getNumRows() {
        return numRows;
    }

    public void setNumRows(@javax.annotation.Nullable String numRows) {
        this.numRows = numRows;
    }


    public RestDeleteResponse success(@javax.annotation.Nullable Boolean success) {
        this.success = success;
        return this;
    }

    /**
     * Get success
     *
     * @return success
     */
    @javax.annotation.Nullable
    public Boolean getSuccess() {
        return success;
    }

    public void setSuccess(@javax.annotation.Nullable Boolean success) {
        this.success = success;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        RestDeleteResponse restDeleteResponse = (RestDeleteResponse) o;
        return Objects.equals(this.numRows, restDeleteResponse.numRows) &&
                Objects.equals(this.success, restDeleteResponse.success);
    }

    @Override
    public int hashCode() {
        return Objects.hash(numRows, success);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class RestDeleteResponse {\n");
        sb.append("    numRows: ").append(toIndentedString(numRows)).append("\n");
        sb.append("    success: ").append(toIndentedString(success)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("NumRows");
        openapiFields.add("Success");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to RestDeleteResponse
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!RestDeleteResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in RestDeleteResponse is not found in the empty JSON string", RestDeleteResponse.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!RestDeleteResponse.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RestDeleteResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("NumRows") != null && !jsonObj.get("NumRows").isJsonNull()) && !jsonObj.get("NumRows").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `NumRows` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NumRows").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!RestDeleteResponse.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'RestDeleteResponse' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<RestDeleteResponse> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(RestDeleteResponse.class));

            return (TypeAdapter<T>) new TypeAdapter<RestDeleteResponse>() {
                @Override
                public void write(JsonWriter out, RestDeleteResponse value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public RestDeleteResponse read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of RestDeleteResponse given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of RestDeleteResponse
     * @throws IOException if the JSON string is invalid with respect to RestDeleteResponse
     */
    public static RestDeleteResponse fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, RestDeleteResponse.class);
    }

    /**
     * Convert an instance of RestDeleteResponse to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

