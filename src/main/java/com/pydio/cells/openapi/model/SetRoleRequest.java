/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * Role represents a generic set of permissions that can be applied to any users or groups.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-16T11:01:01.368056162+01:00[Europe/Berlin]", comments = "Generator version: 7.4.0")
public class SetRoleRequest {
    public static final String SERIALIZED_NAME_AUTO_APPLIES = "AutoApplies";
    @SerializedName(SERIALIZED_NAME_AUTO_APPLIES)
    private List<String> autoApplies;

    public static final String SERIALIZED_NAME_FORCE_OVERRIDE = "ForceOverride";
    @SerializedName(SERIALIZED_NAME_FORCE_OVERRIDE)
    private Boolean forceOverride;

    public static final String SERIALIZED_NAME_GROUP_ROLE = "GroupRole";
    @SerializedName(SERIALIZED_NAME_GROUP_ROLE)
    private Boolean groupRole;

    public static final String SERIALIZED_NAME_IS_TEAM = "IsTeam";
    @SerializedName(SERIALIZED_NAME_IS_TEAM)
    private Boolean isTeam;

    public static final String SERIALIZED_NAME_LABEL = "Label";
    @SerializedName(SERIALIZED_NAME_LABEL)
    private String label;

    public static final String SERIALIZED_NAME_LAST_UPDATED = "LastUpdated";
    @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
    private Integer lastUpdated;

    public static final String SERIALIZED_NAME_POLICIES = "Policies";
    @SerializedName(SERIALIZED_NAME_POLICIES)
    private List<ServiceResourcePolicy> policies;

    public static final String SERIALIZED_NAME_POLICIES_CONTEXT_EDITABLE = "PoliciesContextEditable";
    @SerializedName(SERIALIZED_NAME_POLICIES_CONTEXT_EDITABLE)
    private Boolean policiesContextEditable;

    public static final String SERIALIZED_NAME_USER_ROLE = "UserRole";
    @SerializedName(SERIALIZED_NAME_USER_ROLE)
    private Boolean userRole;

    public SetRoleRequest() {
    }

    public SetRoleRequest autoApplies(List<String> autoApplies) {
        this.autoApplies = autoApplies;
        return this;
    }

    public SetRoleRequest addAutoAppliesItem(String autoAppliesItem) {
        if (this.autoApplies == null) {
            this.autoApplies = new ArrayList<>();
        }
        this.autoApplies.add(autoAppliesItem);
        return this;
    }

    /**
     * Get autoApplies
     *
     * @return autoApplies
     **/
    @javax.annotation.Nullable
    public List<String> getAutoApplies() {
        return autoApplies;
    }

    public void setAutoApplies(List<String> autoApplies) {
        this.autoApplies = autoApplies;
    }


    public SetRoleRequest forceOverride(Boolean forceOverride) {
        this.forceOverride = forceOverride;
        return this;
    }

    /**
     * Is used in a stack of roles, this one will always be applied last.
     *
     * @return forceOverride
     **/
    @javax.annotation.Nullable
    public Boolean getForceOverride() {
        return forceOverride;
    }

    public void setForceOverride(Boolean forceOverride) {
        this.forceOverride = forceOverride;
    }


    public SetRoleRequest groupRole(Boolean groupRole) {
        this.groupRole = groupRole;
        return this;
    }

    /**
     * Get groupRole
     *
     * @return groupRole
     **/
    @javax.annotation.Nullable
    public Boolean getGroupRole() {
        return groupRole;
    }

    public void setGroupRole(Boolean groupRole) {
        this.groupRole = groupRole;
    }


    public SetRoleRequest isTeam(Boolean isTeam) {
        this.isTeam = isTeam;
        return this;
    }

    /**
     * Get isTeam
     *
     * @return isTeam
     **/
    @javax.annotation.Nullable
    public Boolean getIsTeam() {
        return isTeam;
    }

    public void setIsTeam(Boolean isTeam) {
        this.isTeam = isTeam;
    }


    public SetRoleRequest label(String label) {
        this.label = label;
        return this;
    }

    /**
     * Get label
     *
     * @return label
     **/
    @javax.annotation.Nullable
    public String getLabel() {
        return label;
    }

    public void setLabel(String label) {
        this.label = label;
    }


    public SetRoleRequest lastUpdated(Integer lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get lastUpdated
     *
     * @return lastUpdated
     **/
    @javax.annotation.Nullable
    public Integer getLastUpdated() {
        return lastUpdated;
    }

    public void setLastUpdated(Integer lastUpdated) {
        this.lastUpdated = lastUpdated;
    }


    public SetRoleRequest policies(List<ServiceResourcePolicy> policies) {
        this.policies = policies;
        return this;
    }

    public SetRoleRequest addPoliciesItem(ServiceResourcePolicy policiesItem) {
        if (this.policies == null) {
            this.policies = new ArrayList<>();
        }
        this.policies.add(policiesItem);
        return this;
    }

    /**
     * Get policies
     *
     * @return policies
     **/
    @javax.annotation.Nullable
    public List<ServiceResourcePolicy> getPolicies() {
        return policies;
    }

    public void setPolicies(List<ServiceResourcePolicy> policies) {
        this.policies = policies;
    }


    public SetRoleRequest policiesContextEditable(Boolean policiesContextEditable) {
        this.policiesContextEditable = policiesContextEditable;
        return this;
    }

    /**
     * Get policiesContextEditable
     *
     * @return policiesContextEditable
     **/
    @javax.annotation.Nullable
    public Boolean getPoliciesContextEditable() {
        return policiesContextEditable;
    }

    public void setPoliciesContextEditable(Boolean policiesContextEditable) {
        this.policiesContextEditable = policiesContextEditable;
    }


    public SetRoleRequest userRole(Boolean userRole) {
        this.userRole = userRole;
        return this;
    }

    /**
     * Get userRole
     *
     * @return userRole
     **/
    @javax.annotation.Nullable
    public Boolean getUserRole() {
        return userRole;
    }

    public void setUserRole(Boolean userRole) {
        this.userRole = userRole;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SetRoleRequest setRoleRequest = (SetRoleRequest) o;
        return Objects.equals(this.autoApplies, setRoleRequest.autoApplies) &&
                Objects.equals(this.forceOverride, setRoleRequest.forceOverride) &&
                Objects.equals(this.groupRole, setRoleRequest.groupRole) &&
                Objects.equals(this.isTeam, setRoleRequest.isTeam) &&
                Objects.equals(this.label, setRoleRequest.label) &&
                Objects.equals(this.lastUpdated, setRoleRequest.lastUpdated) &&
                Objects.equals(this.policies, setRoleRequest.policies) &&
                Objects.equals(this.policiesContextEditable, setRoleRequest.policiesContextEditable) &&
                Objects.equals(this.userRole, setRoleRequest.userRole);
    }

    @Override
    public int hashCode() {
        return Objects.hash(autoApplies, forceOverride, groupRole, isTeam, label, lastUpdated, policies, policiesContextEditable, userRole);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class SetRoleRequest {\n");
        sb.append("    autoApplies: ").append(toIndentedString(autoApplies)).append("\n");
        sb.append("    forceOverride: ").append(toIndentedString(forceOverride)).append("\n");
        sb.append("    groupRole: ").append(toIndentedString(groupRole)).append("\n");
        sb.append("    isTeam: ").append(toIndentedString(isTeam)).append("\n");
        sb.append("    label: ").append(toIndentedString(label)).append("\n");
        sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
        sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
        sb.append("    policiesContextEditable: ").append(toIndentedString(policiesContextEditable)).append("\n");
        sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("AutoApplies");
        openapiFields.add("ForceOverride");
        openapiFields.add("GroupRole");
        openapiFields.add("IsTeam");
        openapiFields.add("Label");
        openapiFields.add("LastUpdated");
        openapiFields.add("Policies");
        openapiFields.add("PoliciesContextEditable");
        openapiFields.add("UserRole");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to SetRoleRequest
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!SetRoleRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in SetRoleRequest is not found in the empty JSON string", SetRoleRequest.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!SetRoleRequest.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SetRoleRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        // ensure the optional json data is an array if present
        if (jsonObj.get("AutoApplies") != null && !jsonObj.get("AutoApplies").isJsonNull() && !jsonObj.get("AutoApplies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `AutoApplies` to be an array in the JSON string but got `%s`", jsonObj.get("AutoApplies").toString()));
        }
        if ((jsonObj.get("Label") != null && !jsonObj.get("Label").isJsonNull()) && !jsonObj.get("Label").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `Label` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Label").toString()));
        }
        if (jsonObj.get("Policies") != null && !jsonObj.get("Policies").isJsonNull()) {
            JsonArray jsonArraypolicies = jsonObj.getAsJsonArray("Policies");
            if (jsonArraypolicies != null) {
                // ensure the json data is an array
                if (!jsonObj.get("Policies").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `Policies` to be an array in the JSON string but got `%s`", jsonObj.get("Policies").toString()));
                }

                // validate the optional field `Policies` (array)
                for (int i = 0; i < jsonArraypolicies.size(); i++) {
                    ServiceResourcePolicy.validateJsonElement(jsonArraypolicies.get(i));
                }
                ;
            }
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!SetRoleRequest.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'SetRoleRequest' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<SetRoleRequest> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(SetRoleRequest.class));

            return (TypeAdapter<T>) new TypeAdapter<SetRoleRequest>() {
                @Override
                public void write(JsonWriter out, SetRoleRequest value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public SetRoleRequest read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of SetRoleRequest given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of SetRoleRequest
     * @throws IOException if the JSON string is invalid with respect to SetRoleRequest
     */
    public static SetRoleRequest fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, SetRoleRequest.class);
    }

    /**
     * Convert an instance of SetRoleRequest to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

