/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Objects;
import java.util.Set;

import io.swagger.annotations.ApiModelProperty;

/**
 * JobsActionOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-20T11:40:14.306426+01:00[Europe/Berlin]")
public class JobsActionOutput {
  public static final String SERIALIZED_NAME_ERROR_STRING = "ErrorString";
  @SerializedName(SERIALIZED_NAME_ERROR_STRING)
  private String errorString;

  public static final String SERIALIZED_NAME_IGNORED = "Ignored";
  @SerializedName(SERIALIZED_NAME_IGNORED)
  private Boolean ignored;

  public static final String SERIALIZED_NAME_JSON_BODY = "JsonBody";
  @SerializedName(SERIALIZED_NAME_JSON_BODY)
  private byte[] jsonBody;

  public static final String SERIALIZED_NAME_RAW_BODY = "RawBody";
  @SerializedName(SERIALIZED_NAME_RAW_BODY)
  private byte[] rawBody;

  public static final String SERIALIZED_NAME_STRING_BODY = "StringBody";
  @SerializedName(SERIALIZED_NAME_STRING_BODY)
  private String stringBody;

  public static final String SERIALIZED_NAME_SUCCESS = "Success";
  @SerializedName(SERIALIZED_NAME_SUCCESS)
  private Boolean success;

  public static final String SERIALIZED_NAME_TIME = "Time";
  @SerializedName(SERIALIZED_NAME_TIME)
  private Integer time;

  public static final String SERIALIZED_NAME_VARS = "Vars";
  @SerializedName(SERIALIZED_NAME_VARS)
  private Map<String, String> vars = null;

  public JobsActionOutput() {
  }

  public JobsActionOutput errorString(String errorString) {
    
    this.errorString = errorString;
    return this;
  }

   /**
   * Get errorString
   * @return errorString
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getErrorString() {
    return errorString;
  }


  public void setErrorString(String errorString) {
    this.errorString = errorString;
  }


  public JobsActionOutput ignored(Boolean ignored) {
    
    this.ignored = ignored;
    return this;
  }

   /**
   * Get ignored
   * @return ignored
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIgnored() {
    return ignored;
  }


  public void setIgnored(Boolean ignored) {
    this.ignored = ignored;
  }


  public JobsActionOutput jsonBody(byte[] jsonBody) {
    
    this.jsonBody = jsonBody;
    return this;
  }

   /**
   * Get jsonBody
   * @return jsonBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public byte[] getJsonBody() {
    return jsonBody;
  }


  public void setJsonBody(byte[] jsonBody) {
    this.jsonBody = jsonBody;
  }


  public JobsActionOutput rawBody(byte[] rawBody) {
    
    this.rawBody = rawBody;
    return this;
  }

   /**
   * Get rawBody
   * @return rawBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public byte[] getRawBody() {
    return rawBody;
  }


  public void setRawBody(byte[] rawBody) {
    this.rawBody = rawBody;
  }


  public JobsActionOutput stringBody(String stringBody) {
    
    this.stringBody = stringBody;
    return this;
  }

   /**
   * Get stringBody
   * @return stringBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStringBody() {
    return stringBody;
  }


  public void setStringBody(String stringBody) {
    this.stringBody = stringBody;
  }


  public JobsActionOutput success(Boolean success) {
    
    this.success = success;
    return this;
  }

   /**
   * Get success
   * @return success
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuccess() {
    return success;
  }


  public void setSuccess(Boolean success) {
    this.success = success;
  }


  public JobsActionOutput time(Integer time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTime() {
    return time;
  }


  public void setTime(Integer time) {
    this.time = time;
  }


  public JobsActionOutput vars(Map<String, String> vars) {
    
    this.vars = vars;
    return this;
  }

  public JobsActionOutput putVarsItem(String key, String varsItem) {
    if (this.vars == null) {
      this.vars = new HashMap<>();
    }
    this.vars.put(key, varsItem);
    return this;
  }

   /**
   * Vars container, values are json-encoded.
   * @return vars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Vars container, values are json-encoded.")

  public Map<String, String> getVars() {
    return vars;
  }


  public void setVars(Map<String, String> vars) {
    this.vars = vars;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsActionOutput jobsActionOutput = (JobsActionOutput) o;
    return Objects.equals(this.errorString, jobsActionOutput.errorString) &&
        Objects.equals(this.ignored, jobsActionOutput.ignored) &&
        Arrays.equals(this.jsonBody, jobsActionOutput.jsonBody) &&
        Arrays.equals(this.rawBody, jobsActionOutput.rawBody) &&
        Objects.equals(this.stringBody, jobsActionOutput.stringBody) &&
        Objects.equals(this.success, jobsActionOutput.success) &&
        Objects.equals(this.time, jobsActionOutput.time) &&
        Objects.equals(this.vars, jobsActionOutput.vars);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorString, ignored, Arrays.hashCode(jsonBody), Arrays.hashCode(rawBody), stringBody, success, time, vars);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsActionOutput {\n");
    sb.append("    errorString: ").append(toIndentedString(errorString)).append("\n");
    sb.append("    ignored: ").append(toIndentedString(ignored)).append("\n");
    sb.append("    jsonBody: ").append(toIndentedString(jsonBody)).append("\n");
    sb.append("    rawBody: ").append(toIndentedString(rawBody)).append("\n");
    sb.append("    stringBody: ").append(toIndentedString(stringBody)).append("\n");
    sb.append("    success: ").append(toIndentedString(success)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    vars: ").append(toIndentedString(vars)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ErrorString");
    openapiFields.add("Ignored");
    openapiFields.add("JsonBody");
    openapiFields.add("RawBody");
    openapiFields.add("StringBody");
    openapiFields.add("Success");
    openapiFields.add("Time");
    openapiFields.add("Vars");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobsActionOutput
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!JobsActionOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobsActionOutput is not found in the empty JSON string", JobsActionOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!JobsActionOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobsActionOutput` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("ErrorString") != null && !jsonObj.get("ErrorString").isJsonNull()) && !jsonObj.get("ErrorString").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ErrorString` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ErrorString").toString()));
      }
      if ((jsonObj.get("StringBody") != null && !jsonObj.get("StringBody").isJsonNull()) && !jsonObj.get("StringBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StringBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StringBody").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobsActionOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobsActionOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobsActionOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobsActionOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<JobsActionOutput>() {
           @Override
           public void write(JsonWriter out, JobsActionOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobsActionOutput read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobsActionOutput given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobsActionOutput
  * @throws IOException if the JSON string is invalid with respect to JobsActionOutput
  */
  public static JobsActionOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobsActionOutput.class);
  }

 /**
  * Convert an instance of JobsActionOutput to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

