/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.JobsTaskStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * JobsListJobsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-19T22:47:44.466567+01:00[Europe/Berlin]")
public class JobsListJobsRequest {
  public static final String SERIALIZED_NAME_OWNER = "Owner";
  @SerializedName(SERIALIZED_NAME_OWNER)
  private String owner;

  public static final String SERIALIZED_NAME_EVENTS_ONLY = "EventsOnly";
  @SerializedName(SERIALIZED_NAME_EVENTS_ONLY)
  private Boolean eventsOnly;

  public static final String SERIALIZED_NAME_TIMERS_ONLY = "TimersOnly";
  @SerializedName(SERIALIZED_NAME_TIMERS_ONLY)
  private Boolean timersOnly;

  public static final String SERIALIZED_NAME_LOAD_TASKS = "LoadTasks";
  @SerializedName(SERIALIZED_NAME_LOAD_TASKS)
  private JobsTaskStatus loadTasks = JobsTaskStatus.UNKNOWN;

  public static final String SERIALIZED_NAME_JOB_I_DS = "JobIDs";
  @SerializedName(SERIALIZED_NAME_JOB_I_DS)
  private List<String> jobIDs = null;

  public static final String SERIALIZED_NAME_TASKS_OFFSET = "TasksOffset";
  @SerializedName(SERIALIZED_NAME_TASKS_OFFSET)
  private Integer tasksOffset;

  public static final String SERIALIZED_NAME_TASKS_LIMIT = "TasksLimit";
  @SerializedName(SERIALIZED_NAME_TASKS_LIMIT)
  private Integer tasksLimit;

  public JobsListJobsRequest() { 
  }

  public JobsListJobsRequest owner(String owner) {
    
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOwner() {
    return owner;
  }


  public void setOwner(String owner) {
    this.owner = owner;
  }


  public JobsListJobsRequest eventsOnly(Boolean eventsOnly) {
    
    this.eventsOnly = eventsOnly;
    return this;
  }

   /**
   * Get eventsOnly
   * @return eventsOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEventsOnly() {
    return eventsOnly;
  }


  public void setEventsOnly(Boolean eventsOnly) {
    this.eventsOnly = eventsOnly;
  }


  public JobsListJobsRequest timersOnly(Boolean timersOnly) {
    
    this.timersOnly = timersOnly;
    return this;
  }

   /**
   * Get timersOnly
   * @return timersOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTimersOnly() {
    return timersOnly;
  }


  public void setTimersOnly(Boolean timersOnly) {
    this.timersOnly = timersOnly;
  }


  public JobsListJobsRequest loadTasks(JobsTaskStatus loadTasks) {
    
    this.loadTasks = loadTasks;
    return this;
  }

   /**
   * Get loadTasks
   * @return loadTasks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobsTaskStatus getLoadTasks() {
    return loadTasks;
  }


  public void setLoadTasks(JobsTaskStatus loadTasks) {
    this.loadTasks = loadTasks;
  }


  public JobsListJobsRequest jobIDs(List<String> jobIDs) {
    
    this.jobIDs = jobIDs;
    return this;
  }

  public JobsListJobsRequest addJobIDsItem(String jobIDsItem) {
    if (this.jobIDs == null) {
      this.jobIDs = new ArrayList<String>();
    }
    this.jobIDs.add(jobIDsItem);
    return this;
  }

   /**
   * Get jobIDs
   * @return jobIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getJobIDs() {
    return jobIDs;
  }


  public void setJobIDs(List<String> jobIDs) {
    this.jobIDs = jobIDs;
  }


  public JobsListJobsRequest tasksOffset(Integer tasksOffset) {
    
    this.tasksOffset = tasksOffset;
    return this;
  }

   /**
   * Get tasksOffset
   * @return tasksOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTasksOffset() {
    return tasksOffset;
  }


  public void setTasksOffset(Integer tasksOffset) {
    this.tasksOffset = tasksOffset;
  }


  public JobsListJobsRequest tasksLimit(Integer tasksLimit) {
    
    this.tasksLimit = tasksLimit;
    return this;
  }

   /**
   * Get tasksLimit
   * @return tasksLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTasksLimit() {
    return tasksLimit;
  }


  public void setTasksLimit(Integer tasksLimit) {
    this.tasksLimit = tasksLimit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsListJobsRequest jobsListJobsRequest = (JobsListJobsRequest) o;
    return Objects.equals(this.owner, jobsListJobsRequest.owner) &&
        Objects.equals(this.eventsOnly, jobsListJobsRequest.eventsOnly) &&
        Objects.equals(this.timersOnly, jobsListJobsRequest.timersOnly) &&
        Objects.equals(this.loadTasks, jobsListJobsRequest.loadTasks) &&
        Objects.equals(this.jobIDs, jobsListJobsRequest.jobIDs) &&
        Objects.equals(this.tasksOffset, jobsListJobsRequest.tasksOffset) &&
        Objects.equals(this.tasksLimit, jobsListJobsRequest.tasksLimit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(owner, eventsOnly, timersOnly, loadTasks, jobIDs, tasksOffset, tasksLimit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsListJobsRequest {\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    eventsOnly: ").append(toIndentedString(eventsOnly)).append("\n");
    sb.append("    timersOnly: ").append(toIndentedString(timersOnly)).append("\n");
    sb.append("    loadTasks: ").append(toIndentedString(loadTasks)).append("\n");
    sb.append("    jobIDs: ").append(toIndentedString(jobIDs)).append("\n");
    sb.append("    tasksOffset: ").append(toIndentedString(tasksOffset)).append("\n");
    sb.append("    tasksLimit: ").append(toIndentedString(tasksLimit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

