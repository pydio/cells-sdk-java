/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * LogMessage is the format used to transmit log messages to clients via the REST API.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-19T16:47:50.322929+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class LogLogMessage {
    public static final String SERIALIZED_NAME_GROUP_PATH = "GroupPath";
    @SerializedName(SERIALIZED_NAME_GROUP_PATH)
    @javax.annotation.Nullable
    private String groupPath;

    public static final String SERIALIZED_NAME_HTTP_PROTOCOL = "HttpProtocol";
    @SerializedName(SERIALIZED_NAME_HTTP_PROTOCOL)
    @javax.annotation.Nullable
    private String httpProtocol;

    public static final String SERIALIZED_NAME_JSON_ZAPS = "JsonZaps";
    @SerializedName(SERIALIZED_NAME_JSON_ZAPS)
    @javax.annotation.Nullable
    private String jsonZaps;

    public static final String SERIALIZED_NAME_LEVEL = "Level";
    @SerializedName(SERIALIZED_NAME_LEVEL)
    @javax.annotation.Nullable
    private String level;

    public static final String SERIALIZED_NAME_LOGGER = "Logger";
    @SerializedName(SERIALIZED_NAME_LOGGER)
    @javax.annotation.Nullable
    private String logger;

    public static final String SERIALIZED_NAME_MSG = "Msg";
    @SerializedName(SERIALIZED_NAME_MSG)
    @javax.annotation.Nullable
    private String msg;

    public static final String SERIALIZED_NAME_MSG_ID = "MsgId";
    @SerializedName(SERIALIZED_NAME_MSG_ID)
    @javax.annotation.Nullable
    private String msgId;

    public static final String SERIALIZED_NAME_NODE_PATH = "NodePath";
    @SerializedName(SERIALIZED_NAME_NODE_PATH)
    @javax.annotation.Nullable
    private String nodePath;

    public static final String SERIALIZED_NAME_NODE_UUID = "NodeUuid";
    @SerializedName(SERIALIZED_NAME_NODE_UUID)
    @javax.annotation.Nullable
    private String nodeUuid;

    public static final String SERIALIZED_NAME_OPERATION_LABEL = "OperationLabel";
    @SerializedName(SERIALIZED_NAME_OPERATION_LABEL)
    @javax.annotation.Nullable
    private String operationLabel;

    public static final String SERIALIZED_NAME_OPERATION_UUID = "OperationUuid";
    @SerializedName(SERIALIZED_NAME_OPERATION_UUID)
    @javax.annotation.Nullable
    private String operationUuid;

    public static final String SERIALIZED_NAME_PROFILE = "Profile";
    @SerializedName(SERIALIZED_NAME_PROFILE)
    @javax.annotation.Nullable
    private String profile;

    public static final String SERIALIZED_NAME_REMOTE_ADDRESS = "RemoteAddress";
    @SerializedName(SERIALIZED_NAME_REMOTE_ADDRESS)
    @javax.annotation.Nullable
    private String remoteAddress;

    public static final String SERIALIZED_NAME_ROLE_UUIDS = "RoleUuids";
    @SerializedName(SERIALIZED_NAME_ROLE_UUIDS)
    @javax.annotation.Nullable
    private List<String> roleUuids = new ArrayList<>();

    public static final String SERIALIZED_NAME_SCHEDULER_JOB_UUID = "SchedulerJobUuid";
    @SerializedName(SERIALIZED_NAME_SCHEDULER_JOB_UUID)
    @javax.annotation.Nullable
    private String schedulerJobUuid;

    public static final String SERIALIZED_NAME_SCHEDULER_TASK_ACTION_PATH = "SchedulerTaskActionPath";
    @SerializedName(SERIALIZED_NAME_SCHEDULER_TASK_ACTION_PATH)
    @javax.annotation.Nullable
    private String schedulerTaskActionPath;

    public static final String SERIALIZED_NAME_SCHEDULER_TASK_UUID = "SchedulerTaskUuid";
    @SerializedName(SERIALIZED_NAME_SCHEDULER_TASK_UUID)
    @javax.annotation.Nullable
    private String schedulerTaskUuid;

    public static final String SERIALIZED_NAME_SPAN_PARENT_UUID = "SpanParentUuid";
    @SerializedName(SERIALIZED_NAME_SPAN_PARENT_UUID)
    @javax.annotation.Nullable
    private String spanParentUuid;

    public static final String SERIALIZED_NAME_SPAN_ROOT_UUID = "SpanRootUuid";
    @SerializedName(SERIALIZED_NAME_SPAN_ROOT_UUID)
    @javax.annotation.Nullable
    private String spanRootUuid;

    public static final String SERIALIZED_NAME_SPAN_UUID = "SpanUuid";
    @SerializedName(SERIALIZED_NAME_SPAN_UUID)
    @javax.annotation.Nullable
    private String spanUuid;

    public static final String SERIALIZED_NAME_TRANSFER_SIZE = "TransferSize";
    @SerializedName(SERIALIZED_NAME_TRANSFER_SIZE)
    @javax.annotation.Nullable
    private String transferSize;

    public static final String SERIALIZED_NAME_TS = "Ts";
    @SerializedName(SERIALIZED_NAME_TS)
    @javax.annotation.Nullable
    private Integer ts;

    public static final String SERIALIZED_NAME_USER_AGENT = "UserAgent";
    @SerializedName(SERIALIZED_NAME_USER_AGENT)
    @javax.annotation.Nullable
    private String userAgent;

    public static final String SERIALIZED_NAME_USER_NAME = "UserName";
    @SerializedName(SERIALIZED_NAME_USER_NAME)
    @javax.annotation.Nullable
    private String userName;

    public static final String SERIALIZED_NAME_USER_UUID = "UserUuid";
    @SerializedName(SERIALIZED_NAME_USER_UUID)
    @javax.annotation.Nullable
    private String userUuid;

    public static final String SERIALIZED_NAME_WS_SCOPE = "WsScope";
    @SerializedName(SERIALIZED_NAME_WS_SCOPE)
    @javax.annotation.Nullable
    private String wsScope;

    public static final String SERIALIZED_NAME_WS_UUID = "WsUuid";
    @SerializedName(SERIALIZED_NAME_WS_UUID)
    @javax.annotation.Nullable
    private String wsUuid;

    public LogLogMessage() {
    }

    public LogLogMessage groupPath(@javax.annotation.Nullable String groupPath) {
        this.groupPath = groupPath;
        return this;
    }

    /**
     * Get groupPath
     *
     * @return groupPath
     */
    @javax.annotation.Nullable
    public String getGroupPath() {
        return groupPath;
    }

    public void setGroupPath(@javax.annotation.Nullable String groupPath) {
        this.groupPath = groupPath;
    }


    public LogLogMessage httpProtocol(@javax.annotation.Nullable String httpProtocol) {
        this.httpProtocol = httpProtocol;
        return this;
    }

    /**
     * Get httpProtocol
     *
     * @return httpProtocol
     */
    @javax.annotation.Nullable
    public String getHttpProtocol() {
        return httpProtocol;
    }

    public void setHttpProtocol(@javax.annotation.Nullable String httpProtocol) {
        this.httpProtocol = httpProtocol;
    }


    public LogLogMessage jsonZaps(@javax.annotation.Nullable String jsonZaps) {
        this.jsonZaps = jsonZaps;
        return this;
    }

    /**
     * Get jsonZaps
     *
     * @return jsonZaps
     */
    @javax.annotation.Nullable
    public String getJsonZaps() {
        return jsonZaps;
    }

    public void setJsonZaps(@javax.annotation.Nullable String jsonZaps) {
        this.jsonZaps = jsonZaps;
    }


    public LogLogMessage level(@javax.annotation.Nullable String level) {
        this.level = level;
        return this;
    }

    /**
     * Get level
     *
     * @return level
     */
    @javax.annotation.Nullable
    public String getLevel() {
        return level;
    }

    public void setLevel(@javax.annotation.Nullable String level) {
        this.level = level;
    }


    public LogLogMessage logger(@javax.annotation.Nullable String logger) {
        this.logger = logger;
        return this;
    }

    /**
     * Get logger
     *
     * @return logger
     */
    @javax.annotation.Nullable
    public String getLogger() {
        return logger;
    }

    public void setLogger(@javax.annotation.Nullable String logger) {
        this.logger = logger;
    }


    public LogLogMessage msg(@javax.annotation.Nullable String msg) {
        this.msg = msg;
        return this;
    }

    /**
     * Get msg
     *
     * @return msg
     */
    @javax.annotation.Nullable
    public String getMsg() {
        return msg;
    }

    public void setMsg(@javax.annotation.Nullable String msg) {
        this.msg = msg;
    }


    public LogLogMessage msgId(@javax.annotation.Nullable String msgId) {
        this.msgId = msgId;
        return this;
    }

    /**
     * Get msgId
     *
     * @return msgId
     */
    @javax.annotation.Nullable
    public String getMsgId() {
        return msgId;
    }

    public void setMsgId(@javax.annotation.Nullable String msgId) {
        this.msgId = msgId;
    }


    public LogLogMessage nodePath(@javax.annotation.Nullable String nodePath) {
        this.nodePath = nodePath;
        return this;
    }

    /**
     * Get nodePath
     *
     * @return nodePath
     */
    @javax.annotation.Nullable
    public String getNodePath() {
        return nodePath;
    }

    public void setNodePath(@javax.annotation.Nullable String nodePath) {
        this.nodePath = nodePath;
    }


    public LogLogMessage nodeUuid(@javax.annotation.Nullable String nodeUuid) {
        this.nodeUuid = nodeUuid;
        return this;
    }

    /**
     * Get nodeUuid
     *
     * @return nodeUuid
     */
    @javax.annotation.Nullable
    public String getNodeUuid() {
        return nodeUuid;
    }

    public void setNodeUuid(@javax.annotation.Nullable String nodeUuid) {
        this.nodeUuid = nodeUuid;
    }


    public LogLogMessage operationLabel(@javax.annotation.Nullable String operationLabel) {
        this.operationLabel = operationLabel;
        return this;
    }

    /**
     * Get operationLabel
     *
     * @return operationLabel
     */
    @javax.annotation.Nullable
    public String getOperationLabel() {
        return operationLabel;
    }

    public void setOperationLabel(@javax.annotation.Nullable String operationLabel) {
        this.operationLabel = operationLabel;
    }


    public LogLogMessage operationUuid(@javax.annotation.Nullable String operationUuid) {
        this.operationUuid = operationUuid;
        return this;
    }

    /**
     * Get operationUuid
     *
     * @return operationUuid
     */
    @javax.annotation.Nullable
    public String getOperationUuid() {
        return operationUuid;
    }

    public void setOperationUuid(@javax.annotation.Nullable String operationUuid) {
        this.operationUuid = operationUuid;
    }


    public LogLogMessage profile(@javax.annotation.Nullable String profile) {
        this.profile = profile;
        return this;
    }

    /**
     * Get profile
     *
     * @return profile
     */
    @javax.annotation.Nullable
    public String getProfile() {
        return profile;
    }

    public void setProfile(@javax.annotation.Nullable String profile) {
        this.profile = profile;
    }


    public LogLogMessage remoteAddress(@javax.annotation.Nullable String remoteAddress) {
        this.remoteAddress = remoteAddress;
        return this;
    }

    /**
     * Get remoteAddress
     *
     * @return remoteAddress
     */
    @javax.annotation.Nullable
    public String getRemoteAddress() {
        return remoteAddress;
    }

    public void setRemoteAddress(@javax.annotation.Nullable String remoteAddress) {
        this.remoteAddress = remoteAddress;
    }


    public LogLogMessage roleUuids(@javax.annotation.Nullable List<String> roleUuids) {
        this.roleUuids = roleUuids;
        return this;
    }

    public LogLogMessage addRoleUuidsItem(String roleUuidsItem) {
        if (this.roleUuids == null) {
            this.roleUuids = new ArrayList<>();
        }
        this.roleUuids.add(roleUuidsItem);
        return this;
    }

    /**
     * Get roleUuids
     *
     * @return roleUuids
     */
    @javax.annotation.Nullable
    public List<String> getRoleUuids() {
        return roleUuids;
    }

    public void setRoleUuids(@javax.annotation.Nullable List<String> roleUuids) {
        this.roleUuids = roleUuids;
    }


    public LogLogMessage schedulerJobUuid(@javax.annotation.Nullable String schedulerJobUuid) {
        this.schedulerJobUuid = schedulerJobUuid;
        return this;
    }

    /**
     * Get schedulerJobUuid
     *
     * @return schedulerJobUuid
     */
    @javax.annotation.Nullable
    public String getSchedulerJobUuid() {
        return schedulerJobUuid;
    }

    public void setSchedulerJobUuid(@javax.annotation.Nullable String schedulerJobUuid) {
        this.schedulerJobUuid = schedulerJobUuid;
    }


    public LogLogMessage schedulerTaskActionPath(@javax.annotation.Nullable String schedulerTaskActionPath) {
        this.schedulerTaskActionPath = schedulerTaskActionPath;
        return this;
    }

    /**
     * Get schedulerTaskActionPath
     *
     * @return schedulerTaskActionPath
     */
    @javax.annotation.Nullable
    public String getSchedulerTaskActionPath() {
        return schedulerTaskActionPath;
    }

    public void setSchedulerTaskActionPath(@javax.annotation.Nullable String schedulerTaskActionPath) {
        this.schedulerTaskActionPath = schedulerTaskActionPath;
    }


    public LogLogMessage schedulerTaskUuid(@javax.annotation.Nullable String schedulerTaskUuid) {
        this.schedulerTaskUuid = schedulerTaskUuid;
        return this;
    }

    /**
     * Get schedulerTaskUuid
     *
     * @return schedulerTaskUuid
     */
    @javax.annotation.Nullable
    public String getSchedulerTaskUuid() {
        return schedulerTaskUuid;
    }

    public void setSchedulerTaskUuid(@javax.annotation.Nullable String schedulerTaskUuid) {
        this.schedulerTaskUuid = schedulerTaskUuid;
    }


    public LogLogMessage spanParentUuid(@javax.annotation.Nullable String spanParentUuid) {
        this.spanParentUuid = spanParentUuid;
        return this;
    }

    /**
     * Get spanParentUuid
     *
     * @return spanParentUuid
     */
    @javax.annotation.Nullable
    public String getSpanParentUuid() {
        return spanParentUuid;
    }

    public void setSpanParentUuid(@javax.annotation.Nullable String spanParentUuid) {
        this.spanParentUuid = spanParentUuid;
    }


    public LogLogMessage spanRootUuid(@javax.annotation.Nullable String spanRootUuid) {
        this.spanRootUuid = spanRootUuid;
        return this;
    }

    /**
     * Get spanRootUuid
     *
     * @return spanRootUuid
     */
    @javax.annotation.Nullable
    public String getSpanRootUuid() {
        return spanRootUuid;
    }

    public void setSpanRootUuid(@javax.annotation.Nullable String spanRootUuid) {
        this.spanRootUuid = spanRootUuid;
    }


    public LogLogMessage spanUuid(@javax.annotation.Nullable String spanUuid) {
        this.spanUuid = spanUuid;
        return this;
    }

    /**
     * Get spanUuid
     *
     * @return spanUuid
     */
    @javax.annotation.Nullable
    public String getSpanUuid() {
        return spanUuid;
    }

    public void setSpanUuid(@javax.annotation.Nullable String spanUuid) {
        this.spanUuid = spanUuid;
    }


    public LogLogMessage transferSize(@javax.annotation.Nullable String transferSize) {
        this.transferSize = transferSize;
        return this;
    }

    /**
     * Get transferSize
     *
     * @return transferSize
     */
    @javax.annotation.Nullable
    public String getTransferSize() {
        return transferSize;
    }

    public void setTransferSize(@javax.annotation.Nullable String transferSize) {
        this.transferSize = transferSize;
    }


    public LogLogMessage ts(@javax.annotation.Nullable Integer ts) {
        this.ts = ts;
        return this;
    }

    /**
     * Get ts
     *
     * @return ts
     */
    @javax.annotation.Nullable
    public Integer getTs() {
        return ts;
    }

    public void setTs(@javax.annotation.Nullable Integer ts) {
        this.ts = ts;
    }


    public LogLogMessage userAgent(@javax.annotation.Nullable String userAgent) {
        this.userAgent = userAgent;
        return this;
    }

    /**
     * Get userAgent
     *
     * @return userAgent
     */
    @javax.annotation.Nullable
    public String getUserAgent() {
        return userAgent;
    }

    public void setUserAgent(@javax.annotation.Nullable String userAgent) {
        this.userAgent = userAgent;
    }


    public LogLogMessage userName(@javax.annotation.Nullable String userName) {
        this.userName = userName;
        return this;
    }

    /**
     * Get userName
     *
     * @return userName
     */
    @javax.annotation.Nullable
    public String getUserName() {
        return userName;
    }

    public void setUserName(@javax.annotation.Nullable String userName) {
        this.userName = userName;
    }


    public LogLogMessage userUuid(@javax.annotation.Nullable String userUuid) {
        this.userUuid = userUuid;
        return this;
    }

    /**
     * Get userUuid
     *
     * @return userUuid
     */
    @javax.annotation.Nullable
    public String getUserUuid() {
        return userUuid;
    }

    public void setUserUuid(@javax.annotation.Nullable String userUuid) {
        this.userUuid = userUuid;
    }


    public LogLogMessage wsScope(@javax.annotation.Nullable String wsScope) {
        this.wsScope = wsScope;
        return this;
    }

    /**
     * Get wsScope
     *
     * @return wsScope
     */
    @javax.annotation.Nullable
    public String getWsScope() {
        return wsScope;
    }

    public void setWsScope(@javax.annotation.Nullable String wsScope) {
        this.wsScope = wsScope;
    }


    public LogLogMessage wsUuid(@javax.annotation.Nullable String wsUuid) {
        this.wsUuid = wsUuid;
        return this;
    }

    /**
     * Get wsUuid
     *
     * @return wsUuid
     */
    @javax.annotation.Nullable
    public String getWsUuid() {
        return wsUuid;
    }

    public void setWsUuid(@javax.annotation.Nullable String wsUuid) {
        this.wsUuid = wsUuid;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        LogLogMessage logLogMessage = (LogLogMessage) o;
        return Objects.equals(this.groupPath, logLogMessage.groupPath) &&
                Objects.equals(this.httpProtocol, logLogMessage.httpProtocol) &&
                Objects.equals(this.jsonZaps, logLogMessage.jsonZaps) &&
                Objects.equals(this.level, logLogMessage.level) &&
                Objects.equals(this.logger, logLogMessage.logger) &&
                Objects.equals(this.msg, logLogMessage.msg) &&
                Objects.equals(this.msgId, logLogMessage.msgId) &&
                Objects.equals(this.nodePath, logLogMessage.nodePath) &&
                Objects.equals(this.nodeUuid, logLogMessage.nodeUuid) &&
                Objects.equals(this.operationLabel, logLogMessage.operationLabel) &&
                Objects.equals(this.operationUuid, logLogMessage.operationUuid) &&
                Objects.equals(this.profile, logLogMessage.profile) &&
                Objects.equals(this.remoteAddress, logLogMessage.remoteAddress) &&
                Objects.equals(this.roleUuids, logLogMessage.roleUuids) &&
                Objects.equals(this.schedulerJobUuid, logLogMessage.schedulerJobUuid) &&
                Objects.equals(this.schedulerTaskActionPath, logLogMessage.schedulerTaskActionPath) &&
                Objects.equals(this.schedulerTaskUuid, logLogMessage.schedulerTaskUuid) &&
                Objects.equals(this.spanParentUuid, logLogMessage.spanParentUuid) &&
                Objects.equals(this.spanRootUuid, logLogMessage.spanRootUuid) &&
                Objects.equals(this.spanUuid, logLogMessage.spanUuid) &&
                Objects.equals(this.transferSize, logLogMessage.transferSize) &&
                Objects.equals(this.ts, logLogMessage.ts) &&
                Objects.equals(this.userAgent, logLogMessage.userAgent) &&
                Objects.equals(this.userName, logLogMessage.userName) &&
                Objects.equals(this.userUuid, logLogMessage.userUuid) &&
                Objects.equals(this.wsScope, logLogMessage.wsScope) &&
                Objects.equals(this.wsUuid, logLogMessage.wsUuid);
    }

    @Override
    public int hashCode() {
        return Objects.hash(groupPath, httpProtocol, jsonZaps, level, logger, msg, msgId, nodePath, nodeUuid, operationLabel, operationUuid, profile, remoteAddress, roleUuids, schedulerJobUuid, schedulerTaskActionPath, schedulerTaskUuid, spanParentUuid, spanRootUuid, spanUuid, transferSize, ts, userAgent, userName, userUuid, wsScope, wsUuid);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class LogLogMessage {\n");
        sb.append("    groupPath: ").append(toIndentedString(groupPath)).append("\n");
        sb.append("    httpProtocol: ").append(toIndentedString(httpProtocol)).append("\n");
        sb.append("    jsonZaps: ").append(toIndentedString(jsonZaps)).append("\n");
        sb.append("    level: ").append(toIndentedString(level)).append("\n");
        sb.append("    logger: ").append(toIndentedString(logger)).append("\n");
        sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
        sb.append("    msgId: ").append(toIndentedString(msgId)).append("\n");
        sb.append("    nodePath: ").append(toIndentedString(nodePath)).append("\n");
        sb.append("    nodeUuid: ").append(toIndentedString(nodeUuid)).append("\n");
        sb.append("    operationLabel: ").append(toIndentedString(operationLabel)).append("\n");
        sb.append("    operationUuid: ").append(toIndentedString(operationUuid)).append("\n");
        sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
        sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
        sb.append("    roleUuids: ").append(toIndentedString(roleUuids)).append("\n");
        sb.append("    schedulerJobUuid: ").append(toIndentedString(schedulerJobUuid)).append("\n");
        sb.append("    schedulerTaskActionPath: ").append(toIndentedString(schedulerTaskActionPath)).append("\n");
        sb.append("    schedulerTaskUuid: ").append(toIndentedString(schedulerTaskUuid)).append("\n");
        sb.append("    spanParentUuid: ").append(toIndentedString(spanParentUuid)).append("\n");
        sb.append("    spanRootUuid: ").append(toIndentedString(spanRootUuid)).append("\n");
        sb.append("    spanUuid: ").append(toIndentedString(spanUuid)).append("\n");
        sb.append("    transferSize: ").append(toIndentedString(transferSize)).append("\n");
        sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
        sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
        sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
        sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
        sb.append("    wsScope: ").append(toIndentedString(wsScope)).append("\n");
        sb.append("    wsUuid: ").append(toIndentedString(wsUuid)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("GroupPath");
        openapiFields.add("HttpProtocol");
        openapiFields.add("JsonZaps");
        openapiFields.add("Level");
        openapiFields.add("Logger");
        openapiFields.add("Msg");
        openapiFields.add("MsgId");
        openapiFields.add("NodePath");
        openapiFields.add("NodeUuid");
        openapiFields.add("OperationLabel");
        openapiFields.add("OperationUuid");
        openapiFields.add("Profile");
        openapiFields.add("RemoteAddress");
        openapiFields.add("RoleUuids");
        openapiFields.add("SchedulerJobUuid");
        openapiFields.add("SchedulerTaskActionPath");
        openapiFields.add("SchedulerTaskUuid");
        openapiFields.add("SpanParentUuid");
        openapiFields.add("SpanRootUuid");
        openapiFields.add("SpanUuid");
        openapiFields.add("TransferSize");
        openapiFields.add("Ts");
        openapiFields.add("UserAgent");
        openapiFields.add("UserName");
        openapiFields.add("UserUuid");
        openapiFields.add("WsScope");
        openapiFields.add("WsUuid");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to LogLogMessage
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!LogLogMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in LogLogMessage is not found in the empty JSON string", LogLogMessage.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!LogLogMessage.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LogLogMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("GroupPath") != null && !jsonObj.get("GroupPath").isJsonNull()) && !jsonObj.get("GroupPath").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `GroupPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("GroupPath").toString()));
        }
        if ((jsonObj.get("HttpProtocol") != null && !jsonObj.get("HttpProtocol").isJsonNull()) && !jsonObj.get("HttpProtocol").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `HttpProtocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HttpProtocol").toString()));
        }
        if ((jsonObj.get("JsonZaps") != null && !jsonObj.get("JsonZaps").isJsonNull()) && !jsonObj.get("JsonZaps").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `JsonZaps` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JsonZaps").toString()));
        }
        if ((jsonObj.get("Level") != null && !jsonObj.get("Level").isJsonNull()) && !jsonObj.get("Level").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `Level` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Level").toString()));
        }
        if ((jsonObj.get("Logger") != null && !jsonObj.get("Logger").isJsonNull()) && !jsonObj.get("Logger").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `Logger` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Logger").toString()));
        }
        if ((jsonObj.get("Msg") != null && !jsonObj.get("Msg").isJsonNull()) && !jsonObj.get("Msg").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `Msg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Msg").toString()));
        }
        if ((jsonObj.get("MsgId") != null && !jsonObj.get("MsgId").isJsonNull()) && !jsonObj.get("MsgId").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `MsgId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MsgId").toString()));
        }
        if ((jsonObj.get("NodePath") != null && !jsonObj.get("NodePath").isJsonNull()) && !jsonObj.get("NodePath").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `NodePath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NodePath").toString()));
        }
        if ((jsonObj.get("NodeUuid") != null && !jsonObj.get("NodeUuid").isJsonNull()) && !jsonObj.get("NodeUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `NodeUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NodeUuid").toString()));
        }
        if ((jsonObj.get("OperationLabel") != null && !jsonObj.get("OperationLabel").isJsonNull()) && !jsonObj.get("OperationLabel").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `OperationLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OperationLabel").toString()));
        }
        if ((jsonObj.get("OperationUuid") != null && !jsonObj.get("OperationUuid").isJsonNull()) && !jsonObj.get("OperationUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `OperationUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OperationUuid").toString()));
        }
        if ((jsonObj.get("Profile") != null && !jsonObj.get("Profile").isJsonNull()) && !jsonObj.get("Profile").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `Profile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Profile").toString()));
        }
        if ((jsonObj.get("RemoteAddress") != null && !jsonObj.get("RemoteAddress").isJsonNull()) && !jsonObj.get("RemoteAddress").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `RemoteAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("RemoteAddress").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("RoleUuids") != null && !jsonObj.get("RoleUuids").isJsonNull() && !jsonObj.get("RoleUuids").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `RoleUuids` to be an array in the JSON string but got `%s`", jsonObj.get("RoleUuids").toString()));
        }
        if ((jsonObj.get("SchedulerJobUuid") != null && !jsonObj.get("SchedulerJobUuid").isJsonNull()) && !jsonObj.get("SchedulerJobUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `SchedulerJobUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SchedulerJobUuid").toString()));
        }
        if ((jsonObj.get("SchedulerTaskActionPath") != null && !jsonObj.get("SchedulerTaskActionPath").isJsonNull()) && !jsonObj.get("SchedulerTaskActionPath").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `SchedulerTaskActionPath` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SchedulerTaskActionPath").toString()));
        }
        if ((jsonObj.get("SchedulerTaskUuid") != null && !jsonObj.get("SchedulerTaskUuid").isJsonNull()) && !jsonObj.get("SchedulerTaskUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `SchedulerTaskUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SchedulerTaskUuid").toString()));
        }
        if ((jsonObj.get("SpanParentUuid") != null && !jsonObj.get("SpanParentUuid").isJsonNull()) && !jsonObj.get("SpanParentUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `SpanParentUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SpanParentUuid").toString()));
        }
        if ((jsonObj.get("SpanRootUuid") != null && !jsonObj.get("SpanRootUuid").isJsonNull()) && !jsonObj.get("SpanRootUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `SpanRootUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SpanRootUuid").toString()));
        }
        if ((jsonObj.get("SpanUuid") != null && !jsonObj.get("SpanUuid").isJsonNull()) && !jsonObj.get("SpanUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `SpanUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SpanUuid").toString()));
        }
        if ((jsonObj.get("TransferSize") != null && !jsonObj.get("TransferSize").isJsonNull()) && !jsonObj.get("TransferSize").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `TransferSize` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TransferSize").toString()));
        }
        if ((jsonObj.get("UserAgent") != null && !jsonObj.get("UserAgent").isJsonNull()) && !jsonObj.get("UserAgent").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `UserAgent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserAgent").toString()));
        }
        if ((jsonObj.get("UserName") != null && !jsonObj.get("UserName").isJsonNull()) && !jsonObj.get("UserName").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `UserName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserName").toString()));
        }
        if ((jsonObj.get("UserUuid") != null && !jsonObj.get("UserUuid").isJsonNull()) && !jsonObj.get("UserUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `UserUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserUuid").toString()));
        }
        if ((jsonObj.get("WsScope") != null && !jsonObj.get("WsScope").isJsonNull()) && !jsonObj.get("WsScope").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `WsScope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WsScope").toString()));
        }
        if ((jsonObj.get("WsUuid") != null && !jsonObj.get("WsUuid").isJsonNull()) && !jsonObj.get("WsUuid").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `WsUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WsUuid").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!LogLogMessage.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'LogLogMessage' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<LogLogMessage> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(LogLogMessage.class));

            return (TypeAdapter<T>) new TypeAdapter<LogLogMessage>() {
                @Override
                public void write(JsonWriter out, LogLogMessage value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public LogLogMessage read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of LogLogMessage given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of LogLogMessage
     * @throws IOException if the JSON string is invalid with respect to LogLogMessage
     */
    public static LogLogMessage fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, LogLogMessage.class);
    }

    /**
     * Convert an instance of LogLogMessage to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

