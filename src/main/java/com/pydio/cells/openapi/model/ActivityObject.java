/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * ActivityObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-19T16:47:50.322929+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class ActivityObject {
    public static final String SERIALIZED_NAME_AT_CONTEXT = "@context";
    @SerializedName(SERIALIZED_NAME_AT_CONTEXT)
    @javax.annotation.Nullable
    private String atContext;

    public static final String SERIALIZED_NAME_ACCURACY = "accuracy";
    @SerializedName(SERIALIZED_NAME_ACCURACY)
    @javax.annotation.Nullable
    private Float accuracy;

    public static final String SERIALIZED_NAME_ACTOR = "actor";
    @SerializedName(SERIALIZED_NAME_ACTOR)
    @javax.annotation.Nullable
    private ActivityObject actor;

    public static final String SERIALIZED_NAME_ALTITUDE = "altitude";
    @SerializedName(SERIALIZED_NAME_ALTITUDE)
    @javax.annotation.Nullable
    private Float altitude;

    public static final String SERIALIZED_NAME_ANY_OF = "anyOf";
    @SerializedName(SERIALIZED_NAME_ANY_OF)
    @javax.annotation.Nullable
    private ActivityObject anyOf;

    public static final String SERIALIZED_NAME_ATTACHMENT = "attachment";
    @SerializedName(SERIALIZED_NAME_ATTACHMENT)
    @javax.annotation.Nullable
    private ActivityObject attachment;

    public static final String SERIALIZED_NAME_ATTRIBUTED_TO = "attributedTo";
    @SerializedName(SERIALIZED_NAME_ATTRIBUTED_TO)
    @javax.annotation.Nullable
    private ActivityObject attributedTo;

    public static final String SERIALIZED_NAME_AUDIENCE = "audience";
    @SerializedName(SERIALIZED_NAME_AUDIENCE)
    @javax.annotation.Nullable
    private ActivityObject audience;

    public static final String SERIALIZED_NAME_BCC = "bcc";
    @SerializedName(SERIALIZED_NAME_BCC)
    @javax.annotation.Nullable
    private ActivityObject bcc;

    public static final String SERIALIZED_NAME_BTO = "bto";
    @SerializedName(SERIALIZED_NAME_BTO)
    @javax.annotation.Nullable
    private ActivityObject bto;

    public static final String SERIALIZED_NAME_CC = "cc";
    @SerializedName(SERIALIZED_NAME_CC)
    @javax.annotation.Nullable
    private ActivityObject cc;

    public static final String SERIALIZED_NAME_CLOSED = "closed";
    @SerializedName(SERIALIZED_NAME_CLOSED)
    @javax.annotation.Nullable
    private OffsetDateTime closed;

    public static final String SERIALIZED_NAME_CONTENT = "content";
    @SerializedName(SERIALIZED_NAME_CONTENT)
    @javax.annotation.Nullable
    private ActivityObject content;

    public static final String SERIALIZED_NAME_CURRENT = "current";
    @SerializedName(SERIALIZED_NAME_CURRENT)
    @javax.annotation.Nullable
    private ActivityObject current;

    public static final String SERIALIZED_NAME_DELETED = "deleted";
    @SerializedName(SERIALIZED_NAME_DELETED)
    @javax.annotation.Nullable
    private OffsetDateTime deleted;

    public static final String SERIALIZED_NAME_DURATION = "duration";
    @SerializedName(SERIALIZED_NAME_DURATION)
    @javax.annotation.Nullable
    private OffsetDateTime duration;

    public static final String SERIALIZED_NAME_END_TIME = "endTime";
    @SerializedName(SERIALIZED_NAME_END_TIME)
    @javax.annotation.Nullable
    private OffsetDateTime endTime;

    public static final String SERIALIZED_NAME_FIRST = "first";
    @SerializedName(SERIALIZED_NAME_FIRST)
    @javax.annotation.Nullable
    private ActivityObject first;

    public static final String SERIALIZED_NAME_FORMER_TYPE = "formerType";
    @SerializedName(SERIALIZED_NAME_FORMER_TYPE)
    @javax.annotation.Nullable
    private ActivityObjectType formerType = ActivityObjectType.BASE_OBJECT;

    public static final String SERIALIZED_NAME_GENERATOR = "generator";
    @SerializedName(SERIALIZED_NAME_GENERATOR)
    @javax.annotation.Nullable
    private ActivityObject generator;

    public static final String SERIALIZED_NAME_HEIGHT = "height";
    @SerializedName(SERIALIZED_NAME_HEIGHT)
    @javax.annotation.Nullable
    private Integer height;

    public static final String SERIALIZED_NAME_HREF = "href";
    @SerializedName(SERIALIZED_NAME_HREF)
    @javax.annotation.Nullable
    private String href;

    public static final String SERIALIZED_NAME_HREFLANG = "hreflang";
    @SerializedName(SERIALIZED_NAME_HREFLANG)
    @javax.annotation.Nullable
    private String hreflang;

    public static final String SERIALIZED_NAME_ICON = "icon";
    @SerializedName(SERIALIZED_NAME_ICON)
    @javax.annotation.Nullable
    private ActivityObject icon;

    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    @javax.annotation.Nullable
    private String id;

    public static final String SERIALIZED_NAME_IMAGE = "image";
    @SerializedName(SERIALIZED_NAME_IMAGE)
    @javax.annotation.Nullable
    private ActivityObject image;

    public static final String SERIALIZED_NAME_IN_REPLY_TO = "inReplyTo";
    @SerializedName(SERIALIZED_NAME_IN_REPLY_TO)
    @javax.annotation.Nullable
    private ActivityObject inReplyTo;

    public static final String SERIALIZED_NAME_INSTRUMENT = "instrument";
    @SerializedName(SERIALIZED_NAME_INSTRUMENT)
    @javax.annotation.Nullable
    private ActivityObject instrument;

    public static final String SERIALIZED_NAME_ITEMS = "items";
    @SerializedName(SERIALIZED_NAME_ITEMS)
    @javax.annotation.Nullable
    private List<ActivityObject> items = new ArrayList<>();

    public static final String SERIALIZED_NAME_LAST = "last";
    @SerializedName(SERIALIZED_NAME_LAST)
    @javax.annotation.Nullable
    private ActivityObject last;

    public static final String SERIALIZED_NAME_LATITUDE = "latitude";
    @SerializedName(SERIALIZED_NAME_LATITUDE)
    @javax.annotation.Nullable
    private Float latitude;

    public static final String SERIALIZED_NAME_LOCATION = "location";
    @SerializedName(SERIALIZED_NAME_LOCATION)
    @javax.annotation.Nullable
    private ActivityObject location;

    public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
    @SerializedName(SERIALIZED_NAME_LONGITUDE)
    @javax.annotation.Nullable
    private Float longitude;

    public static final String SERIALIZED_NAME_MARKDOWN = "markdown";
    @SerializedName(SERIALIZED_NAME_MARKDOWN)
    @javax.annotation.Nullable
    private String markdown;

    public static final String SERIALIZED_NAME_MEDIA_TYPE = "mediaType";
    @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
    @javax.annotation.Nullable
    private String mediaType;

    public static final String SERIALIZED_NAME_NAME = "name";
    @SerializedName(SERIALIZED_NAME_NAME)
    @javax.annotation.Nullable
    private String name;

    public static final String SERIALIZED_NAME_NEXT = "next";
    @SerializedName(SERIALIZED_NAME_NEXT)
    @javax.annotation.Nullable
    private ActivityObject next;

    public static final String SERIALIZED_NAME_OBJECT = "object";
    @SerializedName(SERIALIZED_NAME_OBJECT)
    @javax.annotation.Nullable
    private ActivityObject _object;

    public static final String SERIALIZED_NAME_ONE_OF = "oneOf";
    @SerializedName(SERIALIZED_NAME_ONE_OF)
    @javax.annotation.Nullable
    private ActivityObject oneOf;

    public static final String SERIALIZED_NAME_ORIGIN = "origin";
    @SerializedName(SERIALIZED_NAME_ORIGIN)
    @javax.annotation.Nullable
    private ActivityObject origin;

    public static final String SERIALIZED_NAME_PART_OF = "partOf";
    @SerializedName(SERIALIZED_NAME_PART_OF)
    @javax.annotation.Nullable
    private ActivityObject partOf;

    public static final String SERIALIZED_NAME_PREV = "prev";
    @SerializedName(SERIALIZED_NAME_PREV)
    @javax.annotation.Nullable
    private ActivityObject prev;

    public static final String SERIALIZED_NAME_PREVIEW = "preview";
    @SerializedName(SERIALIZED_NAME_PREVIEW)
    @javax.annotation.Nullable
    private ActivityObject preview;

    public static final String SERIALIZED_NAME_PUBLISHED = "published";
    @SerializedName(SERIALIZED_NAME_PUBLISHED)
    @javax.annotation.Nullable
    private OffsetDateTime published;

    public static final String SERIALIZED_NAME_RADIUS = "radius";
    @SerializedName(SERIALIZED_NAME_RADIUS)
    @javax.annotation.Nullable
    private Float radius;

    public static final String SERIALIZED_NAME_REL = "rel";
    @SerializedName(SERIALIZED_NAME_REL)
    @javax.annotation.Nullable
    private String rel;

    public static final String SERIALIZED_NAME_RELATIONSHIP = "relationship";
    @SerializedName(SERIALIZED_NAME_RELATIONSHIP)
    @javax.annotation.Nullable
    private ActivityObject relationship;

    public static final String SERIALIZED_NAME_REPLIES = "replies";
    @SerializedName(SERIALIZED_NAME_REPLIES)
    @javax.annotation.Nullable
    private ActivityObject replies;

    public static final String SERIALIZED_NAME_RESULT = "result";
    @SerializedName(SERIALIZED_NAME_RESULT)
    @javax.annotation.Nullable
    private ActivityObject result;

    public static final String SERIALIZED_NAME_START_TIME = "startTime";
    @SerializedName(SERIALIZED_NAME_START_TIME)
    @javax.annotation.Nullable
    private OffsetDateTime startTime;

    public static final String SERIALIZED_NAME_SUBJECT = "subject";
    @SerializedName(SERIALIZED_NAME_SUBJECT)
    @javax.annotation.Nullable
    private ActivityObject subject;

    public static final String SERIALIZED_NAME_SUMMARY = "summary";
    @SerializedName(SERIALIZED_NAME_SUMMARY)
    @javax.annotation.Nullable
    private String summary;

    public static final String SERIALIZED_NAME_TAG = "tag";
    @SerializedName(SERIALIZED_NAME_TAG)
    @javax.annotation.Nullable
    private ActivityObject tag;

    public static final String SERIALIZED_NAME_TARGET = "target";
    @SerializedName(SERIALIZED_NAME_TARGET)
    @javax.annotation.Nullable
    private ActivityObject target;

    public static final String SERIALIZED_NAME_TO = "to";
    @SerializedName(SERIALIZED_NAME_TO)
    @javax.annotation.Nullable
    private ActivityObject to;

    public static final String SERIALIZED_NAME_TOTAL_ITEMS = "totalItems";
    @SerializedName(SERIALIZED_NAME_TOTAL_ITEMS)
    @javax.annotation.Nullable
    private Integer totalItems;

    public static final String SERIALIZED_NAME_TYPE = "type";
    @SerializedName(SERIALIZED_NAME_TYPE)
    @javax.annotation.Nullable
    private ActivityObjectType type = ActivityObjectType.BASE_OBJECT;

    public static final String SERIALIZED_NAME_UNITS = "units";
    @SerializedName(SERIALIZED_NAME_UNITS)
    @javax.annotation.Nullable
    private String units;

    public static final String SERIALIZED_NAME_UPDATED = "updated";
    @SerializedName(SERIALIZED_NAME_UPDATED)
    @javax.annotation.Nullable
    private OffsetDateTime updated;

    public static final String SERIALIZED_NAME_URL = "url";
    @SerializedName(SERIALIZED_NAME_URL)
    @javax.annotation.Nullable
    private ActivityObject url;

    public static final String SERIALIZED_NAME_WIDTH = "width";
    @SerializedName(SERIALIZED_NAME_WIDTH)
    @javax.annotation.Nullable
    private Integer width;

    public ActivityObject() {
    }

    public ActivityObject atContext(@javax.annotation.Nullable String atContext) {
        this.atContext = atContext;
        return this;
    }

    /**
     * Get atContext
     *
     * @return atContext
     */
    @javax.annotation.Nullable
    public String getAtContext() {
        return atContext;
    }

    public void setAtContext(@javax.annotation.Nullable String atContext) {
        this.atContext = atContext;
    }


    public ActivityObject accuracy(@javax.annotation.Nullable Float accuracy) {
        this.accuracy = accuracy;
        return this;
    }

    /**
     * Get accuracy
     *
     * @return accuracy
     */
    @javax.annotation.Nullable
    public Float getAccuracy() {
        return accuracy;
    }

    public void setAccuracy(@javax.annotation.Nullable Float accuracy) {
        this.accuracy = accuracy;
    }


    public ActivityObject actor(@javax.annotation.Nullable ActivityObject actor) {
        this.actor = actor;
        return this;
    }

    /**
     * Get actor
     *
     * @return actor
     */
    @javax.annotation.Nullable
    public ActivityObject getActor() {
        return actor;
    }

    public void setActor(@javax.annotation.Nullable ActivityObject actor) {
        this.actor = actor;
    }


    public ActivityObject altitude(@javax.annotation.Nullable Float altitude) {
        this.altitude = altitude;
        return this;
    }

    /**
     * Get altitude
     *
     * @return altitude
     */
    @javax.annotation.Nullable
    public Float getAltitude() {
        return altitude;
    }

    public void setAltitude(@javax.annotation.Nullable Float altitude) {
        this.altitude = altitude;
    }


    public ActivityObject anyOf(@javax.annotation.Nullable ActivityObject anyOf) {
        this.anyOf = anyOf;
        return this;
    }

    /**
     * Get anyOf
     *
     * @return anyOf
     */
    @javax.annotation.Nullable
    public ActivityObject getAnyOf() {
        return anyOf;
    }

    public void setAnyOf(@javax.annotation.Nullable ActivityObject anyOf) {
        this.anyOf = anyOf;
    }


    public ActivityObject attachment(@javax.annotation.Nullable ActivityObject attachment) {
        this.attachment = attachment;
        return this;
    }

    /**
     * Get attachment
     *
     * @return attachment
     */
    @javax.annotation.Nullable
    public ActivityObject getAttachment() {
        return attachment;
    }

    public void setAttachment(@javax.annotation.Nullable ActivityObject attachment) {
        this.attachment = attachment;
    }


    public ActivityObject attributedTo(@javax.annotation.Nullable ActivityObject attributedTo) {
        this.attributedTo = attributedTo;
        return this;
    }

    /**
     * Get attributedTo
     *
     * @return attributedTo
     */
    @javax.annotation.Nullable
    public ActivityObject getAttributedTo() {
        return attributedTo;
    }

    public void setAttributedTo(@javax.annotation.Nullable ActivityObject attributedTo) {
        this.attributedTo = attributedTo;
    }


    public ActivityObject audience(@javax.annotation.Nullable ActivityObject audience) {
        this.audience = audience;
        return this;
    }

    /**
     * Get audience
     *
     * @return audience
     */
    @javax.annotation.Nullable
    public ActivityObject getAudience() {
        return audience;
    }

    public void setAudience(@javax.annotation.Nullable ActivityObject audience) {
        this.audience = audience;
    }


    public ActivityObject bcc(@javax.annotation.Nullable ActivityObject bcc) {
        this.bcc = bcc;
        return this;
    }

    /**
     * Get bcc
     *
     * @return bcc
     */
    @javax.annotation.Nullable
    public ActivityObject getBcc() {
        return bcc;
    }

    public void setBcc(@javax.annotation.Nullable ActivityObject bcc) {
        this.bcc = bcc;
    }


    public ActivityObject bto(@javax.annotation.Nullable ActivityObject bto) {
        this.bto = bto;
        return this;
    }

    /**
     * Get bto
     *
     * @return bto
     */
    @javax.annotation.Nullable
    public ActivityObject getBto() {
        return bto;
    }

    public void setBto(@javax.annotation.Nullable ActivityObject bto) {
        this.bto = bto;
    }


    public ActivityObject cc(@javax.annotation.Nullable ActivityObject cc) {
        this.cc = cc;
        return this;
    }

    /**
     * Get cc
     *
     * @return cc
     */
    @javax.annotation.Nullable
    public ActivityObject getCc() {
        return cc;
    }

    public void setCc(@javax.annotation.Nullable ActivityObject cc) {
        this.cc = cc;
    }


    public ActivityObject closed(@javax.annotation.Nullable OffsetDateTime closed) {
        this.closed = closed;
        return this;
    }

    /**
     * Get closed
     *
     * @return closed
     */
    @javax.annotation.Nullable
    public OffsetDateTime getClosed() {
        return closed;
    }

    public void setClosed(@javax.annotation.Nullable OffsetDateTime closed) {
        this.closed = closed;
    }


    public ActivityObject content(@javax.annotation.Nullable ActivityObject content) {
        this.content = content;
        return this;
    }

    /**
     * Get content
     *
     * @return content
     */
    @javax.annotation.Nullable
    public ActivityObject getContent() {
        return content;
    }

    public void setContent(@javax.annotation.Nullable ActivityObject content) {
        this.content = content;
    }


    public ActivityObject current(@javax.annotation.Nullable ActivityObject current) {
        this.current = current;
        return this;
    }

    /**
     * Get current
     *
     * @return current
     */
    @javax.annotation.Nullable
    public ActivityObject getCurrent() {
        return current;
    }

    public void setCurrent(@javax.annotation.Nullable ActivityObject current) {
        this.current = current;
    }


    public ActivityObject deleted(@javax.annotation.Nullable OffsetDateTime deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Get deleted
     *
     * @return deleted
     */
    @javax.annotation.Nullable
    public OffsetDateTime getDeleted() {
        return deleted;
    }

    public void setDeleted(@javax.annotation.Nullable OffsetDateTime deleted) {
        this.deleted = deleted;
    }


    public ActivityObject duration(@javax.annotation.Nullable OffsetDateTime duration) {
        this.duration = duration;
        return this;
    }

    /**
     * Get duration
     *
     * @return duration
     */
    @javax.annotation.Nullable
    public OffsetDateTime getDuration() {
        return duration;
    }

    public void setDuration(@javax.annotation.Nullable OffsetDateTime duration) {
        this.duration = duration;
    }


    public ActivityObject endTime(@javax.annotation.Nullable OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }

    /**
     * Get endTime
     *
     * @return endTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getEndTime() {
        return endTime;
    }

    public void setEndTime(@javax.annotation.Nullable OffsetDateTime endTime) {
        this.endTime = endTime;
    }


    public ActivityObject first(@javax.annotation.Nullable ActivityObject first) {
        this.first = first;
        return this;
    }

    /**
     * Get first
     *
     * @return first
     */
    @javax.annotation.Nullable
    public ActivityObject getFirst() {
        return first;
    }

    public void setFirst(@javax.annotation.Nullable ActivityObject first) {
        this.first = first;
    }


    public ActivityObject formerType(@javax.annotation.Nullable ActivityObjectType formerType) {
        this.formerType = formerType;
        return this;
    }

    /**
     * Get formerType
     *
     * @return formerType
     */
    @javax.annotation.Nullable
    public ActivityObjectType getFormerType() {
        return formerType;
    }

    public void setFormerType(@javax.annotation.Nullable ActivityObjectType formerType) {
        this.formerType = formerType;
    }


    public ActivityObject generator(@javax.annotation.Nullable ActivityObject generator) {
        this.generator = generator;
        return this;
    }

    /**
     * Get generator
     *
     * @return generator
     */
    @javax.annotation.Nullable
    public ActivityObject getGenerator() {
        return generator;
    }

    public void setGenerator(@javax.annotation.Nullable ActivityObject generator) {
        this.generator = generator;
    }


    public ActivityObject height(@javax.annotation.Nullable Integer height) {
        this.height = height;
        return this;
    }

    /**
     * Get height
     *
     * @return height
     */
    @javax.annotation.Nullable
    public Integer getHeight() {
        return height;
    }

    public void setHeight(@javax.annotation.Nullable Integer height) {
        this.height = height;
    }


    public ActivityObject href(@javax.annotation.Nullable String href) {
        this.href = href;
        return this;
    }

    /**
     * Get href
     *
     * @return href
     */
    @javax.annotation.Nullable
    public String getHref() {
        return href;
    }

    public void setHref(@javax.annotation.Nullable String href) {
        this.href = href;
    }


    public ActivityObject hreflang(@javax.annotation.Nullable String hreflang) {
        this.hreflang = hreflang;
        return this;
    }

    /**
     * Get hreflang
     *
     * @return hreflang
     */
    @javax.annotation.Nullable
    public String getHreflang() {
        return hreflang;
    }

    public void setHreflang(@javax.annotation.Nullable String hreflang) {
        this.hreflang = hreflang;
    }


    public ActivityObject icon(@javax.annotation.Nullable ActivityObject icon) {
        this.icon = icon;
        return this;
    }

    /**
     * Get icon
     *
     * @return icon
     */
    @javax.annotation.Nullable
    public ActivityObject getIcon() {
        return icon;
    }

    public void setIcon(@javax.annotation.Nullable ActivityObject icon) {
        this.icon = icon;
    }


    public ActivityObject id(@javax.annotation.Nullable String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nullable
    public String getId() {
        return id;
    }

    public void setId(@javax.annotation.Nullable String id) {
        this.id = id;
    }


    public ActivityObject image(@javax.annotation.Nullable ActivityObject image) {
        this.image = image;
        return this;
    }

    /**
     * Get image
     *
     * @return image
     */
    @javax.annotation.Nullable
    public ActivityObject getImage() {
        return image;
    }

    public void setImage(@javax.annotation.Nullable ActivityObject image) {
        this.image = image;
    }


    public ActivityObject inReplyTo(@javax.annotation.Nullable ActivityObject inReplyTo) {
        this.inReplyTo = inReplyTo;
        return this;
    }

    /**
     * Get inReplyTo
     *
     * @return inReplyTo
     */
    @javax.annotation.Nullable
    public ActivityObject getInReplyTo() {
        return inReplyTo;
    }

    public void setInReplyTo(@javax.annotation.Nullable ActivityObject inReplyTo) {
        this.inReplyTo = inReplyTo;
    }


    public ActivityObject instrument(@javax.annotation.Nullable ActivityObject instrument) {
        this.instrument = instrument;
        return this;
    }

    /**
     * Get instrument
     *
     * @return instrument
     */
    @javax.annotation.Nullable
    public ActivityObject getInstrument() {
        return instrument;
    }

    public void setInstrument(@javax.annotation.Nullable ActivityObject instrument) {
        this.instrument = instrument;
    }


    public ActivityObject items(@javax.annotation.Nullable List<ActivityObject> items) {
        this.items = items;
        return this;
    }

    public ActivityObject addItemsItem(ActivityObject itemsItem) {
        if (this.items == null) {
            this.items = new ArrayList<>();
        }
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Get items
     *
     * @return items
     */
    @javax.annotation.Nullable
    public List<ActivityObject> getItems() {
        return items;
    }

    public void setItems(@javax.annotation.Nullable List<ActivityObject> items) {
        this.items = items;
    }


    public ActivityObject last(@javax.annotation.Nullable ActivityObject last) {
        this.last = last;
        return this;
    }

    /**
     * Get last
     *
     * @return last
     */
    @javax.annotation.Nullable
    public ActivityObject getLast() {
        return last;
    }

    public void setLast(@javax.annotation.Nullable ActivityObject last) {
        this.last = last;
    }


    public ActivityObject latitude(@javax.annotation.Nullable Float latitude) {
        this.latitude = latitude;
        return this;
    }

    /**
     * Get latitude
     *
     * @return latitude
     */
    @javax.annotation.Nullable
    public Float getLatitude() {
        return latitude;
    }

    public void setLatitude(@javax.annotation.Nullable Float latitude) {
        this.latitude = latitude;
    }


    public ActivityObject location(@javax.annotation.Nullable ActivityObject location) {
        this.location = location;
        return this;
    }

    /**
     * Get location
     *
     * @return location
     */
    @javax.annotation.Nullable
    public ActivityObject getLocation() {
        return location;
    }

    public void setLocation(@javax.annotation.Nullable ActivityObject location) {
        this.location = location;
    }


    public ActivityObject longitude(@javax.annotation.Nullable Float longitude) {
        this.longitude = longitude;
        return this;
    }

    /**
     * Get longitude
     *
     * @return longitude
     */
    @javax.annotation.Nullable
    public Float getLongitude() {
        return longitude;
    }

    public void setLongitude(@javax.annotation.Nullable Float longitude) {
        this.longitude = longitude;
    }


    public ActivityObject markdown(@javax.annotation.Nullable String markdown) {
        this.markdown = markdown;
        return this;
    }

    /**
     * Get markdown
     *
     * @return markdown
     */
    @javax.annotation.Nullable
    public String getMarkdown() {
        return markdown;
    }

    public void setMarkdown(@javax.annotation.Nullable String markdown) {
        this.markdown = markdown;
    }


    public ActivityObject mediaType(@javax.annotation.Nullable String mediaType) {
        this.mediaType = mediaType;
        return this;
    }

    /**
     * Get mediaType
     *
     * @return mediaType
     */
    @javax.annotation.Nullable
    public String getMediaType() {
        return mediaType;
    }

    public void setMediaType(@javax.annotation.Nullable String mediaType) {
        this.mediaType = mediaType;
    }


    public ActivityObject name(@javax.annotation.Nullable String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     */
    @javax.annotation.Nullable
    public String getName() {
        return name;
    }

    public void setName(@javax.annotation.Nullable String name) {
        this.name = name;
    }


    public ActivityObject next(@javax.annotation.Nullable ActivityObject next) {
        this.next = next;
        return this;
    }

    /**
     * Get next
     *
     * @return next
     */
    @javax.annotation.Nullable
    public ActivityObject getNext() {
        return next;
    }

    public void setNext(@javax.annotation.Nullable ActivityObject next) {
        this.next = next;
    }


    public ActivityObject _object(@javax.annotation.Nullable ActivityObject _object) {
        this._object = _object;
        return this;
    }

    /**
     * Get _object
     *
     * @return _object
     */
    @javax.annotation.Nullable
    public ActivityObject getObject() {
        return _object;
    }

    public void setObject(@javax.annotation.Nullable ActivityObject _object) {
        this._object = _object;
    }


    public ActivityObject oneOf(@javax.annotation.Nullable ActivityObject oneOf) {
        this.oneOf = oneOf;
        return this;
    }

    /**
     * Get oneOf
     *
     * @return oneOf
     */
    @javax.annotation.Nullable
    public ActivityObject getOneOf() {
        return oneOf;
    }

    public void setOneOf(@javax.annotation.Nullable ActivityObject oneOf) {
        this.oneOf = oneOf;
    }


    public ActivityObject origin(@javax.annotation.Nullable ActivityObject origin) {
        this.origin = origin;
        return this;
    }

    /**
     * Get origin
     *
     * @return origin
     */
    @javax.annotation.Nullable
    public ActivityObject getOrigin() {
        return origin;
    }

    public void setOrigin(@javax.annotation.Nullable ActivityObject origin) {
        this.origin = origin;
    }


    public ActivityObject partOf(@javax.annotation.Nullable ActivityObject partOf) {
        this.partOf = partOf;
        return this;
    }

    /**
     * Get partOf
     *
     * @return partOf
     */
    @javax.annotation.Nullable
    public ActivityObject getPartOf() {
        return partOf;
    }

    public void setPartOf(@javax.annotation.Nullable ActivityObject partOf) {
        this.partOf = partOf;
    }


    public ActivityObject prev(@javax.annotation.Nullable ActivityObject prev) {
        this.prev = prev;
        return this;
    }

    /**
     * Get prev
     *
     * @return prev
     */
    @javax.annotation.Nullable
    public ActivityObject getPrev() {
        return prev;
    }

    public void setPrev(@javax.annotation.Nullable ActivityObject prev) {
        this.prev = prev;
    }


    public ActivityObject preview(@javax.annotation.Nullable ActivityObject preview) {
        this.preview = preview;
        return this;
    }

    /**
     * Get preview
     *
     * @return preview
     */
    @javax.annotation.Nullable
    public ActivityObject getPreview() {
        return preview;
    }

    public void setPreview(@javax.annotation.Nullable ActivityObject preview) {
        this.preview = preview;
    }


    public ActivityObject published(@javax.annotation.Nullable OffsetDateTime published) {
        this.published = published;
        return this;
    }

    /**
     * Get published
     *
     * @return published
     */
    @javax.annotation.Nullable
    public OffsetDateTime getPublished() {
        return published;
    }

    public void setPublished(@javax.annotation.Nullable OffsetDateTime published) {
        this.published = published;
    }


    public ActivityObject radius(@javax.annotation.Nullable Float radius) {
        this.radius = radius;
        return this;
    }

    /**
     * Get radius
     *
     * @return radius
     */
    @javax.annotation.Nullable
    public Float getRadius() {
        return radius;
    }

    public void setRadius(@javax.annotation.Nullable Float radius) {
        this.radius = radius;
    }


    public ActivityObject rel(@javax.annotation.Nullable String rel) {
        this.rel = rel;
        return this;
    }

    /**
     * Get rel
     *
     * @return rel
     */
    @javax.annotation.Nullable
    public String getRel() {
        return rel;
    }

    public void setRel(@javax.annotation.Nullable String rel) {
        this.rel = rel;
    }


    public ActivityObject relationship(@javax.annotation.Nullable ActivityObject relationship) {
        this.relationship = relationship;
        return this;
    }

    /**
     * Get relationship
     *
     * @return relationship
     */
    @javax.annotation.Nullable
    public ActivityObject getRelationship() {
        return relationship;
    }

    public void setRelationship(@javax.annotation.Nullable ActivityObject relationship) {
        this.relationship = relationship;
    }


    public ActivityObject replies(@javax.annotation.Nullable ActivityObject replies) {
        this.replies = replies;
        return this;
    }

    /**
     * Get replies
     *
     * @return replies
     */
    @javax.annotation.Nullable
    public ActivityObject getReplies() {
        return replies;
    }

    public void setReplies(@javax.annotation.Nullable ActivityObject replies) {
        this.replies = replies;
    }


    public ActivityObject result(@javax.annotation.Nullable ActivityObject result) {
        this.result = result;
        return this;
    }

    /**
     * Get result
     *
     * @return result
     */
    @javax.annotation.Nullable
    public ActivityObject getResult() {
        return result;
    }

    public void setResult(@javax.annotation.Nullable ActivityObject result) {
        this.result = result;
    }


    public ActivityObject startTime(@javax.annotation.Nullable OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }

    /**
     * Get startTime
     *
     * @return startTime
     */
    @javax.annotation.Nullable
    public OffsetDateTime getStartTime() {
        return startTime;
    }

    public void setStartTime(@javax.annotation.Nullable OffsetDateTime startTime) {
        this.startTime = startTime;
    }


    public ActivityObject subject(@javax.annotation.Nullable ActivityObject subject) {
        this.subject = subject;
        return this;
    }

    /**
     * Get subject
     *
     * @return subject
     */
    @javax.annotation.Nullable
    public ActivityObject getSubject() {
        return subject;
    }

    public void setSubject(@javax.annotation.Nullable ActivityObject subject) {
        this.subject = subject;
    }


    public ActivityObject summary(@javax.annotation.Nullable String summary) {
        this.summary = summary;
        return this;
    }

    /**
     * Get summary
     *
     * @return summary
     */
    @javax.annotation.Nullable
    public String getSummary() {
        return summary;
    }

    public void setSummary(@javax.annotation.Nullable String summary) {
        this.summary = summary;
    }


    public ActivityObject tag(@javax.annotation.Nullable ActivityObject tag) {
        this.tag = tag;
        return this;
    }

    /**
     * Get tag
     *
     * @return tag
     */
    @javax.annotation.Nullable
    public ActivityObject getTag() {
        return tag;
    }

    public void setTag(@javax.annotation.Nullable ActivityObject tag) {
        this.tag = tag;
    }


    public ActivityObject target(@javax.annotation.Nullable ActivityObject target) {
        this.target = target;
        return this;
    }

    /**
     * Get target
     *
     * @return target
     */
    @javax.annotation.Nullable
    public ActivityObject getTarget() {
        return target;
    }

    public void setTarget(@javax.annotation.Nullable ActivityObject target) {
        this.target = target;
    }


    public ActivityObject to(@javax.annotation.Nullable ActivityObject to) {
        this.to = to;
        return this;
    }

    /**
     * Get to
     *
     * @return to
     */
    @javax.annotation.Nullable
    public ActivityObject getTo() {
        return to;
    }

    public void setTo(@javax.annotation.Nullable ActivityObject to) {
        this.to = to;
    }


    public ActivityObject totalItems(@javax.annotation.Nullable Integer totalItems) {
        this.totalItems = totalItems;
        return this;
    }

    /**
     * Get totalItems
     *
     * @return totalItems
     */
    @javax.annotation.Nullable
    public Integer getTotalItems() {
        return totalItems;
    }

    public void setTotalItems(@javax.annotation.Nullable Integer totalItems) {
        this.totalItems = totalItems;
    }


    public ActivityObject type(@javax.annotation.Nullable ActivityObjectType type) {
        this.type = type;
        return this;
    }

    /**
     * Get type
     *
     * @return type
     */
    @javax.annotation.Nullable
    public ActivityObjectType getType() {
        return type;
    }

    public void setType(@javax.annotation.Nullable ActivityObjectType type) {
        this.type = type;
    }


    public ActivityObject units(@javax.annotation.Nullable String units) {
        this.units = units;
        return this;
    }

    /**
     * Get units
     *
     * @return units
     */
    @javax.annotation.Nullable
    public String getUnits() {
        return units;
    }

    public void setUnits(@javax.annotation.Nullable String units) {
        this.units = units;
    }


    public ActivityObject updated(@javax.annotation.Nullable OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }

    /**
     * Get updated
     *
     * @return updated
     */
    @javax.annotation.Nullable
    public OffsetDateTime getUpdated() {
        return updated;
    }

    public void setUpdated(@javax.annotation.Nullable OffsetDateTime updated) {
        this.updated = updated;
    }


    public ActivityObject url(@javax.annotation.Nullable ActivityObject url) {
        this.url = url;
        return this;
    }

    /**
     * Get url
     *
     * @return url
     */
    @javax.annotation.Nullable
    public ActivityObject getUrl() {
        return url;
    }

    public void setUrl(@javax.annotation.Nullable ActivityObject url) {
        this.url = url;
    }


    public ActivityObject width(@javax.annotation.Nullable Integer width) {
        this.width = width;
        return this;
    }

    /**
     * Get width
     *
     * @return width
     */
    @javax.annotation.Nullable
    public Integer getWidth() {
        return width;
    }

    public void setWidth(@javax.annotation.Nullable Integer width) {
        this.width = width;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ActivityObject activityObject = (ActivityObject) o;
        return Objects.equals(this.atContext, activityObject.atContext) &&
                Objects.equals(this.accuracy, activityObject.accuracy) &&
                Objects.equals(this.actor, activityObject.actor) &&
                Objects.equals(this.altitude, activityObject.altitude) &&
                Objects.equals(this.anyOf, activityObject.anyOf) &&
                Objects.equals(this.attachment, activityObject.attachment) &&
                Objects.equals(this.attributedTo, activityObject.attributedTo) &&
                Objects.equals(this.audience, activityObject.audience) &&
                Objects.equals(this.bcc, activityObject.bcc) &&
                Objects.equals(this.bto, activityObject.bto) &&
                Objects.equals(this.cc, activityObject.cc) &&
                Objects.equals(this.closed, activityObject.closed) &&
                Objects.equals(this.content, activityObject.content) &&
                Objects.equals(this.current, activityObject.current) &&
                Objects.equals(this.deleted, activityObject.deleted) &&
                Objects.equals(this.duration, activityObject.duration) &&
                Objects.equals(this.endTime, activityObject.endTime) &&
                Objects.equals(this.first, activityObject.first) &&
                Objects.equals(this.formerType, activityObject.formerType) &&
                Objects.equals(this.generator, activityObject.generator) &&
                Objects.equals(this.height, activityObject.height) &&
                Objects.equals(this.href, activityObject.href) &&
                Objects.equals(this.hreflang, activityObject.hreflang) &&
                Objects.equals(this.icon, activityObject.icon) &&
                Objects.equals(this.id, activityObject.id) &&
                Objects.equals(this.image, activityObject.image) &&
                Objects.equals(this.inReplyTo, activityObject.inReplyTo) &&
                Objects.equals(this.instrument, activityObject.instrument) &&
                Objects.equals(this.items, activityObject.items) &&
                Objects.equals(this.last, activityObject.last) &&
                Objects.equals(this.latitude, activityObject.latitude) &&
                Objects.equals(this.location, activityObject.location) &&
                Objects.equals(this.longitude, activityObject.longitude) &&
                Objects.equals(this.markdown, activityObject.markdown) &&
                Objects.equals(this.mediaType, activityObject.mediaType) &&
                Objects.equals(this.name, activityObject.name) &&
                Objects.equals(this.next, activityObject.next) &&
                Objects.equals(this._object, activityObject._object) &&
                Objects.equals(this.oneOf, activityObject.oneOf) &&
                Objects.equals(this.origin, activityObject.origin) &&
                Objects.equals(this.partOf, activityObject.partOf) &&
                Objects.equals(this.prev, activityObject.prev) &&
                Objects.equals(this.preview, activityObject.preview) &&
                Objects.equals(this.published, activityObject.published) &&
                Objects.equals(this.radius, activityObject.radius) &&
                Objects.equals(this.rel, activityObject.rel) &&
                Objects.equals(this.relationship, activityObject.relationship) &&
                Objects.equals(this.replies, activityObject.replies) &&
                Objects.equals(this.result, activityObject.result) &&
                Objects.equals(this.startTime, activityObject.startTime) &&
                Objects.equals(this.subject, activityObject.subject) &&
                Objects.equals(this.summary, activityObject.summary) &&
                Objects.equals(this.tag, activityObject.tag) &&
                Objects.equals(this.target, activityObject.target) &&
                Objects.equals(this.to, activityObject.to) &&
                Objects.equals(this.totalItems, activityObject.totalItems) &&
                Objects.equals(this.type, activityObject.type) &&
                Objects.equals(this.units, activityObject.units) &&
                Objects.equals(this.updated, activityObject.updated) &&
                Objects.equals(this.url, activityObject.url) &&
                Objects.equals(this.width, activityObject.width);
    }

    @Override
    public int hashCode() {
        return Objects.hash(atContext, accuracy, actor, altitude, anyOf, attachment, attributedTo, audience, bcc, bto, cc, closed, content, current, deleted, duration, endTime, first, formerType, generator, height, href, hreflang, icon, id, image, inReplyTo, instrument, items, last, latitude, location, longitude, markdown, mediaType, name, next, _object, oneOf, origin, partOf, prev, preview, published, radius, rel, relationship, replies, result, startTime, subject, summary, tag, target, to, totalItems, type, units, updated, url, width);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ActivityObject {\n");
        sb.append("    atContext: ").append(toIndentedString(atContext)).append("\n");
        sb.append("    accuracy: ").append(toIndentedString(accuracy)).append("\n");
        sb.append("    actor: ").append(toIndentedString(actor)).append("\n");
        sb.append("    altitude: ").append(toIndentedString(altitude)).append("\n");
        sb.append("    anyOf: ").append(toIndentedString(anyOf)).append("\n");
        sb.append("    attachment: ").append(toIndentedString(attachment)).append("\n");
        sb.append("    attributedTo: ").append(toIndentedString(attributedTo)).append("\n");
        sb.append("    audience: ").append(toIndentedString(audience)).append("\n");
        sb.append("    bcc: ").append(toIndentedString(bcc)).append("\n");
        sb.append("    bto: ").append(toIndentedString(bto)).append("\n");
        sb.append("    cc: ").append(toIndentedString(cc)).append("\n");
        sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
        sb.append("    content: ").append(toIndentedString(content)).append("\n");
        sb.append("    current: ").append(toIndentedString(current)).append("\n");
        sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
        sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    first: ").append(toIndentedString(first)).append("\n");
        sb.append("    formerType: ").append(toIndentedString(formerType)).append("\n");
        sb.append("    generator: ").append(toIndentedString(generator)).append("\n");
        sb.append("    height: ").append(toIndentedString(height)).append("\n");
        sb.append("    href: ").append(toIndentedString(href)).append("\n");
        sb.append("    hreflang: ").append(toIndentedString(hreflang)).append("\n");
        sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    image: ").append(toIndentedString(image)).append("\n");
        sb.append("    inReplyTo: ").append(toIndentedString(inReplyTo)).append("\n");
        sb.append("    instrument: ").append(toIndentedString(instrument)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    last: ").append(toIndentedString(last)).append("\n");
        sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
        sb.append("    location: ").append(toIndentedString(location)).append("\n");
        sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
        sb.append("    markdown: ").append(toIndentedString(markdown)).append("\n");
        sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    next: ").append(toIndentedString(next)).append("\n");
        sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
        sb.append("    oneOf: ").append(toIndentedString(oneOf)).append("\n");
        sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
        sb.append("    partOf: ").append(toIndentedString(partOf)).append("\n");
        sb.append("    prev: ").append(toIndentedString(prev)).append("\n");
        sb.append("    preview: ").append(toIndentedString(preview)).append("\n");
        sb.append("    published: ").append(toIndentedString(published)).append("\n");
        sb.append("    radius: ").append(toIndentedString(radius)).append("\n");
        sb.append("    rel: ").append(toIndentedString(rel)).append("\n");
        sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
        sb.append("    replies: ").append(toIndentedString(replies)).append("\n");
        sb.append("    result: ").append(toIndentedString(result)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
        sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
        sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
        sb.append("    target: ").append(toIndentedString(target)).append("\n");
        sb.append("    to: ").append(toIndentedString(to)).append("\n");
        sb.append("    totalItems: ").append(toIndentedString(totalItems)).append("\n");
        sb.append("    type: ").append(toIndentedString(type)).append("\n");
        sb.append("    units: ").append(toIndentedString(units)).append("\n");
        sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    width: ").append(toIndentedString(width)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("@context");
        openapiFields.add("accuracy");
        openapiFields.add("actor");
        openapiFields.add("altitude");
        openapiFields.add("anyOf");
        openapiFields.add("attachment");
        openapiFields.add("attributedTo");
        openapiFields.add("audience");
        openapiFields.add("bcc");
        openapiFields.add("bto");
        openapiFields.add("cc");
        openapiFields.add("closed");
        openapiFields.add("content");
        openapiFields.add("current");
        openapiFields.add("deleted");
        openapiFields.add("duration");
        openapiFields.add("endTime");
        openapiFields.add("first");
        openapiFields.add("formerType");
        openapiFields.add("generator");
        openapiFields.add("height");
        openapiFields.add("href");
        openapiFields.add("hreflang");
        openapiFields.add("icon");
        openapiFields.add("id");
        openapiFields.add("image");
        openapiFields.add("inReplyTo");
        openapiFields.add("instrument");
        openapiFields.add("items");
        openapiFields.add("last");
        openapiFields.add("latitude");
        openapiFields.add("location");
        openapiFields.add("longitude");
        openapiFields.add("markdown");
        openapiFields.add("mediaType");
        openapiFields.add("name");
        openapiFields.add("next");
        openapiFields.add("object");
        openapiFields.add("oneOf");
        openapiFields.add("origin");
        openapiFields.add("partOf");
        openapiFields.add("prev");
        openapiFields.add("preview");
        openapiFields.add("published");
        openapiFields.add("radius");
        openapiFields.add("rel");
        openapiFields.add("relationship");
        openapiFields.add("replies");
        openapiFields.add("result");
        openapiFields.add("startTime");
        openapiFields.add("subject");
        openapiFields.add("summary");
        openapiFields.add("tag");
        openapiFields.add("target");
        openapiFields.add("to");
        openapiFields.add("totalItems");
        openapiFields.add("type");
        openapiFields.add("units");
        openapiFields.add("updated");
        openapiFields.add("url");
        openapiFields.add("width");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to ActivityObject
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!ActivityObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in ActivityObject is not found in the empty JSON string", ActivityObject.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!ActivityObject.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActivityObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if ((jsonObj.get("@context") != null && !jsonObj.get("@context").isJsonNull()) && !jsonObj.get("@context").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `@context` to be a primitive type in the JSON string but got `%s`", jsonObj.get("@context").toString()));
        }
        // validate the optional field `actor`
        if (jsonObj.get("actor") != null && !jsonObj.get("actor").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("actor"));
        }
        // validate the optional field `anyOf`
        if (jsonObj.get("anyOf") != null && !jsonObj.get("anyOf").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("anyOf"));
        }
        // validate the optional field `attachment`
        if (jsonObj.get("attachment") != null && !jsonObj.get("attachment").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("attachment"));
        }
        // validate the optional field `attributedTo`
        if (jsonObj.get("attributedTo") != null && !jsonObj.get("attributedTo").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("attributedTo"));
        }
        // validate the optional field `audience`
        if (jsonObj.get("audience") != null && !jsonObj.get("audience").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("audience"));
        }
        // validate the optional field `bcc`
        if (jsonObj.get("bcc") != null && !jsonObj.get("bcc").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("bcc"));
        }
        // validate the optional field `bto`
        if (jsonObj.get("bto") != null && !jsonObj.get("bto").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("bto"));
        }
        // validate the optional field `cc`
        if (jsonObj.get("cc") != null && !jsonObj.get("cc").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("cc"));
        }
        // validate the optional field `content`
        if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("content"));
        }
        // validate the optional field `current`
        if (jsonObj.get("current") != null && !jsonObj.get("current").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("current"));
        }
        // validate the optional field `first`
        if (jsonObj.get("first") != null && !jsonObj.get("first").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("first"));
        }
        // validate the optional field `formerType`
        if (jsonObj.get("formerType") != null && !jsonObj.get("formerType").isJsonNull()) {
            ActivityObjectType.validateJsonElement(jsonObj.get("formerType"));
        }
        // validate the optional field `generator`
        if (jsonObj.get("generator") != null && !jsonObj.get("generator").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("generator"));
        }
        if ((jsonObj.get("href") != null && !jsonObj.get("href").isJsonNull()) && !jsonObj.get("href").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `href` to be a primitive type in the JSON string but got `%s`", jsonObj.get("href").toString()));
        }
        if ((jsonObj.get("hreflang") != null && !jsonObj.get("hreflang").isJsonNull()) && !jsonObj.get("hreflang").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `hreflang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hreflang").toString()));
        }
        // validate the optional field `icon`
        if (jsonObj.get("icon") != null && !jsonObj.get("icon").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("icon"));
        }
        if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
        }
        // validate the optional field `image`
        if (jsonObj.get("image") != null && !jsonObj.get("image").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("image"));
        }
        // validate the optional field `inReplyTo`
        if (jsonObj.get("inReplyTo") != null && !jsonObj.get("inReplyTo").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("inReplyTo"));
        }
        // validate the optional field `instrument`
        if (jsonObj.get("instrument") != null && !jsonObj.get("instrument").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("instrument"));
        }
        if (jsonObj.get("items") != null && !jsonObj.get("items").isJsonNull()) {
            JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
            if (jsonArrayitems != null) {
                // ensure the json data is an array
                if (!jsonObj.get("items").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
                }

                // validate the optional field `items` (array)
                for (int i = 0; i < jsonArrayitems.size(); i++) {
                    ActivityObject.validateJsonElement(jsonArrayitems.get(i));
                }
                ;
            }
        }
        // validate the optional field `last`
        if (jsonObj.get("last") != null && !jsonObj.get("last").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("last"));
        }
        // validate the optional field `location`
        if (jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("location"));
        }
        if ((jsonObj.get("markdown") != null && !jsonObj.get("markdown").isJsonNull()) && !jsonObj.get("markdown").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `markdown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("markdown").toString()));
        }
        if ((jsonObj.get("mediaType") != null && !jsonObj.get("mediaType").isJsonNull()) && !jsonObj.get("mediaType").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `mediaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaType").toString()));
        }
        if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
        }
        // validate the optional field `next`
        if (jsonObj.get("next") != null && !jsonObj.get("next").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("next"));
        }
        // validate the optional field `object`
        if (jsonObj.get("object") != null && !jsonObj.get("object").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("object"));
        }
        // validate the optional field `oneOf`
        if (jsonObj.get("oneOf") != null && !jsonObj.get("oneOf").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("oneOf"));
        }
        // validate the optional field `origin`
        if (jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("origin"));
        }
        // validate the optional field `partOf`
        if (jsonObj.get("partOf") != null && !jsonObj.get("partOf").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("partOf"));
        }
        // validate the optional field `prev`
        if (jsonObj.get("prev") != null && !jsonObj.get("prev").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("prev"));
        }
        // validate the optional field `preview`
        if (jsonObj.get("preview") != null && !jsonObj.get("preview").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("preview"));
        }
        if ((jsonObj.get("rel") != null && !jsonObj.get("rel").isJsonNull()) && !jsonObj.get("rel").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `rel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rel").toString()));
        }
        // validate the optional field `relationship`
        if (jsonObj.get("relationship") != null && !jsonObj.get("relationship").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("relationship"));
        }
        // validate the optional field `replies`
        if (jsonObj.get("replies") != null && !jsonObj.get("replies").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("replies"));
        }
        // validate the optional field `result`
        if (jsonObj.get("result") != null && !jsonObj.get("result").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("result"));
        }
        // validate the optional field `subject`
        if (jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("subject"));
        }
        if ((jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) && !jsonObj.get("summary").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `summary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("summary").toString()));
        }
        // validate the optional field `tag`
        if (jsonObj.get("tag") != null && !jsonObj.get("tag").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("tag"));
        }
        // validate the optional field `target`
        if (jsonObj.get("target") != null && !jsonObj.get("target").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("target"));
        }
        // validate the optional field `to`
        if (jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("to"));
        }
        // validate the optional field `type`
        if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
            ActivityObjectType.validateJsonElement(jsonObj.get("type"));
        }
        if ((jsonObj.get("units") != null && !jsonObj.get("units").isJsonNull()) && !jsonObj.get("units").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `units` to be a primitive type in the JSON string but got `%s`", jsonObj.get("units").toString()));
        }
        // validate the optional field `url`
        if (jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) {
            ActivityObject.validateJsonElement(jsonObj.get("url"));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!ActivityObject.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'ActivityObject' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<ActivityObject> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(ActivityObject.class));

            return (TypeAdapter<T>) new TypeAdapter<ActivityObject>() {
                @Override
                public void write(JsonWriter out, ActivityObject value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public ActivityObject read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of ActivityObject given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of ActivityObject
     * @throws IOException if the JSON string is invalid with respect to ActivityObject
     */
    public static ActivityObject fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, ActivityObject.class);
    }

    /**
     * Convert an instance of ActivityObject to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

