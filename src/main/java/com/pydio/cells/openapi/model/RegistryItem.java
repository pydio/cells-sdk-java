/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.RegistryDao;
import com.pydio.cells.openapi.model.RegistryEdge;
import com.pydio.cells.openapi.model.RegistryGeneric;
import com.pydio.cells.openapi.model.RegistryServer;
import com.pydio.cells.openapi.model.RegistryService;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RegistryItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-05T12:35:48.905699+02:00[Europe/Berlin]")
public class RegistryItem {
  public static final String SERIALIZED_NAME_ADJACENTS = "adjacents";
  @SerializedName(SERIALIZED_NAME_ADJACENTS)
  private List<RegistryItem> adjacents = null;

  public static final String SERIALIZED_NAME_DAO = "dao";
  @SerializedName(SERIALIZED_NAME_DAO)
  private RegistryDao dao;

  public static final String SERIALIZED_NAME_EDGE = "edge";
  @SerializedName(SERIALIZED_NAME_EDGE)
  private RegistryEdge edge;

  public static final String SERIALIZED_NAME_GENERIC = "generic";
  @SerializedName(SERIALIZED_NAME_GENERIC)
  private RegistryGeneric generic;

  public static final String SERIALIZED_NAME_SERVER = "server";
  @SerializedName(SERIALIZED_NAME_SERVER)
  private RegistryServer server;

  public static final String SERIALIZED_NAME_SERVICE = "service";
  @SerializedName(SERIALIZED_NAME_SERVICE)
  private RegistryService service;

  public RegistryItem() { 
  }

  public RegistryItem adjacents(List<RegistryItem> adjacents) {
    
    this.adjacents = adjacents;
    return this;
  }

  public RegistryItem addAdjacentsItem(RegistryItem adjacentsItem) {
    if (this.adjacents == null) {
      this.adjacents = new ArrayList<RegistryItem>();
    }
    this.adjacents.add(adjacentsItem);
    return this;
  }

   /**
   * Get adjacents
   * @return adjacents
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RegistryItem> getAdjacents() {
    return adjacents;
  }


  public void setAdjacents(List<RegistryItem> adjacents) {
    this.adjacents = adjacents;
  }


  public RegistryItem dao(RegistryDao dao) {
    
    this.dao = dao;
    return this;
  }

   /**
   * Get dao
   * @return dao
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegistryDao getDao() {
    return dao;
  }


  public void setDao(RegistryDao dao) {
    this.dao = dao;
  }


  public RegistryItem edge(RegistryEdge edge) {
    
    this.edge = edge;
    return this;
  }

   /**
   * Get edge
   * @return edge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegistryEdge getEdge() {
    return edge;
  }


  public void setEdge(RegistryEdge edge) {
    this.edge = edge;
  }


  public RegistryItem generic(RegistryGeneric generic) {
    
    this.generic = generic;
    return this;
  }

   /**
   * Get generic
   * @return generic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegistryGeneric getGeneric() {
    return generic;
  }


  public void setGeneric(RegistryGeneric generic) {
    this.generic = generic;
  }


  public RegistryItem server(RegistryServer server) {
    
    this.server = server;
    return this;
  }

   /**
   * Get server
   * @return server
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegistryServer getServer() {
    return server;
  }


  public void setServer(RegistryServer server) {
    this.server = server;
  }


  public RegistryItem service(RegistryService service) {
    
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RegistryService getService() {
    return service;
  }


  public void setService(RegistryService service) {
    this.service = service;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistryItem registryItem = (RegistryItem) o;
    return Objects.equals(this.adjacents, registryItem.adjacents) &&
        Objects.equals(this.dao, registryItem.dao) &&
        Objects.equals(this.edge, registryItem.edge) &&
        Objects.equals(this.generic, registryItem.generic) &&
        Objects.equals(this.server, registryItem.server) &&
        Objects.equals(this.service, registryItem.service);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjacents, dao, edge, generic, server, service);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistryItem {\n");
    sb.append("    adjacents: ").append(toIndentedString(adjacents)).append("\n");
    sb.append("    dao: ").append(toIndentedString(dao)).append("\n");
    sb.append("    edge: ").append(toIndentedString(edge)).append("\n");
    sb.append("    generic: ").append(toIndentedString(generic)).append("\n");
    sb.append("    server: ").append(toIndentedString(server)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

