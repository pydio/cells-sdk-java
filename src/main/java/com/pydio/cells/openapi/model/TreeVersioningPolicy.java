/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.TreeVersioningKeepPeriod;
import com.pydio.cells.openapi.model.TreeVersioningNodeDeletedStrategy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TreeVersioningPolicy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-11-16T07:08:43.163+01:00")
public class TreeVersioningPolicy {
  @SerializedName("Uuid")
  private String uuid = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("VersionsDataSourceName")
  private String versionsDataSourceName = null;

  @SerializedName("VersionsDataSourceBucket")
  private String versionsDataSourceBucket = null;

  @SerializedName("MaxTotalSize")
  private String maxTotalSize = null;

  @SerializedName("MaxSizePerFile")
  private String maxSizePerFile = null;

  @SerializedName("IgnoreFilesGreaterThan")
  private String ignoreFilesGreaterThan = null;

  @SerializedName("KeepPeriods")
  private List<TreeVersioningKeepPeriod> keepPeriods = null;

  @SerializedName("NodeDeletedStrategy")
  private TreeVersioningNodeDeletedStrategy nodeDeletedStrategy = null;

  public TreeVersioningPolicy uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public TreeVersioningPolicy name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TreeVersioningPolicy description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TreeVersioningPolicy versionsDataSourceName(String versionsDataSourceName) {
    this.versionsDataSourceName = versionsDataSourceName;
    return this;
  }

   /**
   * Get versionsDataSourceName
   * @return versionsDataSourceName
  **/
  @ApiModelProperty(value = "")
  public String getVersionsDataSourceName() {
    return versionsDataSourceName;
  }

  public void setVersionsDataSourceName(String versionsDataSourceName) {
    this.versionsDataSourceName = versionsDataSourceName;
  }

  public TreeVersioningPolicy versionsDataSourceBucket(String versionsDataSourceBucket) {
    this.versionsDataSourceBucket = versionsDataSourceBucket;
    return this;
  }

   /**
   * Get versionsDataSourceBucket
   * @return versionsDataSourceBucket
  **/
  @ApiModelProperty(value = "")
  public String getVersionsDataSourceBucket() {
    return versionsDataSourceBucket;
  }

  public void setVersionsDataSourceBucket(String versionsDataSourceBucket) {
    this.versionsDataSourceBucket = versionsDataSourceBucket;
  }

  public TreeVersioningPolicy maxTotalSize(String maxTotalSize) {
    this.maxTotalSize = maxTotalSize;
    return this;
  }

   /**
   * Get maxTotalSize
   * @return maxTotalSize
  **/
  @ApiModelProperty(value = "")
  public String getMaxTotalSize() {
    return maxTotalSize;
  }

  public void setMaxTotalSize(String maxTotalSize) {
    this.maxTotalSize = maxTotalSize;
  }

  public TreeVersioningPolicy maxSizePerFile(String maxSizePerFile) {
    this.maxSizePerFile = maxSizePerFile;
    return this;
  }

   /**
   * Get maxSizePerFile
   * @return maxSizePerFile
  **/
  @ApiModelProperty(value = "")
  public String getMaxSizePerFile() {
    return maxSizePerFile;
  }

  public void setMaxSizePerFile(String maxSizePerFile) {
    this.maxSizePerFile = maxSizePerFile;
  }

  public TreeVersioningPolicy ignoreFilesGreaterThan(String ignoreFilesGreaterThan) {
    this.ignoreFilesGreaterThan = ignoreFilesGreaterThan;
    return this;
  }

   /**
   * Get ignoreFilesGreaterThan
   * @return ignoreFilesGreaterThan
  **/
  @ApiModelProperty(value = "")
  public String getIgnoreFilesGreaterThan() {
    return ignoreFilesGreaterThan;
  }

  public void setIgnoreFilesGreaterThan(String ignoreFilesGreaterThan) {
    this.ignoreFilesGreaterThan = ignoreFilesGreaterThan;
  }

  public TreeVersioningPolicy keepPeriods(List<TreeVersioningKeepPeriod> keepPeriods) {
    this.keepPeriods = keepPeriods;
    return this;
  }

  public TreeVersioningPolicy addKeepPeriodsItem(TreeVersioningKeepPeriod keepPeriodsItem) {
    if (this.keepPeriods == null) {
      this.keepPeriods = new ArrayList<TreeVersioningKeepPeriod>();
    }
    this.keepPeriods.add(keepPeriodsItem);
    return this;
  }

   /**
   * Get keepPeriods
   * @return keepPeriods
  **/
  @ApiModelProperty(value = "")
  public List<TreeVersioningKeepPeriod> getKeepPeriods() {
    return keepPeriods;
  }

  public void setKeepPeriods(List<TreeVersioningKeepPeriod> keepPeriods) {
    this.keepPeriods = keepPeriods;
  }

  public TreeVersioningPolicy nodeDeletedStrategy(TreeVersioningNodeDeletedStrategy nodeDeletedStrategy) {
    this.nodeDeletedStrategy = nodeDeletedStrategy;
    return this;
  }

   /**
   * Get nodeDeletedStrategy
   * @return nodeDeletedStrategy
  **/
  @ApiModelProperty(value = "")
  public TreeVersioningNodeDeletedStrategy getNodeDeletedStrategy() {
    return nodeDeletedStrategy;
  }

  public void setNodeDeletedStrategy(TreeVersioningNodeDeletedStrategy nodeDeletedStrategy) {
    this.nodeDeletedStrategy = nodeDeletedStrategy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TreeVersioningPolicy treeVersioningPolicy = (TreeVersioningPolicy) o;
    return Objects.equals(this.uuid, treeVersioningPolicy.uuid) &&
        Objects.equals(this.name, treeVersioningPolicy.name) &&
        Objects.equals(this.description, treeVersioningPolicy.description) &&
        Objects.equals(this.versionsDataSourceName, treeVersioningPolicy.versionsDataSourceName) &&
        Objects.equals(this.versionsDataSourceBucket, treeVersioningPolicy.versionsDataSourceBucket) &&
        Objects.equals(this.maxTotalSize, treeVersioningPolicy.maxTotalSize) &&
        Objects.equals(this.maxSizePerFile, treeVersioningPolicy.maxSizePerFile) &&
        Objects.equals(this.ignoreFilesGreaterThan, treeVersioningPolicy.ignoreFilesGreaterThan) &&
        Objects.equals(this.keepPeriods, treeVersioningPolicy.keepPeriods) &&
        Objects.equals(this.nodeDeletedStrategy, treeVersioningPolicy.nodeDeletedStrategy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, description, versionsDataSourceName, versionsDataSourceBucket, maxTotalSize, maxSizePerFile, ignoreFilesGreaterThan, keepPeriods, nodeDeletedStrategy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TreeVersioningPolicy {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    versionsDataSourceName: ").append(toIndentedString(versionsDataSourceName)).append("\n");
    sb.append("    versionsDataSourceBucket: ").append(toIndentedString(versionsDataSourceBucket)).append("\n");
    sb.append("    maxTotalSize: ").append(toIndentedString(maxTotalSize)).append("\n");
    sb.append("    maxSizePerFile: ").append(toIndentedString(maxSizePerFile)).append("\n");
    sb.append("    ignoreFilesGreaterThan: ").append(toIndentedString(ignoreFilesGreaterThan)).append("\n");
    sb.append("    keepPeriods: ").append(toIndentedString(keepPeriods)).append("\n");
    sb.append("    nodeDeletedStrategy: ").append(toIndentedString(nodeDeletedStrategy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

