/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.TreeNode;
import com.pydio.cells.openapi.model.TreeNodeType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TreeListNodesRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-19T22:47:44.466567+01:00[Europe/Berlin]")
public class TreeListNodesRequest {
  public static final String SERIALIZED_NAME_NODE = "Node";
  @SerializedName(SERIALIZED_NAME_NODE)
  private TreeNode node;

  public static final String SERIALIZED_NAME_RECURSIVE = "Recursive";
  @SerializedName(SERIALIZED_NAME_RECURSIVE)
  private Boolean recursive;

  public static final String SERIALIZED_NAME_ANCESTORS = "Ancestors";
  @SerializedName(SERIALIZED_NAME_ANCESTORS)
  private Boolean ancestors;

  public static final String SERIALIZED_NAME_WITH_VERSIONS = "WithVersions";
  @SerializedName(SERIALIZED_NAME_WITH_VERSIONS)
  private Boolean withVersions;

  public static final String SERIALIZED_NAME_WITH_COMMITS = "WithCommits";
  @SerializedName(SERIALIZED_NAME_WITH_COMMITS)
  private Boolean withCommits;

  public static final String SERIALIZED_NAME_LIMIT = "Limit";
  @SerializedName(SERIALIZED_NAME_LIMIT)
  private String limit;

  public static final String SERIALIZED_NAME_OFFSET = "Offset";
  @SerializedName(SERIALIZED_NAME_OFFSET)
  private String offset;

  public static final String SERIALIZED_NAME_FILTER_TYPE = "FilterType";
  @SerializedName(SERIALIZED_NAME_FILTER_TYPE)
  private TreeNodeType filterType = TreeNodeType.UNKNOWN;

  public TreeListNodesRequest() { 
  }

  public TreeListNodesRequest node(TreeNode node) {
    
    this.node = node;
    return this;
  }

   /**
   * Get node
   * @return node
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TreeNode getNode() {
    return node;
  }


  public void setNode(TreeNode node) {
    this.node = node;
  }


  public TreeListNodesRequest recursive(Boolean recursive) {
    
    this.recursive = recursive;
    return this;
  }

   /**
   * Get recursive
   * @return recursive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRecursive() {
    return recursive;
  }


  public void setRecursive(Boolean recursive) {
    this.recursive = recursive;
  }


  public TreeListNodesRequest ancestors(Boolean ancestors) {
    
    this.ancestors = ancestors;
    return this;
  }

   /**
   * Get ancestors
   * @return ancestors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAncestors() {
    return ancestors;
  }


  public void setAncestors(Boolean ancestors) {
    this.ancestors = ancestors;
  }


  public TreeListNodesRequest withVersions(Boolean withVersions) {
    
    this.withVersions = withVersions;
    return this;
  }

   /**
   * Get withVersions
   * @return withVersions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWithVersions() {
    return withVersions;
  }


  public void setWithVersions(Boolean withVersions) {
    this.withVersions = withVersions;
  }


  public TreeListNodesRequest withCommits(Boolean withCommits) {
    
    this.withCommits = withCommits;
    return this;
  }

   /**
   * Get withCommits
   * @return withCommits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getWithCommits() {
    return withCommits;
  }


  public void setWithCommits(Boolean withCommits) {
    this.withCommits = withCommits;
  }


  public TreeListNodesRequest limit(String limit) {
    
    this.limit = limit;
    return this;
  }

   /**
   * Get limit
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLimit() {
    return limit;
  }


  public void setLimit(String limit) {
    this.limit = limit;
  }


  public TreeListNodesRequest offset(String offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOffset() {
    return offset;
  }


  public void setOffset(String offset) {
    this.offset = offset;
  }


  public TreeListNodesRequest filterType(TreeNodeType filterType) {
    
    this.filterType = filterType;
    return this;
  }

   /**
   * Get filterType
   * @return filterType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TreeNodeType getFilterType() {
    return filterType;
  }


  public void setFilterType(TreeNodeType filterType) {
    this.filterType = filterType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TreeListNodesRequest treeListNodesRequest = (TreeListNodesRequest) o;
    return Objects.equals(this.node, treeListNodesRequest.node) &&
        Objects.equals(this.recursive, treeListNodesRequest.recursive) &&
        Objects.equals(this.ancestors, treeListNodesRequest.ancestors) &&
        Objects.equals(this.withVersions, treeListNodesRequest.withVersions) &&
        Objects.equals(this.withCommits, treeListNodesRequest.withCommits) &&
        Objects.equals(this.limit, treeListNodesRequest.limit) &&
        Objects.equals(this.offset, treeListNodesRequest.offset) &&
        Objects.equals(this.filterType, treeListNodesRequest.filterType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(node, recursive, ancestors, withVersions, withCommits, limit, offset, filterType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TreeListNodesRequest {\n");
    sb.append("    node: ").append(toIndentedString(node)).append("\n");
    sb.append("    recursive: ").append(toIndentedString(recursive)).append("\n");
    sb.append("    ancestors: ").append(toIndentedString(ancestors)).append("\n");
    sb.append("    withVersions: ").append(toIndentedString(withVersions)).append("\n");
    sb.append("    withCommits: ").append(toIndentedString(withCommits)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

