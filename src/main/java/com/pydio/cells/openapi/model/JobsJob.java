/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * JobsJob
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-04-23T18:11:59.271+02:00")



public class JobsJob {
  @SerializedName("ID")
  private String ID = null;

  @SerializedName("Label")
  private String label = null;

  @SerializedName("Owner")
  private String owner = null;

  @SerializedName("Inactive")
  private Boolean inactive = null;

  @SerializedName("Custom")
  private Boolean custom = null;

  @SerializedName("Languages")
  private List<String> languages = null;

  @SerializedName("EventNames")
  private List<String> eventNames = null;

  @SerializedName("Schedule")
  private com.pydio.cells.openapi.model.JobsSchedule schedule = null;

  @SerializedName("AutoStart")
  private Boolean autoStart = null;

  @SerializedName("AutoClean")
  private Boolean autoClean = null;

  @SerializedName("Actions")
  private List<JobsAction> actions = null;

  @SerializedName("MaxConcurrency")
  private Integer maxConcurrency = null;

  @SerializedName("TasksSilentUpdate")
  private Boolean tasksSilentUpdate = null;

  @SerializedName("Tasks")
  private List<com.pydio.cells.openapi.model.JobsTask> tasks = null;

  @SerializedName("NodeEventFilter")
  private JobsNodesSelector nodeEventFilter = null;

  @SerializedName("UserEventFilter")
  private com.pydio.cells.openapi.model.JobsUsersSelector userEventFilter = null;

  @SerializedName("IdmFilter")
  private JobsIdmSelector idmFilter = null;

  @SerializedName("ContextMetaFilter")
  private com.pydio.cells.openapi.model.JobsContextMetaFilter contextMetaFilter = null;

  @SerializedName("Parameters")
  private List<JobsJobParameter> parameters = null;

  public JobsJob ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @ApiModelProperty(value = "")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public JobsJob label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @ApiModelProperty(value = "")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public JobsJob owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public JobsJob inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

   /**
   * Get inactive
   * @return inactive
  **/
  @ApiModelProperty(value = "")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public JobsJob custom(Boolean custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @ApiModelProperty(value = "")
  public Boolean isCustom() {
    return custom;
  }

  public void setCustom(Boolean custom) {
    this.custom = custom;
  }

  public JobsJob languages(List<String> languages) {
    this.languages = languages;
    return this;
  }

  public JobsJob addLanguagesItem(String languagesItem) {
    if (this.languages == null) {
      this.languages = new ArrayList<String>();
    }
    this.languages.add(languagesItem);
    return this;
  }

   /**
   * Get languages
   * @return languages
  **/
  @ApiModelProperty(value = "")
  public List<String> getLanguages() {
    return languages;
  }

  public void setLanguages(List<String> languages) {
    this.languages = languages;
  }

  public JobsJob eventNames(List<String> eventNames) {
    this.eventNames = eventNames;
    return this;
  }

  public JobsJob addEventNamesItem(String eventNamesItem) {
    if (this.eventNames == null) {
      this.eventNames = new ArrayList<String>();
    }
    this.eventNames.add(eventNamesItem);
    return this;
  }

   /**
   * Get eventNames
   * @return eventNames
  **/
  @ApiModelProperty(value = "")
  public List<String> getEventNames() {
    return eventNames;
  }

  public void setEventNames(List<String> eventNames) {
    this.eventNames = eventNames;
  }

  public JobsJob schedule(com.pydio.cells.openapi.model.JobsSchedule schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @ApiModelProperty(value = "")
  public com.pydio.cells.openapi.model.JobsSchedule getSchedule() {
    return schedule;
  }

  public void setSchedule(JobsSchedule schedule) {
    this.schedule = schedule;
  }

  public JobsJob autoStart(Boolean autoStart) {
    this.autoStart = autoStart;
    return this;
  }

   /**
   * Get autoStart
   * @return autoStart
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutoStart() {
    return autoStart;
  }

  public void setAutoStart(Boolean autoStart) {
    this.autoStart = autoStart;
  }

  public JobsJob autoClean(Boolean autoClean) {
    this.autoClean = autoClean;
    return this;
  }

   /**
   * Get autoClean
   * @return autoClean
  **/
  @ApiModelProperty(value = "")
  public Boolean isAutoClean() {
    return autoClean;
  }

  public void setAutoClean(Boolean autoClean) {
    this.autoClean = autoClean;
  }

  public JobsJob actions(List<JobsAction> actions) {
    this.actions = actions;
    return this;
  }

  public JobsJob addActionsItem(JobsAction actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<JobsAction>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @ApiModelProperty(value = "")
  public List<JobsAction> getActions() {
    return actions;
  }

  public void setActions(List<JobsAction> actions) {
    this.actions = actions;
  }

  public JobsJob maxConcurrency(Integer maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
    return this;
  }

   /**
   * Get maxConcurrency
   * @return maxConcurrency
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxConcurrency() {
    return maxConcurrency;
  }

  public void setMaxConcurrency(Integer maxConcurrency) {
    this.maxConcurrency = maxConcurrency;
  }

  public JobsJob tasksSilentUpdate(Boolean tasksSilentUpdate) {
    this.tasksSilentUpdate = tasksSilentUpdate;
    return this;
  }

   /**
   * Get tasksSilentUpdate
   * @return tasksSilentUpdate
  **/
  @ApiModelProperty(value = "")
  public Boolean isTasksSilentUpdate() {
    return tasksSilentUpdate;
  }

  public void setTasksSilentUpdate(Boolean tasksSilentUpdate) {
    this.tasksSilentUpdate = tasksSilentUpdate;
  }

  public JobsJob tasks(List<com.pydio.cells.openapi.model.JobsTask> tasks) {
    this.tasks = tasks;
    return this;
  }

  public JobsJob addTasksItem(com.pydio.cells.openapi.model.JobsTask tasksItem) {
    if (this.tasks == null) {
      this.tasks = new ArrayList<com.pydio.cells.openapi.model.JobsTask>();
    }
    this.tasks.add(tasksItem);
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @ApiModelProperty(value = "")
  public List<com.pydio.cells.openapi.model.JobsTask> getTasks() {
    return tasks;
  }

  public void setTasks(List<JobsTask> tasks) {
    this.tasks = tasks;
  }

  public JobsJob nodeEventFilter(JobsNodesSelector nodeEventFilter) {
    this.nodeEventFilter = nodeEventFilter;
    return this;
  }

   /**
   * Get nodeEventFilter
   * @return nodeEventFilter
  **/
  @ApiModelProperty(value = "")
  public JobsNodesSelector getNodeEventFilter() {
    return nodeEventFilter;
  }

  public void setNodeEventFilter(JobsNodesSelector nodeEventFilter) {
    this.nodeEventFilter = nodeEventFilter;
  }

  public JobsJob userEventFilter(com.pydio.cells.openapi.model.JobsUsersSelector userEventFilter) {
    this.userEventFilter = userEventFilter;
    return this;
  }

   /**
   * Get userEventFilter
   * @return userEventFilter
  **/
  @ApiModelProperty(value = "")
  public com.pydio.cells.openapi.model.JobsUsersSelector getUserEventFilter() {
    return userEventFilter;
  }

  public void setUserEventFilter(JobsUsersSelector userEventFilter) {
    this.userEventFilter = userEventFilter;
  }

  public JobsJob idmFilter(JobsIdmSelector idmFilter) {
    this.idmFilter = idmFilter;
    return this;
  }

   /**
   * Get idmFilter
   * @return idmFilter
  **/
  @ApiModelProperty(value = "")
  public JobsIdmSelector getIdmFilter() {
    return idmFilter;
  }

  public void setIdmFilter(JobsIdmSelector idmFilter) {
    this.idmFilter = idmFilter;
  }

  public JobsJob contextMetaFilter(com.pydio.cells.openapi.model.JobsContextMetaFilter contextMetaFilter) {
    this.contextMetaFilter = contextMetaFilter;
    return this;
  }

   /**
   * Get contextMetaFilter
   * @return contextMetaFilter
  **/
  @ApiModelProperty(value = "")
  public com.pydio.cells.openapi.model.JobsContextMetaFilter getContextMetaFilter() {
    return contextMetaFilter;
  }

  public void setContextMetaFilter(JobsContextMetaFilter contextMetaFilter) {
    this.contextMetaFilter = contextMetaFilter;
  }

  public JobsJob parameters(List<JobsJobParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public JobsJob addParametersItem(JobsJobParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<JobsJobParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @ApiModelProperty(value = "")
  public List<JobsJobParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<JobsJobParameter> parameters) {
    this.parameters = parameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobsJob jobsJob = (JobsJob) o;
    return Objects.equals(this.ID, jobsJob.ID) &&
        Objects.equals(this.label, jobsJob.label) &&
        Objects.equals(this.owner, jobsJob.owner) &&
        Objects.equals(this.inactive, jobsJob.inactive) &&
        Objects.equals(this.custom, jobsJob.custom) &&
        Objects.equals(this.languages, jobsJob.languages) &&
        Objects.equals(this.eventNames, jobsJob.eventNames) &&
        Objects.equals(this.schedule, jobsJob.schedule) &&
        Objects.equals(this.autoStart, jobsJob.autoStart) &&
        Objects.equals(this.autoClean, jobsJob.autoClean) &&
        Objects.equals(this.actions, jobsJob.actions) &&
        Objects.equals(this.maxConcurrency, jobsJob.maxConcurrency) &&
        Objects.equals(this.tasksSilentUpdate, jobsJob.tasksSilentUpdate) &&
        Objects.equals(this.tasks, jobsJob.tasks) &&
        Objects.equals(this.nodeEventFilter, jobsJob.nodeEventFilter) &&
        Objects.equals(this.userEventFilter, jobsJob.userEventFilter) &&
        Objects.equals(this.idmFilter, jobsJob.idmFilter) &&
        Objects.equals(this.contextMetaFilter, jobsJob.contextMetaFilter) &&
        Objects.equals(this.parameters, jobsJob.parameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, label, owner, inactive, custom, languages, eventNames, schedule, autoStart, autoClean, actions, maxConcurrency, tasksSilentUpdate, tasks, nodeEventFilter, userEventFilter, idmFilter, contextMetaFilter, parameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobsJob {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    languages: ").append(toIndentedString(languages)).append("\n");
    sb.append("    eventNames: ").append(toIndentedString(eventNames)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    autoStart: ").append(toIndentedString(autoStart)).append("\n");
    sb.append("    autoClean: ").append(toIndentedString(autoClean)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    maxConcurrency: ").append(toIndentedString(maxConcurrency)).append("\n");
    sb.append("    tasksSilentUpdate: ").append(toIndentedString(tasksSilentUpdate)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    nodeEventFilter: ").append(toIndentedString(nodeEventFilter)).append("\n");
    sb.append("    userEventFilter: ").append(toIndentedString(userEventFilter)).append("\n");
    sb.append("    idmFilter: ").append(toIndentedString(idmFilter)).append("\n");
    sb.append("    contextMetaFilter: ").append(toIndentedString(contextMetaFilter)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

