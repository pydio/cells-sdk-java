/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.RestShareLinkAccessType;
import com.pydio.cells.openapi.model.RestShareLinkTargetUser;
import com.pydio.cells.openapi.model.ServiceResourcePolicy;
import com.pydio.cells.openapi.model.TreeNode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * RestShareLink
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-09T15:35:02.533763+02:00[Europe/Berlin]")
public class RestShareLink {
  public static final String SERIALIZED_NAME_ACCESS_END = "AccessEnd";
  @SerializedName(SERIALIZED_NAME_ACCESS_END)
  private String accessEnd;

  public static final String SERIALIZED_NAME_ACCESS_START = "AccessStart";
  @SerializedName(SERIALIZED_NAME_ACCESS_START)
  private String accessStart;

  public static final String SERIALIZED_NAME_CURRENT_DOWNLOADS = "CurrentDownloads";
  @SerializedName(SERIALIZED_NAME_CURRENT_DOWNLOADS)
  private String currentDownloads;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LABEL = "Label";
  @SerializedName(SERIALIZED_NAME_LABEL)
  private String label;

  public static final String SERIALIZED_NAME_LINK_HASH = "LinkHash";
  @SerializedName(SERIALIZED_NAME_LINK_HASH)
  private String linkHash;

  public static final String SERIALIZED_NAME_LINK_URL = "LinkUrl";
  @SerializedName(SERIALIZED_NAME_LINK_URL)
  private String linkUrl;

  public static final String SERIALIZED_NAME_MAX_DOWNLOADS = "MaxDownloads";
  @SerializedName(SERIALIZED_NAME_MAX_DOWNLOADS)
  private String maxDownloads;

  public static final String SERIALIZED_NAME_PASSWORD_REQUIRED = "PasswordRequired";
  @SerializedName(SERIALIZED_NAME_PASSWORD_REQUIRED)
  private Boolean passwordRequired;

  public static final String SERIALIZED_NAME_PERMISSIONS = "Permissions";
  @SerializedName(SERIALIZED_NAME_PERMISSIONS)
  private List<RestShareLinkAccessType> permissions = null;

  public static final String SERIALIZED_NAME_POLICIES = "Policies";
  @SerializedName(SERIALIZED_NAME_POLICIES)
  private List<ServiceResourcePolicy> policies = null;

  public static final String SERIALIZED_NAME_POLICIES_CONTEXT_EDITABLE = "PoliciesContextEditable";
  @SerializedName(SERIALIZED_NAME_POLICIES_CONTEXT_EDITABLE)
  private Boolean policiesContextEditable;

  public static final String SERIALIZED_NAME_RESTRICT_TO_TARGET_USERS = "RestrictToTargetUsers";
  @SerializedName(SERIALIZED_NAME_RESTRICT_TO_TARGET_USERS)
  private Boolean restrictToTargetUsers;

  public static final String SERIALIZED_NAME_ROOT_NODES = "RootNodes";
  @SerializedName(SERIALIZED_NAME_ROOT_NODES)
  private List<TreeNode> rootNodes = null;

  public static final String SERIALIZED_NAME_TARGET_USERS = "TargetUsers";
  @SerializedName(SERIALIZED_NAME_TARGET_USERS)
  private Map<String, RestShareLinkTargetUser> targetUsers = null;

  public static final String SERIALIZED_NAME_USER_LOGIN = "UserLogin";
  @SerializedName(SERIALIZED_NAME_USER_LOGIN)
  private String userLogin;

  public static final String SERIALIZED_NAME_USER_UUID = "UserUuid";
  @SerializedName(SERIALIZED_NAME_USER_UUID)
  private String userUuid;

  public static final String SERIALIZED_NAME_UUID = "Uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_VIEW_TEMPLATE_NAME = "ViewTemplateName";
  @SerializedName(SERIALIZED_NAME_VIEW_TEMPLATE_NAME)
  private String viewTemplateName;

  public RestShareLink() { 
  }

  public RestShareLink accessEnd(String accessEnd) {
    
    this.accessEnd = accessEnd;
    return this;
  }

   /**
   * Get accessEnd
   * @return accessEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessEnd() {
    return accessEnd;
  }


  public void setAccessEnd(String accessEnd) {
    this.accessEnd = accessEnd;
  }


  public RestShareLink accessStart(String accessStart) {
    
    this.accessStart = accessStart;
    return this;
  }

   /**
   * Get accessStart
   * @return accessStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccessStart() {
    return accessStart;
  }


  public void setAccessStart(String accessStart) {
    this.accessStart = accessStart;
  }


  public RestShareLink currentDownloads(String currentDownloads) {
    
    this.currentDownloads = currentDownloads;
    return this;
  }

   /**
   * Get currentDownloads
   * @return currentDownloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentDownloads() {
    return currentDownloads;
  }


  public void setCurrentDownloads(String currentDownloads) {
    this.currentDownloads = currentDownloads;
  }


  public RestShareLink description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public RestShareLink label(String label) {
    
    this.label = label;
    return this;
  }

   /**
   * Get label
   * @return label
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLabel() {
    return label;
  }


  public void setLabel(String label) {
    this.label = label;
  }


  public RestShareLink linkHash(String linkHash) {
    
    this.linkHash = linkHash;
    return this;
  }

   /**
   * Get linkHash
   * @return linkHash
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLinkHash() {
    return linkHash;
  }


  public void setLinkHash(String linkHash) {
    this.linkHash = linkHash;
  }


  public RestShareLink linkUrl(String linkUrl) {
    
    this.linkUrl = linkUrl;
    return this;
  }

   /**
   * Get linkUrl
   * @return linkUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLinkUrl() {
    return linkUrl;
  }


  public void setLinkUrl(String linkUrl) {
    this.linkUrl = linkUrl;
  }


  public RestShareLink maxDownloads(String maxDownloads) {
    
    this.maxDownloads = maxDownloads;
    return this;
  }

   /**
   * Get maxDownloads
   * @return maxDownloads
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaxDownloads() {
    return maxDownloads;
  }


  public void setMaxDownloads(String maxDownloads) {
    this.maxDownloads = maxDownloads;
  }


  public RestShareLink passwordRequired(Boolean passwordRequired) {
    
    this.passwordRequired = passwordRequired;
    return this;
  }

   /**
   * Get passwordRequired
   * @return passwordRequired
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPasswordRequired() {
    return passwordRequired;
  }


  public void setPasswordRequired(Boolean passwordRequired) {
    this.passwordRequired = passwordRequired;
  }


  public RestShareLink permissions(List<RestShareLinkAccessType> permissions) {
    
    this.permissions = permissions;
    return this;
  }

  public RestShareLink addPermissionsItem(RestShareLinkAccessType permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<RestShareLinkAccessType>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RestShareLinkAccessType> getPermissions() {
    return permissions;
  }


  public void setPermissions(List<RestShareLinkAccessType> permissions) {
    this.permissions = permissions;
  }


  public RestShareLink policies(List<ServiceResourcePolicy> policies) {
    
    this.policies = policies;
    return this;
  }

  public RestShareLink addPoliciesItem(ServiceResourcePolicy policiesItem) {
    if (this.policies == null) {
      this.policies = new ArrayList<ServiceResourcePolicy>();
    }
    this.policies.add(policiesItem);
    return this;
  }

   /**
   * Get policies
   * @return policies
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ServiceResourcePolicy> getPolicies() {
    return policies;
  }


  public void setPolicies(List<ServiceResourcePolicy> policies) {
    this.policies = policies;
  }


  public RestShareLink policiesContextEditable(Boolean policiesContextEditable) {
    
    this.policiesContextEditable = policiesContextEditable;
    return this;
  }

   /**
   * Get policiesContextEditable
   * @return policiesContextEditable
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPoliciesContextEditable() {
    return policiesContextEditable;
  }


  public void setPoliciesContextEditable(Boolean policiesContextEditable) {
    this.policiesContextEditable = policiesContextEditable;
  }


  public RestShareLink restrictToTargetUsers(Boolean restrictToTargetUsers) {
    
    this.restrictToTargetUsers = restrictToTargetUsers;
    return this;
  }

   /**
   * Get restrictToTargetUsers
   * @return restrictToTargetUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRestrictToTargetUsers() {
    return restrictToTargetUsers;
  }


  public void setRestrictToTargetUsers(Boolean restrictToTargetUsers) {
    this.restrictToTargetUsers = restrictToTargetUsers;
  }


  public RestShareLink rootNodes(List<TreeNode> rootNodes) {
    
    this.rootNodes = rootNodes;
    return this;
  }

  public RestShareLink addRootNodesItem(TreeNode rootNodesItem) {
    if (this.rootNodes == null) {
      this.rootNodes = new ArrayList<TreeNode>();
    }
    this.rootNodes.add(rootNodesItem);
    return this;
  }

   /**
   * Get rootNodes
   * @return rootNodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<TreeNode> getRootNodes() {
    return rootNodes;
  }


  public void setRootNodes(List<TreeNode> rootNodes) {
    this.rootNodes = rootNodes;
  }


  public RestShareLink targetUsers(Map<String, RestShareLinkTargetUser> targetUsers) {
    
    this.targetUsers = targetUsers;
    return this;
  }

  public RestShareLink putTargetUsersItem(String key, RestShareLinkTargetUser targetUsersItem) {
    if (this.targetUsers == null) {
      this.targetUsers = new HashMap<String, RestShareLinkTargetUser>();
    }
    this.targetUsers.put(key, targetUsersItem);
    return this;
  }

   /**
   * Get targetUsers
   * @return targetUsers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, RestShareLinkTargetUser> getTargetUsers() {
    return targetUsers;
  }


  public void setTargetUsers(Map<String, RestShareLinkTargetUser> targetUsers) {
    this.targetUsers = targetUsers;
  }


  public RestShareLink userLogin(String userLogin) {
    
    this.userLogin = userLogin;
    return this;
  }

   /**
   * Get userLogin
   * @return userLogin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserLogin() {
    return userLogin;
  }


  public void setUserLogin(String userLogin) {
    this.userLogin = userLogin;
  }


  public RestShareLink userUuid(String userUuid) {
    
    this.userUuid = userUuid;
    return this;
  }

   /**
   * Get userUuid
   * @return userUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserUuid() {
    return userUuid;
  }


  public void setUserUuid(String userUuid) {
    this.userUuid = userUuid;
  }


  public RestShareLink uuid(String uuid) {
    
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUuid() {
    return uuid;
  }


  public void setUuid(String uuid) {
    this.uuid = uuid;
  }


  public RestShareLink viewTemplateName(String viewTemplateName) {
    
    this.viewTemplateName = viewTemplateName;
    return this;
  }

   /**
   * Get viewTemplateName
   * @return viewTemplateName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getViewTemplateName() {
    return viewTemplateName;
  }


  public void setViewTemplateName(String viewTemplateName) {
    this.viewTemplateName = viewTemplateName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RestShareLink restShareLink = (RestShareLink) o;
    return Objects.equals(this.accessEnd, restShareLink.accessEnd) &&
        Objects.equals(this.accessStart, restShareLink.accessStart) &&
        Objects.equals(this.currentDownloads, restShareLink.currentDownloads) &&
        Objects.equals(this.description, restShareLink.description) &&
        Objects.equals(this.label, restShareLink.label) &&
        Objects.equals(this.linkHash, restShareLink.linkHash) &&
        Objects.equals(this.linkUrl, restShareLink.linkUrl) &&
        Objects.equals(this.maxDownloads, restShareLink.maxDownloads) &&
        Objects.equals(this.passwordRequired, restShareLink.passwordRequired) &&
        Objects.equals(this.permissions, restShareLink.permissions) &&
        Objects.equals(this.policies, restShareLink.policies) &&
        Objects.equals(this.policiesContextEditable, restShareLink.policiesContextEditable) &&
        Objects.equals(this.restrictToTargetUsers, restShareLink.restrictToTargetUsers) &&
        Objects.equals(this.rootNodes, restShareLink.rootNodes) &&
        Objects.equals(this.targetUsers, restShareLink.targetUsers) &&
        Objects.equals(this.userLogin, restShareLink.userLogin) &&
        Objects.equals(this.userUuid, restShareLink.userUuid) &&
        Objects.equals(this.uuid, restShareLink.uuid) &&
        Objects.equals(this.viewTemplateName, restShareLink.viewTemplateName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessEnd, accessStart, currentDownloads, description, label, linkHash, linkUrl, maxDownloads, passwordRequired, permissions, policies, policiesContextEditable, restrictToTargetUsers, rootNodes, targetUsers, userLogin, userUuid, uuid, viewTemplateName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RestShareLink {\n");
    sb.append("    accessEnd: ").append(toIndentedString(accessEnd)).append("\n");
    sb.append("    accessStart: ").append(toIndentedString(accessStart)).append("\n");
    sb.append("    currentDownloads: ").append(toIndentedString(currentDownloads)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    linkHash: ").append(toIndentedString(linkHash)).append("\n");
    sb.append("    linkUrl: ").append(toIndentedString(linkUrl)).append("\n");
    sb.append("    maxDownloads: ").append(toIndentedString(maxDownloads)).append("\n");
    sb.append("    passwordRequired: ").append(toIndentedString(passwordRequired)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    policiesContextEditable: ").append(toIndentedString(policiesContextEditable)).append("\n");
    sb.append("    restrictToTargetUsers: ").append(toIndentedString(restrictToTargetUsers)).append("\n");
    sb.append("    rootNodes: ").append(toIndentedString(rootNodes)).append("\n");
    sb.append("    targetUsers: ").append(toIndentedString(targetUsers)).append("\n");
    sb.append("    userLogin: ").append(toIndentedString(userLogin)).append("\n");
    sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    viewTemplateName: ").append(toIndentedString(viewTemplateName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

