/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.TypeAdapter;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.JSON;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * IdmPolicy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-19T16:47:50.322929+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class IdmPolicy {
    public static final String SERIALIZED_NAME_ORM_ACTIONS = "OrmActions";
    @SerializedName(SERIALIZED_NAME_ORM_ACTIONS)
    @javax.annotation.Nullable
    private List<IdmPolicyAction> ormActions = new ArrayList<>();

    public static final String SERIALIZED_NAME_ORM_RESOURCES = "OrmResources";
    @SerializedName(SERIALIZED_NAME_ORM_RESOURCES)
    @javax.annotation.Nullable
    private List<IdmPolicyResource> ormResources = new ArrayList<>();

    public static final String SERIALIZED_NAME_ORM_SUBJECTS = "OrmSubjects";
    @SerializedName(SERIALIZED_NAME_ORM_SUBJECTS)
    @javax.annotation.Nullable
    private List<IdmPolicySubject> ormSubjects = new ArrayList<>();

    public static final String SERIALIZED_NAME_ACTIONS = "actions";
    @SerializedName(SERIALIZED_NAME_ACTIONS)
    @javax.annotation.Nullable
    private List<String> actions = new ArrayList<>();

    public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
    @SerializedName(SERIALIZED_NAME_CONDITIONS)
    @javax.annotation.Nullable
    private Map<String, IdmPolicyCondition> conditions = new HashMap<>();

    public static final String SERIALIZED_NAME_DESCRIPTION = "description";
    @SerializedName(SERIALIZED_NAME_DESCRIPTION)
    @javax.annotation.Nullable
    private String description;

    public static final String SERIALIZED_NAME_EFFECT = "effect";
    @SerializedName(SERIALIZED_NAME_EFFECT)
    @javax.annotation.Nullable
    private IdmPolicyEffect effect = IdmPolicyEffect.UNKNOWN;

    public static final String SERIALIZED_NAME_ID = "id";
    @SerializedName(SERIALIZED_NAME_ID)
    @javax.annotation.Nullable
    private String id;

    public static final String SERIALIZED_NAME_RESOURCES = "resources";
    @SerializedName(SERIALIZED_NAME_RESOURCES)
    @javax.annotation.Nullable
    private List<String> resources = new ArrayList<>();

    public static final String SERIALIZED_NAME_SUBJECTS = "subjects";
    @SerializedName(SERIALIZED_NAME_SUBJECTS)
    @javax.annotation.Nullable
    private List<String> subjects = new ArrayList<>();

    public IdmPolicy() {
    }

    public IdmPolicy ormActions(@javax.annotation.Nullable List<IdmPolicyAction> ormActions) {
        this.ormActions = ormActions;
        return this;
    }

    public IdmPolicy addOrmActionsItem(IdmPolicyAction ormActionsItem) {
        if (this.ormActions == null) {
            this.ormActions = new ArrayList<>();
        }
        this.ormActions.add(ormActionsItem);
        return this;
    }

    /**
     * Get ormActions
     *
     * @return ormActions
     */
    @javax.annotation.Nullable
    public List<IdmPolicyAction> getOrmActions() {
        return ormActions;
    }

    public void setOrmActions(@javax.annotation.Nullable List<IdmPolicyAction> ormActions) {
        this.ormActions = ormActions;
    }


    public IdmPolicy ormResources(@javax.annotation.Nullable List<IdmPolicyResource> ormResources) {
        this.ormResources = ormResources;
        return this;
    }

    public IdmPolicy addOrmResourcesItem(IdmPolicyResource ormResourcesItem) {
        if (this.ormResources == null) {
            this.ormResources = new ArrayList<>();
        }
        this.ormResources.add(ormResourcesItem);
        return this;
    }

    /**
     * Get ormResources
     *
     * @return ormResources
     */
    @javax.annotation.Nullable
    public List<IdmPolicyResource> getOrmResources() {
        return ormResources;
    }

    public void setOrmResources(@javax.annotation.Nullable List<IdmPolicyResource> ormResources) {
        this.ormResources = ormResources;
    }


    public IdmPolicy ormSubjects(@javax.annotation.Nullable List<IdmPolicySubject> ormSubjects) {
        this.ormSubjects = ormSubjects;
        return this;
    }

    public IdmPolicy addOrmSubjectsItem(IdmPolicySubject ormSubjectsItem) {
        if (this.ormSubjects == null) {
            this.ormSubjects = new ArrayList<>();
        }
        this.ormSubjects.add(ormSubjectsItem);
        return this;
    }

    /**
     * Get ormSubjects
     *
     * @return ormSubjects
     */
    @javax.annotation.Nullable
    public List<IdmPolicySubject> getOrmSubjects() {
        return ormSubjects;
    }

    public void setOrmSubjects(@javax.annotation.Nullable List<IdmPolicySubject> ormSubjects) {
        this.ormSubjects = ormSubjects;
    }


    public IdmPolicy actions(@javax.annotation.Nullable List<String> actions) {
        this.actions = actions;
        return this;
    }

    public IdmPolicy addActionsItem(String actionsItem) {
        if (this.actions == null) {
            this.actions = new ArrayList<>();
        }
        this.actions.add(actionsItem);
        return this;
    }

    /**
     * Get actions
     *
     * @return actions
     */
    @javax.annotation.Nullable
    public List<String> getActions() {
        return actions;
    }

    public void setActions(@javax.annotation.Nullable List<String> actions) {
        this.actions = actions;
    }


    public IdmPolicy conditions(@javax.annotation.Nullable Map<String, IdmPolicyCondition> conditions) {
        this.conditions = conditions;
        return this;
    }

    public IdmPolicy putConditionsItem(String key, IdmPolicyCondition conditionsItem) {
        if (this.conditions == null) {
            this.conditions = new HashMap<>();
        }
        this.conditions.put(key, conditionsItem);
        return this;
    }

    /**
     * Get conditions
     *
     * @return conditions
     */
    @javax.annotation.Nullable
    public Map<String, IdmPolicyCondition> getConditions() {
        return conditions;
    }

    public void setConditions(@javax.annotation.Nullable Map<String, IdmPolicyCondition> conditions) {
        this.conditions = conditions;
    }


    public IdmPolicy description(@javax.annotation.Nullable String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     *
     * @return description
     */
    @javax.annotation.Nullable
    public String getDescription() {
        return description;
    }

    public void setDescription(@javax.annotation.Nullable String description) {
        this.description = description;
    }


    public IdmPolicy effect(@javax.annotation.Nullable IdmPolicyEffect effect) {
        this.effect = effect;
        return this;
    }

    /**
     * Get effect
     *
     * @return effect
     */
    @javax.annotation.Nullable
    public IdmPolicyEffect getEffect() {
        return effect;
    }

    public void setEffect(@javax.annotation.Nullable IdmPolicyEffect effect) {
        this.effect = effect;
    }


    public IdmPolicy id(@javax.annotation.Nullable String id) {
        this.id = id;
        return this;
    }

    /**
     * Get id
     *
     * @return id
     */
    @javax.annotation.Nullable
    public String getId() {
        return id;
    }

    public void setId(@javax.annotation.Nullable String id) {
        this.id = id;
    }


    public IdmPolicy resources(@javax.annotation.Nullable List<String> resources) {
        this.resources = resources;
        return this;
    }

    public IdmPolicy addResourcesItem(String resourcesItem) {
        if (this.resources == null) {
            this.resources = new ArrayList<>();
        }
        this.resources.add(resourcesItem);
        return this;
    }

    /**
     * Get resources
     *
     * @return resources
     */
    @javax.annotation.Nullable
    public List<String> getResources() {
        return resources;
    }

    public void setResources(@javax.annotation.Nullable List<String> resources) {
        this.resources = resources;
    }


    public IdmPolicy subjects(@javax.annotation.Nullable List<String> subjects) {
        this.subjects = subjects;
        return this;
    }

    public IdmPolicy addSubjectsItem(String subjectsItem) {
        if (this.subjects == null) {
            this.subjects = new ArrayList<>();
        }
        this.subjects.add(subjectsItem);
        return this;
    }

    /**
     * Get subjects
     *
     * @return subjects
     */
    @javax.annotation.Nullable
    public List<String> getSubjects() {
        return subjects;
    }

    public void setSubjects(@javax.annotation.Nullable List<String> subjects) {
        this.subjects = subjects;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        IdmPolicy idmPolicy = (IdmPolicy) o;
        return Objects.equals(this.ormActions, idmPolicy.ormActions) &&
                Objects.equals(this.ormResources, idmPolicy.ormResources) &&
                Objects.equals(this.ormSubjects, idmPolicy.ormSubjects) &&
                Objects.equals(this.actions, idmPolicy.actions) &&
                Objects.equals(this.conditions, idmPolicy.conditions) &&
                Objects.equals(this.description, idmPolicy.description) &&
                Objects.equals(this.effect, idmPolicy.effect) &&
                Objects.equals(this.id, idmPolicy.id) &&
                Objects.equals(this.resources, idmPolicy.resources) &&
                Objects.equals(this.subjects, idmPolicy.subjects);
    }

    @Override
    public int hashCode() {
        return Objects.hash(ormActions, ormResources, ormSubjects, actions, conditions, description, effect, id, resources, subjects);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class IdmPolicy {\n");
        sb.append("    ormActions: ").append(toIndentedString(ormActions)).append("\n");
        sb.append("    ormResources: ").append(toIndentedString(ormResources)).append("\n");
        sb.append("    ormSubjects: ").append(toIndentedString(ormSubjects)).append("\n");
        sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
        sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    effect: ").append(toIndentedString(effect)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
        sb.append("    subjects: ").append(toIndentedString(subjects)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }


    public static HashSet<String> openapiFields;
    public static HashSet<String> openapiRequiredFields;

    static {
        // a set of all properties/fields (JSON key names)
        openapiFields = new HashSet<String>();
        openapiFields.add("OrmActions");
        openapiFields.add("OrmResources");
        openapiFields.add("OrmSubjects");
        openapiFields.add("actions");
        openapiFields.add("conditions");
        openapiFields.add("description");
        openapiFields.add("effect");
        openapiFields.add("id");
        openapiFields.add("resources");
        openapiFields.add("subjects");

        // a set of required properties/fields (JSON key names)
        openapiRequiredFields = new HashSet<String>();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to IdmPolicy
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        if (jsonElement == null) {
            if (!IdmPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
                throw new IllegalArgumentException(String.format("The required field(s) %s in IdmPolicy is not found in the empty JSON string", IdmPolicy.openapiRequiredFields.toString()));
            }
        }

        Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
        // check to see if the JSON string contains additional fields
        for (Map.Entry<String, JsonElement> entry : entries) {
            if (!IdmPolicy.openapiFields.contains(entry.getKey())) {
                throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdmPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
            }
        }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
        if (jsonObj.get("OrmActions") != null && !jsonObj.get("OrmActions").isJsonNull()) {
            JsonArray jsonArrayormActions = jsonObj.getAsJsonArray("OrmActions");
            if (jsonArrayormActions != null) {
                // ensure the json data is an array
                if (!jsonObj.get("OrmActions").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `OrmActions` to be an array in the JSON string but got `%s`", jsonObj.get("OrmActions").toString()));
                }

                // validate the optional field `OrmActions` (array)
                for (int i = 0; i < jsonArrayormActions.size(); i++) {
                    IdmPolicyAction.validateJsonElement(jsonArrayormActions.get(i));
                }
                ;
            }
        }
        if (jsonObj.get("OrmResources") != null && !jsonObj.get("OrmResources").isJsonNull()) {
            JsonArray jsonArrayormResources = jsonObj.getAsJsonArray("OrmResources");
            if (jsonArrayormResources != null) {
                // ensure the json data is an array
                if (!jsonObj.get("OrmResources").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `OrmResources` to be an array in the JSON string but got `%s`", jsonObj.get("OrmResources").toString()));
                }

                // validate the optional field `OrmResources` (array)
                for (int i = 0; i < jsonArrayormResources.size(); i++) {
                    IdmPolicyResource.validateJsonElement(jsonArrayormResources.get(i));
                }
                ;
            }
        }
        if (jsonObj.get("OrmSubjects") != null && !jsonObj.get("OrmSubjects").isJsonNull()) {
            JsonArray jsonArrayormSubjects = jsonObj.getAsJsonArray("OrmSubjects");
            if (jsonArrayormSubjects != null) {
                // ensure the json data is an array
                if (!jsonObj.get("OrmSubjects").isJsonArray()) {
                    throw new IllegalArgumentException(String.format("Expected the field `OrmSubjects` to be an array in the JSON string but got `%s`", jsonObj.get("OrmSubjects").toString()));
                }

                // validate the optional field `OrmSubjects` (array)
                for (int i = 0; i < jsonArrayormSubjects.size(); i++) {
                    IdmPolicySubject.validateJsonElement(jsonArrayormSubjects.get(i));
                }
                ;
            }
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("actions") != null && !jsonObj.get("actions").isJsonNull() && !jsonObj.get("actions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `actions` to be an array in the JSON string but got `%s`", jsonObj.get("actions").toString()));
        }
        if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
        }
        // validate the optional field `effect`
        if (jsonObj.get("effect") != null && !jsonObj.get("effect").isJsonNull()) {
            IdmPolicyEffect.validateJsonElement(jsonObj.get("effect"));
        }
        if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
            throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull() && !jsonObj.get("resources").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `resources` to be an array in the JSON string but got `%s`", jsonObj.get("resources").toString()));
        }
        // ensure the optional json data is an array if present
        if (jsonObj.get("subjects") != null && !jsonObj.get("subjects").isJsonNull() && !jsonObj.get("subjects").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `subjects` to be an array in the JSON string but got `%s`", jsonObj.get("subjects").toString()));
        }
    }

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!IdmPolicy.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'IdmPolicy' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<IdmPolicy> thisAdapter
                    = gson.getDelegateAdapter(this, TypeToken.get(IdmPolicy.class));

            return (TypeAdapter<T>) new TypeAdapter<IdmPolicy>() {
                @Override
                public void write(JsonWriter out, IdmPolicy value) throws IOException {
                    JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
                    elementAdapter.write(out, obj);
                }

                @Override
                public IdmPolicy read(JsonReader in) throws IOException {
                    JsonElement jsonElement = elementAdapter.read(in);
                    validateJsonElement(jsonElement);
                    return thisAdapter.fromJsonTree(jsonElement);
                }

            }.nullSafe();
        }
    }

    /**
     * Create an instance of IdmPolicy given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of IdmPolicy
     * @throws IOException if the JSON string is invalid with respect to IdmPolicy
     */
    public static IdmPolicy fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, IdmPolicy.class);
    }

    /**
     * Convert an instance of IdmPolicy to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

