/*
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.pydio.cells.openapi.model.IdmACLAction;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * IdmACLSingleQuery
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-09T15:35:02.533763+02:00[Europe/Berlin]")
public class IdmACLSingleQuery {
  public static final String SERIALIZED_NAME_ACTIONS = "Actions";
  @SerializedName(SERIALIZED_NAME_ACTIONS)
  private List<IdmACLAction> actions = null;

  public static final String SERIALIZED_NAME_NODE_I_DS = "NodeIDs";
  @SerializedName(SERIALIZED_NAME_NODE_I_DS)
  private List<String> nodeIDs = null;

  public static final String SERIALIZED_NAME_ROLE_I_DS = "RoleIDs";
  @SerializedName(SERIALIZED_NAME_ROLE_I_DS)
  private List<String> roleIDs = null;

  public static final String SERIALIZED_NAME_WORKSPACE_I_DS = "WorkspaceIDs";
  @SerializedName(SERIALIZED_NAME_WORKSPACE_I_DS)
  private List<String> workspaceIDs = null;

  public static final String SERIALIZED_NAME_NOT = "not";
  @SerializedName(SERIALIZED_NAME_NOT)
  private Boolean not;

  public IdmACLSingleQuery() { 
  }

  public IdmACLSingleQuery actions(List<IdmACLAction> actions) {
    
    this.actions = actions;
    return this;
  }

  public IdmACLSingleQuery addActionsItem(IdmACLAction actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<IdmACLAction>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IdmACLAction> getActions() {
    return actions;
  }


  public void setActions(List<IdmACLAction> actions) {
    this.actions = actions;
  }


  public IdmACLSingleQuery nodeIDs(List<String> nodeIDs) {
    
    this.nodeIDs = nodeIDs;
    return this;
  }

  public IdmACLSingleQuery addNodeIDsItem(String nodeIDsItem) {
    if (this.nodeIDs == null) {
      this.nodeIDs = new ArrayList<String>();
    }
    this.nodeIDs.add(nodeIDsItem);
    return this;
  }

   /**
   * Get nodeIDs
   * @return nodeIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNodeIDs() {
    return nodeIDs;
  }


  public void setNodeIDs(List<String> nodeIDs) {
    this.nodeIDs = nodeIDs;
  }


  public IdmACLSingleQuery roleIDs(List<String> roleIDs) {
    
    this.roleIDs = roleIDs;
    return this;
  }

  public IdmACLSingleQuery addRoleIDsItem(String roleIDsItem) {
    if (this.roleIDs == null) {
      this.roleIDs = new ArrayList<String>();
    }
    this.roleIDs.add(roleIDsItem);
    return this;
  }

   /**
   * Get roleIDs
   * @return roleIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getRoleIDs() {
    return roleIDs;
  }


  public void setRoleIDs(List<String> roleIDs) {
    this.roleIDs = roleIDs;
  }


  public IdmACLSingleQuery workspaceIDs(List<String> workspaceIDs) {
    
    this.workspaceIDs = workspaceIDs;
    return this;
  }

  public IdmACLSingleQuery addWorkspaceIDsItem(String workspaceIDsItem) {
    if (this.workspaceIDs == null) {
      this.workspaceIDs = new ArrayList<String>();
    }
    this.workspaceIDs.add(workspaceIDsItem);
    return this;
  }

   /**
   * Get workspaceIDs
   * @return workspaceIDs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getWorkspaceIDs() {
    return workspaceIDs;
  }


  public void setWorkspaceIDs(List<String> workspaceIDs) {
    this.workspaceIDs = workspaceIDs;
  }


  public IdmACLSingleQuery not(Boolean not) {
    
    this.not = not;
    return this;
  }

   /**
   * Get not
   * @return not
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNot() {
    return not;
  }


  public void setNot(Boolean not) {
    this.not = not;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdmACLSingleQuery idmACLSingleQuery = (IdmACLSingleQuery) o;
    return Objects.equals(this.actions, idmACLSingleQuery.actions) &&
        Objects.equals(this.nodeIDs, idmACLSingleQuery.nodeIDs) &&
        Objects.equals(this.roleIDs, idmACLSingleQuery.roleIDs) &&
        Objects.equals(this.workspaceIDs, idmACLSingleQuery.workspaceIDs) &&
        Objects.equals(this.not, idmACLSingleQuery.not);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actions, nodeIDs, roleIDs, workspaceIDs, not);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdmACLSingleQuery {\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    nodeIDs: ").append(toIndentedString(nodeIDs)).append("\n");
    sb.append("    roleIDs: ").append(toIndentedString(roleIDs)).append("\n");
    sb.append("    workspaceIDs: ").append(toIndentedString(workspaceIDs)).append("\n");
    sb.append("    not: ").append(toIndentedString(not)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

