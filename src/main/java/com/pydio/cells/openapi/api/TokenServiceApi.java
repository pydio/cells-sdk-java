/*
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pydio.cells.openapi.api;

import com.pydio.cells.openapi.ApiCallback;
import com.pydio.cells.openapi.ApiClient;
import com.pydio.cells.openapi.ApiException;
import com.pydio.cells.openapi.ApiResponse;
import com.pydio.cells.openapi.Configuration;
import com.pydio.cells.openapi.Pair;
import com.pydio.cells.openapi.ProgressRequestBody;
import com.pydio.cells.openapi.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.pydio.cells.openapi.model.RestDocumentAccessTokenRequest;
import com.pydio.cells.openapi.model.RestDocumentAccessTokenResponse;
import com.pydio.cells.openapi.model.RestResetPasswordRequest;
import com.pydio.cells.openapi.model.RestResetPasswordResponse;
import com.pydio.cells.openapi.model.RestResetPasswordTokenResponse;
import com.pydio.cells.openapi.model.RestRevokeRequest;
import com.pydio.cells.openapi.model.RestRevokeResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TokenServiceApi {
    private ApiClient apiClient;

    public TokenServiceApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TokenServiceApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for generateDocumentAccessToken
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call generateDocumentAccessTokenCall(com.pydio.cells.openapi.model.RestDocumentAccessTokenRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/auth/token/document";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call generateDocumentAccessTokenValidateBeforeCall(com.pydio.cells.openapi.model.RestDocumentAccessTokenRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling generateDocumentAccessToken(Async)");
        }
        

        com.squareup.okhttp.Call call = generateDocumentAccessTokenCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Generate a temporary access token for a specific document for the current user
     * 
     * @param body  (required)
     * @return RestDocumentAccessTokenResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.cells.openapi.model.RestDocumentAccessTokenResponse generateDocumentAccessToken(com.pydio.cells.openapi.model.RestDocumentAccessTokenRequest body) throws ApiException {
        ApiResponse<com.pydio.cells.openapi.model.RestDocumentAccessTokenResponse> resp = generateDocumentAccessTokenWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Generate a temporary access token for a specific document for the current user
     * 
     * @param body  (required)
     * @return ApiResponse&lt;RestDocumentAccessTokenResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.cells.openapi.model.RestDocumentAccessTokenResponse> generateDocumentAccessTokenWithHttpInfo(com.pydio.cells.openapi.model.RestDocumentAccessTokenRequest body) throws ApiException {
        com.squareup.okhttp.Call call = generateDocumentAccessTokenValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<com.pydio.cells.openapi.model.RestDocumentAccessTokenResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Generate a temporary access token for a specific document for the current user (asynchronously)
     * 
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call generateDocumentAccessTokenAsync(RestDocumentAccessTokenRequest body, final ApiCallback<com.pydio.cells.openapi.model.RestDocumentAccessTokenResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = generateDocumentAccessTokenValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RestDocumentAccessTokenResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for resetPassword
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call resetPasswordCall(com.pydio.cells.openapi.model.RestResetPasswordRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/auth/reset-password";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call resetPasswordValidateBeforeCall(com.pydio.cells.openapi.model.RestResetPasswordRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling resetPassword(Async)");
        }
        

        com.squareup.okhttp.Call call = resetPasswordCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Finish up the reset password process by providing the unique token
     * 
     * @param body  (required)
     * @return RestResetPasswordResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.cells.openapi.model.RestResetPasswordResponse resetPassword(com.pydio.cells.openapi.model.RestResetPasswordRequest body) throws ApiException {
        ApiResponse<com.pydio.cells.openapi.model.RestResetPasswordResponse> resp = resetPasswordWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Finish up the reset password process by providing the unique token
     * 
     * @param body  (required)
     * @return ApiResponse&lt;RestResetPasswordResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.cells.openapi.model.RestResetPasswordResponse> resetPasswordWithHttpInfo(com.pydio.cells.openapi.model.RestResetPasswordRequest body) throws ApiException {
        com.squareup.okhttp.Call call = resetPasswordValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<com.pydio.cells.openapi.model.RestResetPasswordResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Finish up the reset password process by providing the unique token (asynchronously)
     * 
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call resetPasswordAsync(RestResetPasswordRequest body, final ApiCallback<com.pydio.cells.openapi.model.RestResetPasswordResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = resetPasswordValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RestResetPasswordResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for resetPasswordToken
     * @param userLogin  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call resetPasswordTokenCall(String userLogin, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/auth/reset-password-token/{UserLogin}"
            .replaceAll("\\{" + "UserLogin" + "\\}", apiClient.escapeString(userLogin.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call resetPasswordTokenValidateBeforeCall(String userLogin, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'userLogin' is set
        if (userLogin == null) {
            throw new ApiException("Missing the required parameter 'userLogin' when calling resetPasswordToken(Async)");
        }
        

        com.squareup.okhttp.Call call = resetPasswordTokenCall(userLogin, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Generate a unique token for the reset password process
     * 
     * @param userLogin  (required)
     * @return RestResetPasswordTokenResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.cells.openapi.model.RestResetPasswordTokenResponse resetPasswordToken(String userLogin) throws ApiException {
        ApiResponse<com.pydio.cells.openapi.model.RestResetPasswordTokenResponse> resp = resetPasswordTokenWithHttpInfo(userLogin);
        return resp.getData();
    }

    /**
     * Generate a unique token for the reset password process
     * 
     * @param userLogin  (required)
     * @return ApiResponse&lt;RestResetPasswordTokenResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.cells.openapi.model.RestResetPasswordTokenResponse> resetPasswordTokenWithHttpInfo(String userLogin) throws ApiException {
        com.squareup.okhttp.Call call = resetPasswordTokenValidateBeforeCall(userLogin, null, null);
        Type localVarReturnType = new TypeToken<com.pydio.cells.openapi.model.RestResetPasswordTokenResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Generate a unique token for the reset password process (asynchronously)
     * 
     * @param userLogin  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call resetPasswordTokenAsync(String userLogin, final ApiCallback<com.pydio.cells.openapi.model.RestResetPasswordTokenResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = resetPasswordTokenValidateBeforeCall(userLogin, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RestResetPasswordTokenResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for revoke
     * @param body  (required)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call revokeCall(com.pydio.cells.openapi.model.RestRevokeRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/auth/token/revoke";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call revokeValidateBeforeCall(com.pydio.cells.openapi.model.RestRevokeRequest body, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling revoke(Async)");
        }
        

        com.squareup.okhttp.Call call = revokeCall(body, progressListener, progressRequestListener);
        return call;

    }

    /**
     * Revoke a JWT token
     * 
     * @param body  (required)
     * @return RestRevokeResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public com.pydio.cells.openapi.model.RestRevokeResponse revoke(com.pydio.cells.openapi.model.RestRevokeRequest body) throws ApiException {
        ApiResponse<com.pydio.cells.openapi.model.RestRevokeResponse> resp = revokeWithHttpInfo(body);
        return resp.getData();
    }

    /**
     * Revoke a JWT token
     * 
     * @param body  (required)
     * @return ApiResponse&lt;RestRevokeResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<com.pydio.cells.openapi.model.RestRevokeResponse> revokeWithHttpInfo(com.pydio.cells.openapi.model.RestRevokeRequest body) throws ApiException {
        com.squareup.okhttp.Call call = revokeValidateBeforeCall(body, null, null);
        Type localVarReturnType = new TypeToken<com.pydio.cells.openapi.model.RestRevokeResponse>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Revoke a JWT token (asynchronously)
     * 
     * @param body  (required)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call revokeAsync(RestRevokeRequest body, final ApiCallback<com.pydio.cells.openapi.model.RestRevokeResponse> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = revokeValidateBeforeCall(body, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<RestRevokeResponse>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
